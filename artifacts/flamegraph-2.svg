<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1206" onload="init(evt)" viewBox="0 0 1200 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1206" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1189.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1189.00"> </text><svg id="frames" x="10" width="1180" total_samples="37015582047"><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::put (4,321,187 samples, 0.01%)</title><rect x="0.0000%" y="1125" width="0.0117%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="4321187"/><text x="0.2500%" y="1135.50"></text></g><g><title>[libc.so.6] (4,011,380 samples, 0.01%)</title><rect x="0.0117%" y="1109" width="0.0108%" height="15" fill="rgb(217,0,24)" fg:x="4321187" fg:w="4011380"/><text x="0.2617%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;caches::lru::raw::RawLRU&lt;mws5::words::Word,bool&gt;&gt; (4,011,380 samples, 0.01%)</title><rect x="0.0117%" y="1093" width="0.0108%" height="15" fill="rgb(221,193,54)" fg:x="4321187" fg:w="4011380"/><text x="0.2617%" y="1103.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as core::ops::drop::Drop&gt;::drop (4,011,380 samples, 0.01%)</title><rect x="0.0117%" y="1077" width="0.0108%" height="15" fill="rgb(248,212,6)" fg:x="4321187" fg:w="4011380"/><text x="0.2617%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4,011,380 samples, 0.01%)</title><rect x="0.0117%" y="1061" width="0.0108%" height="15" fill="rgb(208,68,35)" fg:x="4321187" fg:w="4011380"/><text x="0.2617%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::map::Drain&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,011,380 samples, 0.01%)</title><rect x="0.0117%" y="1045" width="0.0108%" height="15" fill="rgb(232,128,0)" fg:x="4321187" fg:w="4011380"/><text x="0.2617%" y="1055.50"></text></g><g><title>&lt;hashbrown::map::Drain&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,011,380 samples, 0.01%)</title><rect x="0.0117%" y="1029" width="0.0108%" height="15" fill="rgb(207,160,47)" fg:x="4321187" fg:w="4011380"/><text x="0.2617%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4,011,380 samples, 0.01%)</title><rect x="0.0117%" y="1013" width="0.0108%" height="15" fill="rgb(228,23,34)" fg:x="4321187" fg:w="4011380"/><text x="0.2617%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawDrain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,011,380 samples, 0.01%)</title><rect x="0.0117%" y="997" width="0.0108%" height="15" fill="rgb(218,30,26)" fg:x="4321187" fg:w="4011380"/><text x="0.2617%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,011,380 samples, 0.01%)</title><rect x="0.0117%" y="981" width="0.0108%" height="15" fill="rgb(220,122,19)" fg:x="4321187" fg:w="4011380"/><text x="0.2617%" y="991.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (4,011,380 samples, 0.01%)</title><rect x="0.0117%" y="965" width="0.0108%" height="15" fill="rgb(250,228,42)" fg:x="4321187" fg:w="4011380"/><text x="0.2617%" y="975.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_full (4,011,380 samples, 0.01%)</title><rect x="0.0117%" y="949" width="0.0108%" height="15" fill="rgb(240,193,28)" fg:x="4321187" fg:w="4011380"/><text x="0.2617%" y="959.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty_or_deleted (4,011,380 samples, 0.01%)</title><rect x="0.0117%" y="933" width="0.0108%" height="15" fill="rgb(216,20,37)" fg:x="4321187" fg:w="4011380"/><text x="0.2617%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4,011,380 samples, 0.01%)</title><rect x="0.0117%" y="917" width="0.0108%" height="15" fill="rgb(206,188,39)" fg:x="4321187" fg:w="4011380"/><text x="0.2617%" y="927.50"></text></g><g><title>__GI___libc_free (8,041,118 samples, 0.02%)</title><rect x="0.0225%" y="1109" width="0.0217%" height="15" fill="rgb(217,207,13)" fg:x="8332567" fg:w="8041118"/><text x="0.2725%" y="1119.50"></text></g><g><title>checked_request2size (12,426,224 samples, 0.03%)</title><rect x="0.0767%" y="1077" width="0.0336%" height="15" fill="rgb(231,73,38)" fg:x="28386588" fg:w="12426224"/><text x="0.3267%" y="1087.50"></text></g><g><title>tcache_available (8,269,198 samples, 0.02%)</title><rect x="0.1103%" y="1077" width="0.0223%" height="15" fill="rgb(225,20,46)" fg:x="40812812" fg:w="8269198"/><text x="0.3603%" y="1087.50"></text></g><g><title>__GI___libc_malloc (41,228,038 samples, 0.11%)</title><rect x="0.0442%" y="1109" width="0.1114%" height="15" fill="rgb(210,31,41)" fg:x="16373685" fg:w="41228038"/><text x="0.2942%" y="1119.50"></text></g><g><title>tcache_try_malloc (37,043,890 samples, 0.10%)</title><rect x="0.0555%" y="1093" width="0.1001%" height="15" fill="rgb(221,200,47)" fg:x="20557833" fg:w="37043890"/><text x="0.3055%" y="1103.50"></text></g><g><title>tcache_get (8,519,713 samples, 0.02%)</title><rect x="0.1326%" y="1077" width="0.0230%" height="15" fill="rgb(226,26,5)" fg:x="49082010" fg:w="8519713"/><text x="0.3826%" y="1087.50"></text></g><g><title>tcache_get_n (8,519,713 samples, 0.02%)</title><rect x="0.1326%" y="1061" width="0.0230%" height="15" fill="rgb(249,33,26)" fg:x="49082010" fg:w="8519713"/><text x="0.3826%" y="1071.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::capturing_put (8,693,498 samples, 0.02%)</title><rect x="0.1556%" y="1109" width="0.0235%" height="15" fill="rgb(235,183,28)" fg:x="57601723" fg:w="8693498"/><text x="0.4056%" y="1119.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::replace_or_create_node (8,693,498 samples, 0.02%)</title><rect x="0.1556%" y="1093" width="0.0235%" height="15" fill="rgb(221,5,38)" fg:x="57601723" fg:w="8693498"/><text x="0.4056%" y="1103.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::detach (4,375,297 samples, 0.01%)</title><rect x="0.1673%" y="1077" width="0.0118%" height="15" fill="rgb(247,18,42)" fg:x="61919924" fg:w="4375297"/><text x="0.4173%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4,413,348 samples, 0.01%)</title><rect x="0.1791%" y="1109" width="0.0119%" height="15" fill="rgb(241,131,45)" fg:x="66295221" fg:w="4413348"/><text x="0.4291%" y="1119.50"></text></g><g><title>hashbrown::map::make_hash (4,413,348 samples, 0.01%)</title><rect x="0.1791%" y="1093" width="0.0119%" height="15" fill="rgb(249,31,29)" fg:x="66295221" fg:w="4413348"/><text x="0.4291%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,413,348 samples, 0.01%)</title><rect x="0.1791%" y="1077" width="0.0119%" height="15" fill="rgb(225,111,53)" fg:x="66295221" fg:w="4413348"/><text x="0.4291%" y="1087.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (4,413,348 samples, 0.01%)</title><rect x="0.1791%" y="1061" width="0.0119%" height="15" fill="rgb(238,160,17)" fg:x="66295221" fg:w="4413348"/><text x="0.4291%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4,413,348 samples, 0.01%)</title><rect x="0.1791%" y="1045" width="0.0119%" height="15" fill="rgb(214,148,48)" fg:x="66295221" fg:w="4413348"/><text x="0.4291%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4,413,348 samples, 0.01%)</title><rect x="0.1791%" y="1029" width="0.0119%" height="15" fill="rgb(232,36,49)" fg:x="66295221" fg:w="4413348"/><text x="0.4291%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4,413,348 samples, 0.01%)</title><rect x="0.1791%" y="1013" width="0.0119%" height="15" fill="rgb(209,103,24)" fg:x="66295221" fg:w="4413348"/><text x="0.4291%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (17,022,194 samples, 0.05%)</title><rect x="0.2485%" y="1061" width="0.0460%" height="15" fill="rgb(229,88,8)" fg:x="91970349" fg:w="17022194"/><text x="0.4985%" y="1071.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4,271,067 samples, 0.01%)</title><rect x="0.3177%" y="1045" width="0.0115%" height="15" fill="rgb(213,181,19)" fg:x="117603976" fg:w="4271067"/><text x="0.5677%" y="1055.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (4,271,067 samples, 0.01%)</title><rect x="0.3177%" y="1029" width="0.0115%" height="15" fill="rgb(254,191,54)" fg:x="117603976" fg:w="4271067"/><text x="0.5677%" y="1039.50"></text></g><g><title>core::intrinsics::likely (4,271,209 samples, 0.01%)</title><rect x="0.3293%" y="1045" width="0.0115%" height="15" fill="rgb(241,83,37)" fg:x="121875043" fg:w="4271209"/><text x="0.5793%" y="1055.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty (4,231,587 samples, 0.01%)</title><rect x="0.3408%" y="1045" width="0.0114%" height="15" fill="rgb(233,36,39)" fg:x="126146252" fg:w="4231587"/><text x="0.5908%" y="1055.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (4,231,587 samples, 0.01%)</title><rect x="0.3408%" y="1029" width="0.0114%" height="15" fill="rgb(226,3,54)" fg:x="126146252" fg:w="4231587"/><text x="0.5908%" y="1039.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4,231,587 samples, 0.01%)</title><rect x="0.3408%" y="1013" width="0.0114%" height="15" fill="rgb(245,192,40)" fg:x="126146252" fg:w="4231587"/><text x="0.5908%" y="1023.50"></text></g><g><title>hashbrown::control::tag::Tag::full (12,160,594 samples, 0.03%)</title><rect x="0.3522%" y="1045" width="0.0329%" height="15" fill="rgb(238,167,29)" fg:x="130377839" fg:w="12160594"/><text x="0.6022%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (3,785,006 samples, 0.01%)</title><rect x="0.3851%" y="1045" width="0.0102%" height="15" fill="rgb(232,182,51)" fg:x="142538433" fg:w="3785006"/><text x="0.6351%" y="1055.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (3,785,006 samples, 0.01%)</title><rect x="0.3851%" y="1029" width="0.0102%" height="15" fill="rgb(231,60,39)" fg:x="142538433" fg:w="3785006"/><text x="0.6351%" y="1039.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty_or_deleted (4,283,653 samples, 0.01%)</title><rect x="0.3953%" y="1029" width="0.0116%" height="15" fill="rgb(208,69,12)" fg:x="146323439" fg:w="4283653"/><text x="0.6453%" y="1039.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4,283,653 samples, 0.01%)</title><rect x="0.3953%" y="1013" width="0.0116%" height="15" fill="rgb(235,93,37)" fg:x="146323439" fg:w="4283653"/><text x="0.6453%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (75,600,612 samples, 0.20%)</title><rect x="0.2258%" y="1093" width="0.2042%" height="15" fill="rgb(213,116,39)" fg:x="83591611" fg:w="75600612"/><text x="0.4758%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (75,600,612 samples, 0.20%)</title><rect x="0.2258%" y="1077" width="0.2042%" height="15" fill="rgb(222,207,29)" fg:x="83591611" fg:w="75600612"/><text x="0.4758%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (50,199,680 samples, 0.14%)</title><rect x="0.2945%" y="1061" width="0.1356%" height="15" fill="rgb(206,96,30)" fg:x="108992543" fg:w="50199680"/><text x="0.5445%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (12,868,784 samples, 0.03%)</title><rect x="0.3953%" y="1045" width="0.0348%" height="15" fill="rgb(218,138,4)" fg:x="146323439" fg:w="12868784"/><text x="0.6453%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (8,585,131 samples, 0.02%)</title><rect x="0.4069%" y="1029" width="0.0232%" height="15" fill="rgb(250,191,14)" fg:x="150607092" fg:w="8585131"/><text x="0.6569%" y="1039.50"></text></g><g><title>hashbrown::control::tag::Tag::is_full (8,585,131 samples, 0.02%)</title><rect x="0.4069%" y="1013" width="0.0232%" height="15" fill="rgb(239,60,40)" fg:x="150607092" fg:w="8585131"/><text x="0.6569%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (24,331,125 samples, 0.07%)</title><rect x="0.5096%" y="997" width="0.0657%" height="15" fill="rgb(206,27,48)" fg:x="188616365" fg:w="24331125"/><text x="0.7596%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (40,762,654 samples, 0.11%)</title><rect x="0.4877%" y="1013" width="0.1101%" height="15" fill="rgb(225,35,8)" fg:x="180512242" fg:w="40762654"/><text x="0.7377%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8,327,406 samples, 0.02%)</title><rect x="0.5753%" y="997" width="0.0225%" height="15" fill="rgb(250,213,24)" fg:x="212947490" fg:w="8327406"/><text x="0.8253%" y="1007.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (42,134,492 samples, 0.11%)</title><rect x="0.7114%" y="997" width="0.1138%" height="15" fill="rgb(247,123,22)" fg:x="263337993" fg:w="42134492"/><text x="0.9614%" y="1007.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (175,682,775 samples, 0.47%)</title><rect x="0.4537%" y="1061" width="0.4746%" height="15" fill="rgb(231,138,38)" fg:x="167951044" fg:w="175682775"/><text x="0.7037%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (175,682,775 samples, 0.47%)</title><rect x="0.4537%" y="1045" width="0.4746%" height="15" fill="rgb(231,145,46)" fg:x="167951044" fg:w="175682775"/><text x="0.7037%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (175,682,775 samples, 0.47%)</title><rect x="0.4537%" y="1029" width="0.4746%" height="15" fill="rgb(251,118,11)" fg:x="167951044" fg:w="175682775"/><text x="0.7037%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (122,358,923 samples, 0.33%)</title><rect x="0.5978%" y="1013" width="0.3306%" height="15" fill="rgb(217,147,25)" fg:x="221274896" fg:w="122358923"/><text x="0.8478%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (38,161,334 samples, 0.10%)</title><rect x="0.8253%" y="997" width="0.1031%" height="15" fill="rgb(247,81,37)" fg:x="305472485" fg:w="38161334"/><text x="1.0753%" y="1007.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (4,089,219 samples, 0.01%)</title><rect x="0.9283%" y="1061" width="0.0110%" height="15" fill="rgb(209,12,38)" fg:x="343633819" fg:w="4089219"/><text x="1.1783%" y="1071.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4,089,219 samples, 0.01%)</title><rect x="0.9283%" y="1045" width="0.0110%" height="15" fill="rgb(227,1,9)" fg:x="343633819" fg:w="4089219"/><text x="1.1783%" y="1055.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4,089,219 samples, 0.01%)</title><rect x="0.9283%" y="1029" width="0.0110%" height="15" fill="rgb(248,47,43)" fg:x="343633819" fg:w="4089219"/><text x="1.1783%" y="1039.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (4,089,219 samples, 0.01%)</title><rect x="0.9283%" y="1013" width="0.0110%" height="15" fill="rgb(221,10,30)" fg:x="343633819" fg:w="4089219"/><text x="1.1783%" y="1023.50"></text></g><g><title>hashbrown::map::make_hash (217,773,920 samples, 0.59%)</title><rect x="0.4301%" y="1093" width="0.5883%" height="15" fill="rgb(210,229,1)" fg:x="159192223" fg:w="217773920"/><text x="0.6801%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (209,015,099 samples, 0.56%)</title><rect x="0.4537%" y="1077" width="0.5647%" height="15" fill="rgb(222,148,37)" fg:x="167951044" fg:w="209015099"/><text x="0.7037%" y="1087.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (29,243,105 samples, 0.08%)</title><rect x="0.9394%" y="1061" width="0.0790%" height="15" fill="rgb(234,67,33)" fg:x="347723038" fg:w="29243105"/><text x="1.1894%" y="1071.50"></text></g><g><title>&lt;mws5::words::Word as core::hash::Hash&gt;::hash (25,099,346 samples, 0.07%)</title><rect x="0.9506%" y="1045" width="0.0678%" height="15" fill="rgb(247,98,35)" fg:x="351866797" fg:w="25099346"/><text x="1.2006%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (25,099,346 samples, 0.07%)</title><rect x="0.9506%" y="1029" width="0.0678%" height="15" fill="rgb(247,138,52)" fg:x="351866797" fg:w="25099346"/><text x="1.2006%" y="1039.50"></text></g><g><title>core::hash::Hasher::write_u32 (25,099,346 samples, 0.07%)</title><rect x="0.9506%" y="1013" width="0.0678%" height="15" fill="rgb(213,79,30)" fg:x="351866797" fg:w="25099346"/><text x="1.2006%" y="1023.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (25,099,346 samples, 0.07%)</title><rect x="0.9506%" y="997" width="0.0678%" height="15" fill="rgb(246,177,23)" fg:x="351866797" fg:w="25099346"/><text x="1.2006%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (25,099,346 samples, 0.07%)</title><rect x="0.9506%" y="981" width="0.0678%" height="15" fill="rgb(230,62,27)" fg:x="351866797" fg:w="25099346"/><text x="1.2006%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (25,099,346 samples, 0.07%)</title><rect x="0.9506%" y="965" width="0.0678%" height="15" fill="rgb(216,154,8)" fg:x="351866797" fg:w="25099346"/><text x="1.2006%" y="975.50"></text></g><g><title>core::hash::sip::u8to64_le (25,099,346 samples, 0.07%)</title><rect x="0.9506%" y="949" width="0.0678%" height="15" fill="rgb(244,35,45)" fg:x="351866797" fg:w="25099346"/><text x="1.2006%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (4,340,406 samples, 0.01%)</title><rect x="1.0184%" y="1061" width="0.0117%" height="15" fill="rgb(251,115,12)" fg:x="376966143" fg:w="4340406"/><text x="1.2684%" y="1071.50"></text></g><g><title>core::ptr::write (4,340,406 samples, 0.01%)</title><rect x="1.0184%" y="1045" width="0.0117%" height="15" fill="rgb(240,54,50)" fg:x="376966143" fg:w="4340406"/><text x="1.2684%" y="1055.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (16,281,053 samples, 0.04%)</title><rect x="1.0184%" y="1077" width="0.0440%" height="15" fill="rgb(233,84,52)" fg:x="376966143" fg:w="16281053"/><text x="1.2684%" y="1087.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (11,940,647 samples, 0.03%)</title><rect x="1.0301%" y="1061" width="0.0323%" height="15" fill="rgb(207,117,47)" fg:x="381306549" fg:w="11940647"/><text x="1.2801%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (11,940,647 samples, 0.03%)</title><rect x="1.0301%" y="1045" width="0.0323%" height="15" fill="rgb(249,43,39)" fg:x="381306549" fg:w="11940647"/><text x="1.2801%" y="1055.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;bool&gt; for usize&gt;::from (7,559,989 samples, 0.02%)</title><rect x="1.0840%" y="1061" width="0.0204%" height="15" fill="rgb(209,38,44)" fg:x="401256542" fg:w="7559989"/><text x="1.3340%" y="1071.50"></text></g><g><title>hashbrown::control::tag::Tag::special_is_empty (4,257,142 samples, 0.01%)</title><rect x="1.1044%" y="1061" width="0.0115%" height="15" fill="rgb(236,212,23)" fg:x="408816531" fg:w="4257142"/><text x="1.3544%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (350,873,689 samples, 0.95%)</title><rect x="0.1910%" y="1109" width="0.9479%" height="15" fill="rgb(242,79,21)" fg:x="70708569" fg:w="350873689"/><text x="0.4410%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (44,616,115 samples, 0.12%)</title><rect x="1.0184%" y="1093" width="0.1205%" height="15" fill="rgb(211,96,35)" fg:x="376966143" fg:w="44616115"/><text x="1.2684%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner::record_item_insert_at (28,335,062 samples, 0.08%)</title><rect x="1.0624%" y="1077" width="0.0765%" height="15" fill="rgb(253,215,40)" fg:x="393247196" fg:w="28335062"/><text x="1.3124%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl_hash (8,508,585 samples, 0.02%)</title><rect x="1.1159%" y="1061" width="0.0230%" height="15" fill="rgb(211,81,21)" fg:x="413073673" fg:w="8508585"/><text x="1.3659%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl (8,508,585 samples, 0.02%)</title><rect x="1.1159%" y="1045" width="0.0230%" height="15" fill="rgb(208,190,38)" fg:x="413073673" fg:w="8508585"/><text x="1.3659%" y="1055.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (319,596,693 samples, 0.86%)</title><rect x="1.2871%" y="1061" width="0.8634%" height="15" fill="rgb(235,213,38)" fg:x="476424728" fg:w="319596693"/><text x="1.5371%" y="1071.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (154,338,037 samples, 0.42%)</title><rect x="1.7335%" y="1045" width="0.4170%" height="15" fill="rgb(237,122,38)" fg:x="641683384" fg:w="154338037"/><text x="1.9835%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,938,990,571 samples, 5.24%)</title><rect x="1.2752%" y="1093" width="5.2383%" height="15" fill="rgb(244,218,35)" fg:x="472040340" fg:w="1938990571"/><text x="1.5252%" y="1103.50">&lt;core:..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1,938,990,571 samples, 5.24%)</title><rect x="1.2752%" y="1077" width="5.2383%" height="15" fill="rgb(240,68,47)" fg:x="472040340" fg:w="1938990571"/><text x="1.5252%" y="1087.50">&lt;core:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,615,009,490 samples, 4.36%)</title><rect x="2.1505%" y="1061" width="4.3631%" height="15" fill="rgb(210,16,53)" fg:x="796021421" fg:w="1615009490"/><text x="2.4005%" y="1071.50">core:..</text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (1,615,009,490 samples, 4.36%)</title><rect x="2.1505%" y="1045" width="4.3631%" height="15" fill="rgb(235,124,12)" fg:x="796021421" fg:w="1615009490"/><text x="2.4005%" y="1055.50">mws5:..</text></g><g><title>mws5::words::Word::is_fit (1,445,885,981 samples, 3.91%)</title><rect x="2.6074%" y="1029" width="3.9062%" height="15" fill="rgb(224,169,11)" fg:x="965144930" fg:w="1445885981"/><text x="2.8574%" y="1039.50">mws5..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (369,103,077 samples, 1.00%)</title><rect x="5.5164%" y="1013" width="0.9972%" height="15" fill="rgb(250,166,2)" fg:x="2041927834" fg:w="369103077"/><text x="5.7664%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (369,103,077 samples, 1.00%)</title><rect x="5.5164%" y="997" width="0.9972%" height="15" fill="rgb(242,216,29)" fg:x="2041927834" fg:w="369103077"/><text x="5.7664%" y="1007.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (369,103,077 samples, 1.00%)</title><rect x="5.5164%" y="981" width="0.9972%" height="15" fill="rgb(230,116,27)" fg:x="2041927834" fg:w="369103077"/><text x="5.7664%" y="991.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (369,103,077 samples, 1.00%)</title><rect x="5.5164%" y="965" width="0.9972%" height="15" fill="rgb(228,99,48)" fg:x="2041927834" fg:w="369103077"/><text x="5.7664%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4,003,595 samples, 0.01%)</title><rect x="6.5352%" y="1077" width="0.0108%" height="15" fill="rgb(253,11,6)" fg:x="2419051792" fg:w="4003595"/><text x="6.7852%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,003,595 samples, 0.01%)</title><rect x="6.5352%" y="1061" width="0.0108%" height="15" fill="rgb(247,143,39)" fg:x="2419051792" fg:w="4003595"/><text x="6.7852%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (4,165,278 samples, 0.01%)</title><rect x="6.5460%" y="1077" width="0.0113%" height="15" fill="rgb(236,97,10)" fg:x="2423055387" fg:w="4165278"/><text x="6.7960%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (4,165,278 samples, 0.01%)</title><rect x="6.5460%" y="1061" width="0.0113%" height="15" fill="rgb(233,208,19)" fg:x="2423055387" fg:w="4165278"/><text x="6.7960%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (4,165,278 samples, 0.01%)</title><rect x="6.5460%" y="1045" width="0.0113%" height="15" fill="rgb(216,164,2)" fg:x="2423055387" fg:w="4165278"/><text x="6.7960%" y="1055.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,165,278 samples, 0.01%)</title><rect x="6.5460%" y="1029" width="0.0113%" height="15" fill="rgb(220,129,5)" fg:x="2423055387" fg:w="4165278"/><text x="6.7960%" y="1039.50"></text></g><g><title>core::cmp::PartialEq::ne (4,165,278 samples, 0.01%)</title><rect x="6.5460%" y="1013" width="0.0113%" height="15" fill="rgb(242,17,10)" fg:x="2423055387" fg:w="4165278"/><text x="6.7960%" y="1023.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4,165,278 samples, 0.01%)</title><rect x="6.5460%" y="997" width="0.0113%" height="15" fill="rgb(242,107,0)" fg:x="2423055387" fg:w="4165278"/><text x="6.7960%" y="1007.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (3,951,654 samples, 0.01%)</title><rect x="6.5573%" y="1045" width="0.0107%" height="15" fill="rgb(251,28,31)" fg:x="2427220665" fg:w="3951654"/><text x="6.8073%" y="1055.50"></text></g><g><title>caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt;::move_to_protected (3,951,654 samples, 0.01%)</title><rect x="6.5573%" y="1029" width="0.0107%" height="15" fill="rgb(233,223,10)" fg:x="2427220665" fg:w="3951654"/><text x="6.8073%" y="1039.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::remove_and_return_ent (3,951,654 samples, 0.01%)</title><rect x="6.5573%" y="1013" width="0.0107%" height="15" fill="rgb(215,21,27)" fg:x="2427220665" fg:w="3951654"/><text x="6.8073%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,272,289 samples, 0.01%)</title><rect x="6.6032%" y="933" width="0.0115%" height="15" fill="rgb(232,23,21)" fg:x="2444223516" fg:w="4272289"/><text x="6.8532%" y="943.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (21,351,701 samples, 0.06%)</title><rect x="6.5680%" y="997" width="0.0577%" height="15" fill="rgb(244,5,23)" fg:x="2431172319" fg:w="21351701"/><text x="6.8180%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (21,351,701 samples, 0.06%)</title><rect x="6.5680%" y="981" width="0.0577%" height="15" fill="rgb(226,81,46)" fg:x="2431172319" fg:w="21351701"/><text x="6.8180%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (21,351,701 samples, 0.06%)</title><rect x="6.5680%" y="965" width="0.0577%" height="15" fill="rgb(247,70,30)" fg:x="2431172319" fg:w="21351701"/><text x="6.8180%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17,023,168 samples, 0.05%)</title><rect x="6.5797%" y="949" width="0.0460%" height="15" fill="rgb(212,68,19)" fg:x="2435500852" fg:w="17023168"/><text x="6.8297%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4,028,215 samples, 0.01%)</title><rect x="6.6148%" y="933" width="0.0109%" height="15" fill="rgb(240,187,13)" fg:x="2448495805" fg:w="4028215"/><text x="6.8648%" y="943.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::hash_key (25,431,934 samples, 0.07%)</title><rect x="6.5680%" y="1029" width="0.0687%" height="15" fill="rgb(223,113,26)" fg:x="2431172319" fg:w="25431934"/><text x="6.8180%" y="1039.50"></text></g><g><title>&lt;caches::lfu::DefaultKeyHasher&lt;K&gt; as caches::lfu::KeyHasher&lt;K&gt;&gt;::hash_key (25,431,934 samples, 0.07%)</title><rect x="6.5680%" y="1013" width="0.0687%" height="15" fill="rgb(206,192,2)" fg:x="2431172319" fg:w="25431934"/><text x="6.8180%" y="1023.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (4,080,233 samples, 0.01%)</title><rect x="6.6257%" y="997" width="0.0110%" height="15" fill="rgb(241,108,4)" fg:x="2452524020" fg:w="4080233"/><text x="6.8757%" y="1007.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4,080,233 samples, 0.01%)</title><rect x="6.6257%" y="981" width="0.0110%" height="15" fill="rgb(247,173,49)" fg:x="2452524020" fg:w="4080233"/><text x="6.8757%" y="991.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4,080,233 samples, 0.01%)</title><rect x="6.6257%" y="965" width="0.0110%" height="15" fill="rgb(224,114,35)" fg:x="2452524020" fg:w="4080233"/><text x="6.8757%" y="975.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (4,080,233 samples, 0.01%)</title><rect x="6.6257%" y="949" width="0.0110%" height="15" fill="rgb(245,159,27)" fg:x="2452524020" fg:w="4080233"/><text x="6.8757%" y="959.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (58,307,097 samples, 0.16%)</title><rect x="6.5573%" y="1061" width="0.1575%" height="15" fill="rgb(245,172,44)" fg:x="2427220665" fg:w="58307097"/><text x="6.8073%" y="1071.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::increment (54,355,443 samples, 0.15%)</title><rect x="6.5680%" y="1045" width="0.1468%" height="15" fill="rgb(236,23,11)" fg:x="2431172319" fg:w="54355443"/><text x="6.8180%" y="1055.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::try_reset (28,923,509 samples, 0.08%)</title><rect x="6.6367%" y="1029" width="0.0781%" height="15" fill="rgb(205,117,38)" fg:x="2456604253" fg:w="28923509"/><text x="6.8867%" y="1039.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::reset (28,923,509 samples, 0.08%)</title><rect x="6.6367%" y="1013" width="0.0781%" height="15" fill="rgb(237,72,25)" fg:x="2456604253" fg:w="28923509"/><text x="6.8867%" y="1023.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset (28,923,509 samples, 0.08%)</title><rect x="6.6367%" y="997" width="0.0781%" height="15" fill="rgb(244,70,9)" fg:x="2456604253" fg:w="28923509"/><text x="6.8867%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (28,923,509 samples, 0.08%)</title><rect x="6.6367%" y="981" width="0.0781%" height="15" fill="rgb(217,125,39)" fg:x="2456604253" fg:w="28923509"/><text x="6.8867%" y="991.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset::_{{closure}} (28,923,509 samples, 0.08%)</title><rect x="6.6367%" y="965" width="0.0781%" height="15" fill="rgb(235,36,10)" fg:x="2456604253" fg:w="28923509"/><text x="6.8867%" y="975.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset (28,923,509 samples, 0.08%)</title><rect x="6.6367%" y="949" width="0.0781%" height="15" fill="rgb(251,123,47)" fg:x="2456604253" fg:w="28923509"/><text x="6.8867%" y="959.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (28,923,509 samples, 0.08%)</title><rect x="6.6367%" y="933" width="0.0781%" height="15" fill="rgb(221,13,13)" fg:x="2456604253" fg:w="28923509"/><text x="6.8867%" y="943.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset::_{{closure}} (28,923,509 samples, 0.08%)</title><rect x="6.6367%" y="917" width="0.0781%" height="15" fill="rgb(238,131,9)" fg:x="2456604253" fg:w="28923509"/><text x="6.8867%" y="927.50"></text></g><g><title>mws5::search::best_pos (78,566,919 samples, 0.21%)</title><rect x="6.5136%" y="1093" width="0.2123%" height="15" fill="rgb(211,50,8)" fg:x="2411030911" fg:w="78566919"/><text x="6.7636%" y="1103.50"></text></g><g><title>mws5::dict::Dict::match_count (62,377,165 samples, 0.17%)</title><rect x="6.5573%" y="1077" width="0.1685%" height="15" fill="rgb(245,182,24)" fg:x="2427220665" fg:w="62377165"/><text x="6.8073%" y="1087.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (4,070,068 samples, 0.01%)</title><rect x="6.7148%" y="1061" width="0.0110%" height="15" fill="rgb(242,14,37)" fg:x="2485527762" fg:w="4070068"/><text x="6.9648%" y="1071.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (4,070,068 samples, 0.01%)</title><rect x="6.7148%" y="1045" width="0.0110%" height="15" fill="rgb(246,228,12)" fg:x="2485527762" fg:w="4070068"/><text x="6.9648%" y="1055.50"></text></g><g><title>core::cell::BorrowRefMut::new (4,070,068 samples, 0.01%)</title><rect x="6.7148%" y="1029" width="0.0110%" height="15" fill="rgb(213,55,15)" fg:x="2485527762" fg:w="4070068"/><text x="6.9648%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8,577,910 samples, 0.02%)</title><rect x="6.8698%" y="885" width="0.0232%" height="15" fill="rgb(209,9,3)" fg:x="2542906300" fg:w="8577910"/><text x="7.1198%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (25,723,439 samples, 0.07%)</title><rect x="6.9369%" y="869" width="0.0695%" height="15" fill="rgb(230,59,30)" fg:x="2567719640" fg:w="25723439"/><text x="7.1869%" y="879.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (74,352,175 samples, 0.20%)</title><rect x="6.8400%" y="933" width="0.2009%" height="15" fill="rgb(209,121,21)" fg:x="2531869519" fg:w="74352175"/><text x="7.0900%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (74,352,175 samples, 0.20%)</title><rect x="6.8400%" y="917" width="0.2009%" height="15" fill="rgb(220,109,13)" fg:x="2531869519" fg:w="74352175"/><text x="7.0900%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (74,352,175 samples, 0.20%)</title><rect x="6.8400%" y="901" width="0.2009%" height="15" fill="rgb(232,18,1)" fg:x="2531869519" fg:w="74352175"/><text x="7.0900%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (54,737,484 samples, 0.15%)</title><rect x="6.8930%" y="885" width="0.1479%" height="15" fill="rgb(215,41,42)" fg:x="2551484210" fg:w="54737484"/><text x="7.1430%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (12,778,615 samples, 0.03%)</title><rect x="7.0064%" y="869" width="0.0345%" height="15" fill="rgb(224,123,36)" fg:x="2593443079" fg:w="12778615"/><text x="7.2564%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (78,386,394 samples, 0.21%)</title><rect x="6.8400%" y="965" width="0.2118%" height="15" fill="rgb(240,125,3)" fg:x="2531869519" fg:w="78386394"/><text x="7.0900%" y="975.50"></text></g><g><title>core::hash::BuildHasher::hash_one (78,386,394 samples, 0.21%)</title><rect x="6.8400%" y="949" width="0.2118%" height="15" fill="rgb(205,98,50)" fg:x="2531869519" fg:w="78386394"/><text x="7.0900%" y="959.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (4,034,219 samples, 0.01%)</title><rect x="7.0409%" y="933" width="0.0109%" height="15" fill="rgb(205,185,37)" fg:x="2606221694" fg:w="4034219"/><text x="7.2909%" y="943.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4,034,219 samples, 0.01%)</title><rect x="7.0409%" y="917" width="0.0109%" height="15" fill="rgb(238,207,15)" fg:x="2606221694" fg:w="4034219"/><text x="7.2909%" y="927.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4,034,219 samples, 0.01%)</title><rect x="7.0409%" y="901" width="0.0109%" height="15" fill="rgb(213,199,42)" fg:x="2606221694" fg:w="4034219"/><text x="7.2909%" y="911.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (4,034,219 samples, 0.01%)</title><rect x="7.0409%" y="885" width="0.0109%" height="15" fill="rgb(235,201,11)" fg:x="2606221694" fg:w="4034219"/><text x="7.2909%" y="895.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4,177,802 samples, 0.01%)</title><rect x="7.0629%" y="917" width="0.0113%" height="15" fill="rgb(207,46,11)" fg:x="2614362602" fg:w="4177802"/><text x="7.3129%" y="927.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (4,177,802 samples, 0.01%)</title><rect x="7.0629%" y="901" width="0.0113%" height="15" fill="rgb(241,35,35)" fg:x="2614362602" fg:w="4177802"/><text x="7.3129%" y="911.50"></text></g><g><title>core::intrinsics::likely (4,238,652 samples, 0.01%)</title><rect x="7.0742%" y="917" width="0.0115%" height="15" fill="rgb(243,32,47)" fg:x="2618540404" fg:w="4238652"/><text x="7.3242%" y="927.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load (4,360,986 samples, 0.01%)</title><rect x="7.0856%" y="917" width="0.0118%" height="15" fill="rgb(247,202,23)" fg:x="2622779056" fg:w="4360986"/><text x="7.3356%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (4,360,986 samples, 0.01%)</title><rect x="7.0856%" y="901" width="0.0118%" height="15" fill="rgb(219,102,11)" fg:x="2622779056" fg:w="4360986"/><text x="7.3356%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4,360,986 samples, 0.01%)</title><rect x="7.0856%" y="885" width="0.0118%" height="15" fill="rgb(243,110,44)" fg:x="2622779056" fg:w="4360986"/><text x="7.3356%" y="895.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (4,315,216 samples, 0.01%)</title><rect x="7.0974%" y="917" width="0.0117%" height="15" fill="rgb(222,74,54)" fg:x="2627140042" fg:w="4315216"/><text x="7.3474%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4,315,216 samples, 0.01%)</title><rect x="7.0974%" y="901" width="0.0117%" height="15" fill="rgb(216,99,12)" fg:x="2627140042" fg:w="4315216"/><text x="7.3474%" y="911.50"></text></g><g><title>hashbrown::control::tag::Tag::full (4,248,128 samples, 0.01%)</title><rect x="7.1090%" y="917" width="0.0115%" height="15" fill="rgb(226,22,26)" fg:x="2631455258" fg:w="4248128"/><text x="7.3590%" y="927.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (145,862,081 samples, 0.39%)</title><rect x="6.7949%" y="1045" width="0.3941%" height="15" fill="rgb(217,163,10)" fg:x="2515156134" fg:w="145862081"/><text x="7.0449%" y="1055.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (145,862,081 samples, 0.39%)</title><rect x="6.7949%" y="1029" width="0.3941%" height="15" fill="rgb(213,25,53)" fg:x="2515156134" fg:w="145862081"/><text x="7.0449%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (145,862,081 samples, 0.39%)</title><rect x="6.7949%" y="1013" width="0.3941%" height="15" fill="rgb(252,105,26)" fg:x="2515156134" fg:w="145862081"/><text x="7.0449%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (145,862,081 samples, 0.39%)</title><rect x="6.7949%" y="997" width="0.3941%" height="15" fill="rgb(220,39,43)" fg:x="2515156134" fg:w="145862081"/><text x="7.0449%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (145,862,081 samples, 0.39%)</title><rect x="6.7949%" y="981" width="0.3941%" height="15" fill="rgb(229,68,48)" fg:x="2515156134" fg:w="145862081"/><text x="7.0449%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (50,762,302 samples, 0.14%)</title><rect x="7.0518%" y="965" width="0.1371%" height="15" fill="rgb(252,8,32)" fg:x="2610255913" fg:w="50762302"/><text x="7.3018%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (50,762,302 samples, 0.14%)</title><rect x="7.0518%" y="949" width="0.1371%" height="15" fill="rgb(223,20,43)" fg:x="2610255913" fg:w="50762302"/><text x="7.3018%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (50,762,302 samples, 0.14%)</title><rect x="7.0518%" y="933" width="0.1371%" height="15" fill="rgb(229,81,49)" fg:x="2610255913" fg:w="50762302"/><text x="7.3018%" y="943.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (25,314,829 samples, 0.07%)</title><rect x="7.1205%" y="917" width="0.0684%" height="15" fill="rgb(236,28,36)" fg:x="2635703386" fg:w="25314829"/><text x="7.3705%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (25,897,884 samples, 0.07%)</title><rect x="7.2460%" y="885" width="0.0700%" height="15" fill="rgb(249,185,26)" fg:x="2682153866" fg:w="25897884"/><text x="7.4960%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (17,334,538 samples, 0.05%)</title><rect x="7.2691%" y="869" width="0.0468%" height="15" fill="rgb(249,174,33)" fg:x="2690717212" fg:w="17334538"/><text x="7.5191%" y="879.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (89,247,595 samples, 0.24%)</title><rect x="7.2460%" y="933" width="0.2411%" height="15" fill="rgb(233,201,37)" fg:x="2682153866" fg:w="89247595"/><text x="7.4960%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (89,247,595 samples, 0.24%)</title><rect x="7.2460%" y="917" width="0.2411%" height="15" fill="rgb(221,78,26)" fg:x="2682153866" fg:w="89247595"/><text x="7.4960%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (89,247,595 samples, 0.24%)</title><rect x="7.2460%" y="901" width="0.2411%" height="15" fill="rgb(250,127,30)" fg:x="2682153866" fg:w="89247595"/><text x="7.4960%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (63,349,711 samples, 0.17%)</title><rect x="7.3160%" y="885" width="0.1711%" height="15" fill="rgb(230,49,44)" fg:x="2708051750" fg:w="63349711"/><text x="7.5660%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (47,117,820 samples, 0.13%)</title><rect x="7.3598%" y="869" width="0.1273%" height="15" fill="rgb(229,67,23)" fg:x="2724283641" fg:w="47117820"/><text x="7.6098%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (97,812,806 samples, 0.26%)</title><rect x="7.2346%" y="965" width="0.2642%" height="15" fill="rgb(249,83,47)" fg:x="2677911445" fg:w="97812806"/><text x="7.4846%" y="975.50"></text></g><g><title>core::hash::BuildHasher::hash_one (93,570,385 samples, 0.25%)</title><rect x="7.2460%" y="949" width="0.2528%" height="15" fill="rgb(215,43,3)" fg:x="2682153866" fg:w="93570385"/><text x="7.4960%" y="959.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (4,322,790 samples, 0.01%)</title><rect x="7.4871%" y="933" width="0.0117%" height="15" fill="rgb(238,154,13)" fg:x="2771401461" fg:w="4322790"/><text x="7.7371%" y="943.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4,322,790 samples, 0.01%)</title><rect x="7.4871%" y="917" width="0.0117%" height="15" fill="rgb(219,56,2)" fg:x="2771401461" fg:w="4322790"/><text x="7.7371%" y="927.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4,322,790 samples, 0.01%)</title><rect x="7.4871%" y="901" width="0.0117%" height="15" fill="rgb(233,0,4)" fg:x="2771401461" fg:w="4322790"/><text x="7.7371%" y="911.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (4,322,790 samples, 0.01%)</title><rect x="7.4871%" y="885" width="0.0117%" height="15" fill="rgb(235,30,7)" fg:x="2771401461" fg:w="4322790"/><text x="7.7371%" y="895.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (8,834,804 samples, 0.02%)</title><rect x="7.5082%" y="917" width="0.0239%" height="15" fill="rgb(250,79,13)" fg:x="2779192934" fg:w="8834804"/><text x="7.7582%" y="927.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (8,834,804 samples, 0.02%)</title><rect x="7.5082%" y="901" width="0.0239%" height="15" fill="rgb(211,146,34)" fg:x="2779192934" fg:w="8834804"/><text x="7.7582%" y="911.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (8,834,804 samples, 0.02%)</title><rect x="7.5082%" y="885" width="0.0239%" height="15" fill="rgb(228,22,38)" fg:x="2779192934" fg:w="8834804"/><text x="7.7582%" y="895.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (8,834,804 samples, 0.02%)</title><rect x="7.5082%" y="869" width="0.0239%" height="15" fill="rgb(235,168,5)" fg:x="2779192934" fg:w="8834804"/><text x="7.7582%" y="879.50"></text></g><g><title>core::intrinsics::likely (4,145,921 samples, 0.01%)</title><rect x="7.5320%" y="917" width="0.0112%" height="15" fill="rgb(221,155,16)" fg:x="2788027738" fg:w="4145921"/><text x="7.7820%" y="927.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (135,385,122 samples, 0.37%)</title><rect x="7.1889%" y="1045" width="0.3658%" height="15" fill="rgb(215,215,53)" fg:x="2661018215" fg:w="135385122"/><text x="7.4389%" y="1055.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (135,385,122 samples, 0.37%)</title><rect x="7.1889%" y="1029" width="0.3658%" height="15" fill="rgb(223,4,10)" fg:x="2661018215" fg:w="135385122"/><text x="7.4389%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (135,372,416 samples, 0.37%)</title><rect x="7.1889%" y="1013" width="0.3657%" height="15" fill="rgb(234,103,6)" fg:x="2661030921" fg:w="135372416"/><text x="7.4389%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (135,372,416 samples, 0.37%)</title><rect x="7.1889%" y="997" width="0.3657%" height="15" fill="rgb(227,97,0)" fg:x="2661030921" fg:w="135372416"/><text x="7.4389%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (135,372,416 samples, 0.37%)</title><rect x="7.1889%" y="981" width="0.3657%" height="15" fill="rgb(234,150,53)" fg:x="2661030921" fg:w="135372416"/><text x="7.4389%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (20,679,086 samples, 0.06%)</title><rect x="7.4988%" y="965" width="0.0559%" height="15" fill="rgb(228,201,54)" fg:x="2775724251" fg:w="20679086"/><text x="7.7488%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (20,679,086 samples, 0.06%)</title><rect x="7.4988%" y="949" width="0.0559%" height="15" fill="rgb(222,22,37)" fg:x="2775724251" fg:w="20679086"/><text x="7.7488%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (17,210,403 samples, 0.05%)</title><rect x="7.5082%" y="933" width="0.0465%" height="15" fill="rgb(237,53,32)" fg:x="2779192934" fg:w="17210403"/><text x="7.7582%" y="943.50"></text></g><g><title>hashbrown::control::tag::Tag::full (4,229,678 samples, 0.01%)</title><rect x="7.5432%" y="917" width="0.0114%" height="15" fill="rgb(233,25,53)" fg:x="2792173659" fg:w="4229678"/><text x="7.7932%" y="927.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8,541,166 samples, 0.02%)</title><rect x="7.6571%" y="933" width="0.0231%" height="15" fill="rgb(210,40,34)" fg:x="2834316653" fg:w="8541166"/><text x="7.9071%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (25,237,270 samples, 0.07%)</title><rect x="7.6238%" y="949" width="0.0682%" height="15" fill="rgb(241,220,44)" fg:x="2822001363" fg:w="25237270"/><text x="7.8738%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4,380,814 samples, 0.01%)</title><rect x="7.6802%" y="933" width="0.0118%" height="15" fill="rgb(235,28,35)" fg:x="2842857819" fg:w="4380814"/><text x="7.9302%" y="943.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (37,583,726 samples, 0.10%)</title><rect x="7.7705%" y="933" width="0.1015%" height="15" fill="rgb(210,56,17)" fg:x="2876293908" fg:w="37583726"/><text x="8.0205%" y="943.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (121,073,631 samples, 0.33%)</title><rect x="7.5664%" y="997" width="0.3271%" height="15" fill="rgb(224,130,29)" fg:x="2800750647" fg:w="121073631"/><text x="7.8164%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (121,073,631 samples, 0.33%)</title><rect x="7.5664%" y="981" width="0.3271%" height="15" fill="rgb(235,212,8)" fg:x="2800750647" fg:w="121073631"/><text x="7.8164%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (121,073,631 samples, 0.33%)</title><rect x="7.5664%" y="965" width="0.3271%" height="15" fill="rgb(223,33,50)" fg:x="2800750647" fg:w="121073631"/><text x="7.8164%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (74,585,645 samples, 0.20%)</title><rect x="7.6920%" y="949" width="0.2015%" height="15" fill="rgb(219,149,13)" fg:x="2847238633" fg:w="74585645"/><text x="7.9420%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7,946,644 samples, 0.02%)</title><rect x="7.8720%" y="933" width="0.0215%" height="15" fill="rgb(250,156,29)" fg:x="2913877634" fg:w="7946644"/><text x="8.1220%" y="943.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::hash_key (138,559,118 samples, 0.37%)</title><rect x="7.5547%" y="1029" width="0.3743%" height="15" fill="rgb(216,193,19)" fg:x="2796403337" fg:w="138559118"/><text x="7.8047%" y="1039.50"></text></g><g><title>&lt;caches::lfu::DefaultKeyHasher&lt;K&gt; as caches::lfu::KeyHasher&lt;K&gt;&gt;::hash_key (134,211,808 samples, 0.36%)</title><rect x="7.5664%" y="1013" width="0.3626%" height="15" fill="rgb(216,135,14)" fg:x="2800750647" fg:w="134211808"/><text x="7.8164%" y="1023.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (13,138,177 samples, 0.04%)</title><rect x="7.8935%" y="997" width="0.0355%" height="15" fill="rgb(241,47,5)" fg:x="2921824278" fg:w="13138177"/><text x="8.1435%" y="1007.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (13,138,177 samples, 0.04%)</title><rect x="7.8935%" y="981" width="0.0355%" height="15" fill="rgb(233,42,35)" fg:x="2921824278" fg:w="13138177"/><text x="8.1435%" y="991.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (13,138,177 samples, 0.04%)</title><rect x="7.8935%" y="965" width="0.0355%" height="15" fill="rgb(231,13,6)" fg:x="2921824278" fg:w="13138177"/><text x="8.1435%" y="975.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (13,138,177 samples, 0.04%)</title><rect x="7.8935%" y="949" width="0.0355%" height="15" fill="rgb(207,181,40)" fg:x="2921824278" fg:w="13138177"/><text x="8.1435%" y="959.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,412,141 samples, 0.01%)</title><rect x="7.9595%" y="917" width="0.0119%" height="15" fill="rgb(254,173,49)" fg:x="2946251132" fg:w="4412141"/><text x="8.2095%" y="927.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (455,737,257 samples, 1.23%)</title><rect x="6.7712%" y="1061" width="1.2312%" height="15" fill="rgb(221,1,38)" fg:x="2506395973" fg:w="455737257"/><text x="7.0212%" y="1071.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::increment (165,729,893 samples, 0.45%)</title><rect x="7.5547%" y="1045" width="0.4477%" height="15" fill="rgb(206,124,46)" fg:x="2796403337" fg:w="165729893"/><text x="7.8047%" y="1055.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::try_reset (27,170,775 samples, 0.07%)</title><rect x="7.9290%" y="1029" width="0.0734%" height="15" fill="rgb(249,21,11)" fg:x="2934962455" fg:w="27170775"/><text x="8.1790%" y="1039.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::reset (15,882,098 samples, 0.04%)</title><rect x="7.9595%" y="1013" width="0.0429%" height="15" fill="rgb(222,201,40)" fg:x="2946251132" fg:w="15882098"/><text x="8.2095%" y="1023.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset (15,882,098 samples, 0.04%)</title><rect x="7.9595%" y="997" width="0.0429%" height="15" fill="rgb(235,61,29)" fg:x="2946251132" fg:w="15882098"/><text x="8.2095%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (15,882,098 samples, 0.04%)</title><rect x="7.9595%" y="981" width="0.0429%" height="15" fill="rgb(219,207,3)" fg:x="2946251132" fg:w="15882098"/><text x="8.2095%" y="991.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset::_{{closure}} (15,882,098 samples, 0.04%)</title><rect x="7.9595%" y="965" width="0.0429%" height="15" fill="rgb(222,56,46)" fg:x="2946251132" fg:w="15882098"/><text x="8.2095%" y="975.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset (15,882,098 samples, 0.04%)</title><rect x="7.9595%" y="949" width="0.0429%" height="15" fill="rgb(239,76,54)" fg:x="2946251132" fg:w="15882098"/><text x="8.2095%" y="959.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (15,882,098 samples, 0.04%)</title><rect x="7.9595%" y="933" width="0.0429%" height="15" fill="rgb(231,124,27)" fg:x="2946251132" fg:w="15882098"/><text x="8.2095%" y="943.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset::_{{closure}} (11,469,957 samples, 0.03%)</title><rect x="7.9714%" y="917" width="0.0310%" height="15" fill="rgb(249,195,6)" fg:x="2950663273" fg:w="11469957"/><text x="8.2214%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (38,033,534 samples, 0.10%)</title><rect x="8.0024%" y="1061" width="0.1028%" height="15" fill="rgb(237,174,47)" fg:x="2962133230" fg:w="38033534"/><text x="8.2524%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (38,033,534 samples, 0.10%)</title><rect x="8.0024%" y="1045" width="0.1028%" height="15" fill="rgb(206,201,31)" fg:x="2962133230" fg:w="38033534"/><text x="8.2524%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (38,033,534 samples, 0.10%)</title><rect x="8.0024%" y="1029" width="0.1028%" height="15" fill="rgb(231,57,52)" fg:x="2962133230" fg:w="38033534"/><text x="8.2524%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (38,033,534 samples, 0.10%)</title><rect x="8.0024%" y="1013" width="0.1028%" height="15" fill="rgb(248,177,22)" fg:x="2962133230" fg:w="38033534"/><text x="8.2524%" y="1023.50"></text></g><g><title>core::iter::adapters::copied::copy_try_fold::_{{closure}} (38,033,534 samples, 0.10%)</title><rect x="8.0024%" y="997" width="0.1028%" height="15" fill="rgb(215,211,37)" fg:x="2962133230" fg:w="38033534"/><text x="8.2524%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (38,033,534 samples, 0.10%)</title><rect x="8.0024%" y="981" width="0.1028%" height="15" fill="rgb(241,128,51)" fg:x="2962133230" fg:w="38033534"/><text x="8.2524%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (38,033,534 samples, 0.10%)</title><rect x="8.0024%" y="965" width="0.1028%" height="15" fill="rgb(227,165,31)" fg:x="2962133230" fg:w="38033534"/><text x="8.2524%" y="975.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (38,033,534 samples, 0.10%)</title><rect x="8.0024%" y="949" width="0.1028%" height="15" fill="rgb(228,167,24)" fg:x="2962133230" fg:w="38033534"/><text x="8.2524%" y="959.50"></text></g><g><title>mws5::words::Word::is_fit (38,033,534 samples, 0.10%)</title><rect x="8.0024%" y="933" width="0.1028%" height="15" fill="rgb(228,143,12)" fg:x="2962133230" fg:w="38033534"/><text x="8.2524%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12,549,254 samples, 0.03%)</title><rect x="8.1051%" y="1061" width="0.0339%" height="15" fill="rgb(249,149,8)" fg:x="3000166764" fg:w="12549254"/><text x="8.3551%" y="1071.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (12,549,254 samples, 0.03%)</title><rect x="8.1051%" y="1045" width="0.0339%" height="15" fill="rgb(243,35,44)" fg:x="3000166764" fg:w="12549254"/><text x="8.3551%" y="1055.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (12,549,254 samples, 0.03%)</title><rect x="8.1051%" y="1029" width="0.0339%" height="15" fill="rgb(246,89,9)" fg:x="3000166764" fg:w="12549254"/><text x="8.3551%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (12,549,254 samples, 0.03%)</title><rect x="8.1051%" y="1013" width="0.0339%" height="15" fill="rgb(233,213,13)" fg:x="3000166764" fg:w="12549254"/><text x="8.3551%" y="1023.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (7,985,559 samples, 0.02%)</title><rect x="8.1390%" y="1061" width="0.0216%" height="15" fill="rgb(233,141,41)" fg:x="3012716018" fg:w="7985559"/><text x="8.3890%" y="1071.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (7,985,559 samples, 0.02%)</title><rect x="8.1390%" y="1045" width="0.0216%" height="15" fill="rgb(239,167,4)" fg:x="3012716018" fg:w="7985559"/><text x="8.3890%" y="1055.50"></text></g><g><title>core::cell::BorrowRefMut::new (7,985,559 samples, 0.02%)</title><rect x="8.1390%" y="1029" width="0.0216%" height="15" fill="rgb(209,217,16)" fg:x="3012716018" fg:w="7985559"/><text x="8.3890%" y="1039.50"></text></g><g><title>mws5::dict::Dict::is_fit (534,653,783 samples, 1.44%)</title><rect x="6.7258%" y="1077" width="1.4444%" height="15" fill="rgb(219,88,35)" fg:x="2489597830" fg:w="534653783"/><text x="6.9758%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,025,948 samples, 0.02%)</title><rect x="8.1702%" y="1045" width="0.0217%" height="15" fill="rgb(220,193,23)" fg:x="3024251613" fg:w="8025948"/><text x="8.4202%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (8,025,948 samples, 0.02%)</title><rect x="8.1702%" y="1029" width="0.0217%" height="15" fill="rgb(230,90,52)" fg:x="3024251613" fg:w="8025948"/><text x="8.4202%" y="1039.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,025,948 samples, 0.02%)</title><rect x="8.1702%" y="1013" width="0.0217%" height="15" fill="rgb(252,106,19)" fg:x="3024251613" fg:w="8025948"/><text x="8.4202%" y="1023.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (8,025,948 samples, 0.02%)</title><rect x="8.1702%" y="997" width="0.0217%" height="15" fill="rgb(206,74,20)" fg:x="3024251613" fg:w="8025948"/><text x="8.4202%" y="1007.50"></text></g><g><title>mws5::search::cross_fit (546,606,186 samples, 1.48%)</title><rect x="6.7258%" y="1093" width="1.4767%" height="15" fill="rgb(230,138,44)" fg:x="2489597830" fg:w="546606186"/><text x="6.9758%" y="1103.50"></text></g><g><title>mws5::squares::Square::is_transposed (11,952,403 samples, 0.03%)</title><rect x="8.1702%" y="1077" width="0.0323%" height="15" fill="rgb(235,182,43)" fg:x="3024251613" fg:w="11952403"/><text x="8.4202%" y="1087.50"></text></g><g><title>mws5::words::Word::is_transposed (11,952,403 samples, 0.03%)</title><rect x="8.1702%" y="1061" width="0.0323%" height="15" fill="rgb(242,16,51)" fg:x="3024251613" fg:w="11952403"/><text x="8.4202%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u8&gt;::cmp (3,926,455 samples, 0.01%)</title><rect x="8.1919%" y="1045" width="0.0106%" height="15" fill="rgb(248,9,4)" fg:x="3032277561" fg:w="3926455"/><text x="8.4419%" y="1055.50"></text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (2,640,711,613 samples, 7.13%)</title><rect x="1.1489%" y="1109" width="7.1341%" height="15" fill="rgb(210,31,22)" fg:x="425272521" fg:w="2640711613"/><text x="1.3989%" y="1119.50">mws5::sear..</text></g><g><title>mws5::squares::Square::set_pos (29,780,118 samples, 0.08%)</title><rect x="8.2025%" y="1093" width="0.0805%" height="15" fill="rgb(239,54,39)" fg:x="3036204016" fg:w="29780118"/><text x="8.4525%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (8,441,853 samples, 0.02%)</title><rect x="8.2830%" y="1061" width="0.0228%" height="15" fill="rgb(230,99,41)" fg:x="3065984134" fg:w="8441853"/><text x="8.5330%" y="1071.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (8,441,853 samples, 0.02%)</title><rect x="8.2830%" y="1045" width="0.0228%" height="15" fill="rgb(253,106,12)" fg:x="3065984134" fg:w="8441853"/><text x="8.5330%" y="1055.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (8,441,853 samples, 0.02%)</title><rect x="8.2830%" y="1029" width="0.0228%" height="15" fill="rgb(213,46,41)" fg:x="3065984134" fg:w="8441853"/><text x="8.5330%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8,441,853 samples, 0.02%)</title><rect x="8.2830%" y="1013" width="0.0228%" height="15" fill="rgb(215,133,35)" fg:x="3065984134" fg:w="8441853"/><text x="8.5330%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,441,853 samples, 0.02%)</title><rect x="8.2830%" y="997" width="0.0228%" height="15" fill="rgb(213,28,5)" fg:x="3065984134" fg:w="8441853"/><text x="8.5330%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::inspect::Inspect&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,441,853 samples, 0.02%)</title><rect x="8.2830%" y="981" width="0.0228%" height="15" fill="rgb(215,77,49)" fg:x="3065984134" fg:w="8441853"/><text x="8.5330%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,441,853 samples, 0.02%)</title><rect x="8.2830%" y="965" width="0.0228%" height="15" fill="rgb(248,100,22)" fg:x="3065984134" fg:w="8441853"/><text x="8.5330%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,441,853 samples, 0.02%)</title><rect x="8.2830%" y="949" width="0.0228%" height="15" fill="rgb(208,67,9)" fg:x="3065984134" fg:w="8441853"/><text x="8.5330%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8,441,853 samples, 0.02%)</title><rect x="8.2830%" y="933" width="0.0228%" height="15" fill="rgb(219,133,21)" fg:x="3065984134" fg:w="8441853"/><text x="8.5330%" y="943.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (8,441,853 samples, 0.02%)</title><rect x="8.2830%" y="917" width="0.0228%" height="15" fill="rgb(246,46,29)" fg:x="3065984134" fg:w="8441853"/><text x="8.5330%" y="927.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::_{{closure}} (8,441,853 samples, 0.02%)</title><rect x="8.2830%" y="901" width="0.0228%" height="15" fill="rgb(246,185,52)" fg:x="3065984134" fg:w="8441853"/><text x="8.5330%" y="911.50"></text></g><g><title>mws5::squares::Square::has_double::_{{closure}} (8,441,853 samples, 0.02%)</title><rect x="8.2830%" y="885" width="0.0228%" height="15" fill="rgb(252,136,11)" fg:x="3065984134" fg:w="8441853"/><text x="8.5330%" y="895.50"></text></g><g><title>mws5::words::Word::is_full (8,441,853 samples, 0.02%)</title><rect x="8.2830%" y="869" width="0.0228%" height="15" fill="rgb(219,138,53)" fg:x="3065984134" fg:w="8441853"/><text x="8.5330%" y="879.50"></text></g><g><title>[[heap]] (3,073,938,346 samples, 8.30%)</title><rect x="0.0117%" y="1125" width="8.3044%" height="15" fill="rgb(211,51,23)" fg:x="4321187" fg:w="3073938346"/><text x="0.2617%" y="1135.50">[[heap]]</text></g><g><title>mws5::squares::Square::has_double (12,275,399 samples, 0.03%)</title><rect x="8.2830%" y="1109" width="0.0332%" height="15" fill="rgb(247,221,28)" fg:x="3065984134" fg:w="12275399"/><text x="8.5330%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12,275,399 samples, 0.03%)</title><rect x="8.2830%" y="1093" width="0.0332%" height="15" fill="rgb(251,222,45)" fg:x="3065984134" fg:w="12275399"/><text x="8.5330%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12,275,399 samples, 0.03%)</title><rect x="8.2830%" y="1077" width="0.0332%" height="15" fill="rgb(217,162,53)" fg:x="3065984134" fg:w="12275399"/><text x="8.5330%" y="1087.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::default::Default&gt;::default (3,833,546 samples, 0.01%)</title><rect x="8.3058%" y="1061" width="0.0104%" height="15" fill="rgb(229,93,14)" fg:x="3074425987" fg:w="3833546"/><text x="8.5558%" y="1071.50"></text></g><g><title>std::hash::random::RandomState::new (3,833,546 samples, 0.01%)</title><rect x="8.3058%" y="1045" width="0.0104%" height="15" fill="rgb(209,67,49)" fg:x="3074425987" fg:w="3833546"/><text x="8.5558%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,833,546 samples, 0.01%)</title><rect x="8.3058%" y="1029" width="0.0104%" height="15" fill="rgb(213,87,29)" fg:x="3074425987" fg:w="3833546"/><text x="8.5558%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,833,546 samples, 0.01%)</title><rect x="8.3058%" y="1013" width="0.0104%" height="15" fill="rgb(205,151,52)" fg:x="3074425987" fg:w="3833546"/><text x="8.5558%" y="1023.50"></text></g><g><title>std::hash::random::RandomState::new::_{{closure}} (3,833,546 samples, 0.01%)</title><rect x="8.3058%" y="997" width="0.0104%" height="15" fill="rgb(253,215,39)" fg:x="3074425987" fg:w="3833546"/><text x="8.5558%" y="1007.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (3,833,546 samples, 0.01%)</title><rect x="8.3058%" y="981" width="0.0104%" height="15" fill="rgb(221,220,41)" fg:x="3074425987" fg:w="3833546"/><text x="8.5558%" y="991.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::put (8,409,735 samples, 0.02%)</title><rect x="8.3161%" y="1109" width="0.0227%" height="15" fill="rgb(218,133,21)" fg:x="3078259533" fg:w="8409735"/><text x="8.5661%" y="1119.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::contains (4,009,031 samples, 0.01%)</title><rect x="8.3280%" y="1093" width="0.0108%" height="15" fill="rgb(221,193,43)" fg:x="3082660237" fg:w="4009031"/><text x="8.5780%" y="1103.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::contains (4,009,031 samples, 0.01%)</title><rect x="8.3280%" y="1077" width="0.0108%" height="15" fill="rgb(240,128,52)" fg:x="3082660237" fg:w="4009031"/><text x="8.5780%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (4,009,031 samples, 0.01%)</title><rect x="8.3280%" y="1061" width="0.0108%" height="15" fill="rgb(253,114,12)" fg:x="3082660237" fg:w="4009031"/><text x="8.5780%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (4,009,031 samples, 0.01%)</title><rect x="8.3280%" y="1045" width="0.0108%" height="15" fill="rgb(215,223,47)" fg:x="3082660237" fg:w="4009031"/><text x="8.5780%" y="1055.50"></text></g><g><title>_int_free_check (4,244,299 samples, 0.01%)</title><rect x="8.3855%" y="1077" width="0.0115%" height="15" fill="rgb(248,225,23)" fg:x="3103947340" fg:w="4244299"/><text x="8.6355%" y="1087.50"></text></g><g><title>_int_free (12,799,234 samples, 0.03%)</title><rect x="8.3855%" y="1093" width="0.0346%" height="15" fill="rgb(250,108,0)" fg:x="3103947340" fg:w="12799234"/><text x="8.6355%" y="1103.50"></text></g><g><title>tcache_free (8,554,935 samples, 0.02%)</title><rect x="8.3970%" y="1077" width="0.0231%" height="15" fill="rgb(228,208,7)" fg:x="3108191639" fg:w="8554935"/><text x="8.6470%" y="1087.50"></text></g><g><title>tcache_put (4,327,775 samples, 0.01%)</title><rect x="8.4084%" y="1061" width="0.0117%" height="15" fill="rgb(244,45,10)" fg:x="3112418799" fg:w="4327775"/><text x="8.6584%" y="1071.50"></text></g><g><title>__GI___libc_free (34,321,763 samples, 0.09%)</title><rect x="8.3388%" y="1109" width="0.0927%" height="15" fill="rgb(207,125,25)" fg:x="3086669268" fg:w="34321763"/><text x="8.5888%" y="1119.50"></text></g><g><title>arena_for_chunk (4,244,457 samples, 0.01%)</title><rect x="8.4201%" y="1093" width="0.0115%" height="15" fill="rgb(210,195,18)" fg:x="3116746574" fg:w="4244457"/><text x="8.6701%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20,010,108 samples, 0.05%)</title><rect x="8.4668%" y="1045" width="0.0541%" height="15" fill="rgb(249,80,12)" fg:x="3134026077" fg:w="20010108"/><text x="8.7168%" y="1055.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (11,871,641 samples, 0.03%)</title><rect x="8.4888%" y="1029" width="0.0321%" height="15" fill="rgb(221,65,9)" fg:x="3142164544" fg:w="11871641"/><text x="8.7388%" y="1039.50"></text></g><g><title>__GI___libc_malloc (87,570,775 samples, 0.24%)</title><rect x="8.4316%" y="1109" width="0.2366%" height="15" fill="rgb(235,49,36)" fg:x="3120991031" fg:w="87570775"/><text x="8.6816%" y="1119.50"></text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (74,535,729 samples, 0.20%)</title><rect x="8.4668%" y="1093" width="0.2014%" height="15" fill="rgb(225,32,20)" fg:x="3134026077" fg:w="74535729"/><text x="8.7168%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (74,535,729 samples, 0.20%)</title><rect x="8.4668%" y="1077" width="0.2014%" height="15" fill="rgb(215,141,46)" fg:x="3134026077" fg:w="74535729"/><text x="8.7168%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (74,535,729 samples, 0.20%)</title><rect x="8.4668%" y="1061" width="0.2014%" height="15" fill="rgb(250,160,47)" fg:x="3134026077" fg:w="74535729"/><text x="8.7168%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (54,525,621 samples, 0.15%)</title><rect x="8.5208%" y="1045" width="0.1473%" height="15" fill="rgb(216,222,40)" fg:x="3154036185" fg:w="54525621"/><text x="8.7708%" y="1055.50"></text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (54,525,621 samples, 0.15%)</title><rect x="8.5208%" y="1029" width="0.1473%" height="15" fill="rgb(234,217,39)" fg:x="3154036185" fg:w="54525621"/><text x="8.7708%" y="1039.50"></text></g><g><title>mws5::words::Word::is_fit (50,194,131 samples, 0.14%)</title><rect x="8.5325%" y="1013" width="0.1356%" height="15" fill="rgb(207,178,40)" fg:x="3158367675" fg:w="50194131"/><text x="8.7825%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (24,513,428 samples, 0.07%)</title><rect x="8.6019%" y="997" width="0.0662%" height="15" fill="rgb(221,136,13)" fg:x="3184048378" fg:w="24513428"/><text x="8.8519%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (24,513,428 samples, 0.07%)</title><rect x="8.6019%" y="981" width="0.0662%" height="15" fill="rgb(249,199,10)" fg:x="3184048378" fg:w="24513428"/><text x="8.8519%" y="991.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (24,513,428 samples, 0.07%)</title><rect x="8.6019%" y="965" width="0.0662%" height="15" fill="rgb(249,222,13)" fg:x="3184048378" fg:w="24513428"/><text x="8.8519%" y="975.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (24,513,428 samples, 0.07%)</title><rect x="8.6019%" y="949" width="0.0662%" height="15" fill="rgb(244,185,38)" fg:x="3184048378" fg:w="24513428"/><text x="8.8519%" y="959.50"></text></g><g><title>__memset_avx2_unaligned_erms (27,294,963 samples, 0.07%)</title><rect x="8.6681%" y="1109" width="0.0737%" height="15" fill="rgb(236,202,9)" fg:x="3208561806" fg:w="27294963"/><text x="8.9181%" y="1119.50"></text></g><g><title>_int_malloc (6,564,259 samples, 0.02%)</title><rect x="8.7419%" y="1109" width="0.0177%" height="15" fill="rgb(250,229,37)" fg:x="3235856769" fg:w="6564259"/><text x="8.9919%" y="1119.50"></text></g><g><title>checked_request2size (4,348,207 samples, 0.01%)</title><rect x="8.7479%" y="1093" width="0.0117%" height="15" fill="rgb(206,174,23)" fg:x="3238072821" fg:w="4348207"/><text x="8.9979%" y="1103.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::set (148,801,070 samples, 0.40%)</title><rect x="9.2787%" y="1077" width="0.4020%" height="15" fill="rgb(211,33,43)" fg:x="3434547220" fg:w="148801070"/><text x="9.5287%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (34,172,868 samples, 0.09%)</title><rect x="9.5883%" y="1061" width="0.0923%" height="15" fill="rgb(245,58,50)" fg:x="3549175422" fg:w="34172868"/><text x="9.8383%" y="1071.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (34,172,868 samples, 0.09%)</title><rect x="9.5883%" y="1045" width="0.0923%" height="15" fill="rgb(244,68,36)" fg:x="3549175422" fg:w="34172868"/><text x="9.8383%" y="1055.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (34,172,868 samples, 0.09%)</title><rect x="9.5883%" y="1029" width="0.0923%" height="15" fill="rgb(232,229,15)" fg:x="3549175422" fg:w="34172868"/><text x="9.8383%" y="1039.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::add (496,781,308 samples, 1.34%)</title><rect x="8.8970%" y="1093" width="1.3421%" height="15" fill="rgb(254,30,23)" fg:x="3293288891" fg:w="496781308"/><text x="9.1470%" y="1103.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (206,721,909 samples, 0.56%)</title><rect x="9.6806%" y="1077" width="0.5585%" height="15" fill="rgb(235,160,14)" fg:x="3583348290" fg:w="206721909"/><text x="9.9306%" y="1087.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (206,721,909 samples, 0.56%)</title><rect x="9.6806%" y="1061" width="0.5585%" height="15" fill="rgb(212,155,44)" fg:x="3583348290" fg:w="206721909"/><text x="9.9306%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::lt (138,865,464 samples, 0.38%)</title><rect x="9.8640%" y="1045" width="0.3752%" height="15" fill="rgb(226,2,50)" fg:x="3651204735" fg:w="138865464"/><text x="10.1140%" y="1055.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::is_set (713,061,017 samples, 1.93%)</title><rect x="11.1878%" y="1077" width="1.9264%" height="15" fill="rgb(234,177,6)" fg:x="4141220824" fg:w="713061017"/><text x="11.4378%" y="1087.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (113,771,134 samples, 0.31%)</title><rect x="12.8068%" y="1061" width="0.3074%" height="15" fill="rgb(217,24,9)" fg:x="4740510707" fg:w="113771134"/><text x="13.0568%" y="1071.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (113,771,134 samples, 0.31%)</title><rect x="12.8068%" y="1045" width="0.3074%" height="15" fill="rgb(220,13,46)" fg:x="4740510707" fg:w="113771134"/><text x="13.0568%" y="1055.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (113,771,134 samples, 0.31%)</title><rect x="12.8068%" y="1029" width="0.3074%" height="15" fill="rgb(239,221,27)" fg:x="4740510707" fg:w="113771134"/><text x="13.0568%" y="1039.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains_or_add (2,048,756,497 samples, 5.53%)</title><rect x="8.7596%" y="1109" width="5.5348%" height="15" fill="rgb(222,198,25)" fg:x="3242421028" fg:w="2048756497"/><text x="9.0096%" y="1119.50">caches:..</text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains (1,501,107,326 samples, 4.06%)</title><rect x="10.2391%" y="1093" width="4.0553%" height="15" fill="rgb(211,99,13)" fg:x="3790070199" fg:w="1501107326"/><text x="10.4891%" y="1103.50">cach..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (436,895,684 samples, 1.18%)</title><rect x="13.1142%" y="1077" width="1.1803%" height="15" fill="rgb(232,111,31)" fg:x="4854281841" fg:w="436895684"/><text x="13.3642%" y="1087.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (436,895,684 samples, 1.18%)</title><rect x="13.1142%" y="1061" width="1.1803%" height="15" fill="rgb(245,82,37)" fg:x="4854281841" fg:w="436895684"/><text x="13.3642%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::lt (195,600,466 samples, 0.53%)</title><rect x="13.7660%" y="1045" width="0.5284%" height="15" fill="rgb(227,149,46)" fg:x="5095577059" fg:w="195600466"/><text x="14.0160%" y="1055.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::increment (429,243,139 samples, 1.16%)</title><rect x="14.2945%" y="1109" width="1.1596%" height="15" fill="rgb(218,36,50)" fg:x="5291177525" fg:w="429243139"/><text x="14.5445%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (412,312,282 samples, 1.11%)</title><rect x="14.3402%" y="1093" width="1.1139%" height="15" fill="rgb(226,80,48)" fg:x="5308108382" fg:w="412312282"/><text x="14.5902%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (412,312,282 samples, 1.11%)</title><rect x="14.3402%" y="1077" width="1.1139%" height="15" fill="rgb(238,224,15)" fg:x="5308108382" fg:w="412312282"/><text x="14.5902%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (412,312,282 samples, 1.11%)</title><rect x="14.3402%" y="1061" width="1.1139%" height="15" fill="rgb(241,136,10)" fg:x="5308108382" fg:w="412312282"/><text x="14.5902%" y="1071.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::increment::_{{closure}} (412,312,282 samples, 1.11%)</title><rect x="14.3402%" y="1045" width="1.1139%" height="15" fill="rgb(208,32,45)" fg:x="5308108382" fg:w="412312282"/><text x="14.5902%" y="1055.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::increment (284,001,392 samples, 0.77%)</title><rect x="14.6868%" y="1029" width="0.7672%" height="15" fill="rgb(207,135,9)" fg:x="5436419272" fg:w="284001392"/><text x="14.9368%" y="1039.50"></text></g><g><title>&lt;caches::lfu::tinylfu::sketch::count_min_row::CountMinRow as core::ops::index::Index&lt;usize&gt;&gt;::index (24,543,080 samples, 0.07%)</title><rect x="15.3878%" y="1013" width="0.0663%" height="15" fill="rgb(206,86,44)" fg:x="5695877584" fg:w="24543080"/><text x="15.6378%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (24,543,080 samples, 0.07%)</title><rect x="15.3878%" y="997" width="0.0663%" height="15" fill="rgb(245,177,15)" fg:x="5695877584" fg:w="24543080"/><text x="15.6378%" y="1007.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (24,543,080 samples, 0.07%)</title><rect x="15.3878%" y="981" width="0.0663%" height="15" fill="rgb(206,64,50)" fg:x="5695877584" fg:w="24543080"/><text x="15.6378%" y="991.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (24,543,080 samples, 0.07%)</title><rect x="15.3878%" y="965" width="0.0663%" height="15" fill="rgb(234,36,40)" fg:x="5695877584" fg:w="24543080"/><text x="15.6378%" y="975.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::attach (12,940,489 samples, 0.03%)</title><rect x="15.5317%" y="1093" width="0.0350%" height="15" fill="rgb(213,64,8)" fg:x="5749146350" fg:w="12940489"/><text x="15.7817%" y="1103.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::detach (25,438,378 samples, 0.07%)</title><rect x="15.5667%" y="1093" width="0.0687%" height="15" fill="rgb(210,75,36)" fg:x="5762086839" fg:w="25438378"/><text x="15.8167%" y="1103.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (21,456,274 samples, 0.06%)</title><rect x="15.9818%" y="949" width="0.0580%" height="15" fill="rgb(229,88,21)" fg:x="5915756142" fg:w="21456274"/><text x="16.2318%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (68,401,202 samples, 0.18%)</title><rect x="15.9136%" y="965" width="0.1848%" height="15" fill="rgb(252,204,47)" fg:x="5890506391" fg:w="68401202"/><text x="16.1636%" y="975.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (21,695,177 samples, 0.06%)</title><rect x="16.0398%" y="949" width="0.0586%" height="15" fill="rgb(208,77,27)" fg:x="5937212416" fg:w="21695177"/><text x="16.2898%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (141,848,918 samples, 0.38%)</title><rect x="16.2281%" y="949" width="0.3832%" height="15" fill="rgb(221,76,26)" fg:x="6006930123" fg:w="141848918"/><text x="16.4781%" y="959.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (378,033,548 samples, 1.02%)</title><rect x="15.7276%" y="1013" width="1.0213%" height="15" fill="rgb(225,139,18)" fg:x="5821657719" fg:w="378033548"/><text x="15.9776%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (378,033,548 samples, 1.02%)</title><rect x="15.7276%" y="997" width="1.0213%" height="15" fill="rgb(230,137,11)" fg:x="5821657719" fg:w="378033548"/><text x="15.9776%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (378,033,548 samples, 1.02%)</title><rect x="15.7276%" y="981" width="1.0213%" height="15" fill="rgb(212,28,1)" fg:x="5821657719" fg:w="378033548"/><text x="15.9776%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (240,783,674 samples, 0.65%)</title><rect x="16.0984%" y="965" width="0.6505%" height="15" fill="rgb(248,164,17)" fg:x="5958907593" fg:w="240783674"/><text x="16.3484%" y="975.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (50,912,226 samples, 0.14%)</title><rect x="16.6113%" y="949" width="0.1375%" height="15" fill="rgb(222,171,42)" fg:x="6148779041" fg:w="50912226"/><text x="16.8613%" y="959.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (3,923,362 samples, 0.01%)</title><rect x="16.7489%" y="1013" width="0.0106%" height="15" fill="rgb(243,84,45)" fg:x="6199691267" fg:w="3923362"/><text x="16.9989%" y="1023.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (3,923,362 samples, 0.01%)</title><rect x="16.7489%" y="997" width="0.0106%" height="15" fill="rgb(252,49,23)" fg:x="6199691267" fg:w="3923362"/><text x="16.9989%" y="1007.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3,923,362 samples, 0.01%)</title><rect x="16.7489%" y="981" width="0.0106%" height="15" fill="rgb(215,19,7)" fg:x="6199691267" fg:w="3923362"/><text x="16.9989%" y="991.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (3,923,362 samples, 0.01%)</title><rect x="16.7489%" y="965" width="0.0106%" height="15" fill="rgb(238,81,41)" fg:x="6199691267" fg:w="3923362"/><text x="16.9989%" y="975.50"></text></g><g><title>hashbrown::map::make_hash (445,711,302 samples, 1.20%)</title><rect x="15.6469%" y="1045" width="1.2041%" height="15" fill="rgb(210,199,37)" fg:x="5791804544" fg:w="445711302"/><text x="15.8969%" y="1055.50"></text></g><g><title>core::hash::BuildHasher::hash_one (415,858,127 samples, 1.12%)</title><rect x="15.7276%" y="1029" width="1.1235%" height="15" fill="rgb(244,192,49)" fg:x="5821657719" fg:w="415858127"/><text x="15.9776%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (33,901,217 samples, 0.09%)</title><rect x="16.7595%" y="1013" width="0.0916%" height="15" fill="rgb(226,211,11)" fg:x="6203614629" fg:w="33901217"/><text x="17.0095%" y="1023.50"></text></g><g><title>&lt;caches::lru::raw::KeyWrapper&lt;K&gt; as core::hash::Hash&gt;::hash (33,901,217 samples, 0.09%)</title><rect x="16.7595%" y="997" width="0.0916%" height="15" fill="rgb(236,162,54)" fg:x="6203614629" fg:w="33901217"/><text x="17.0095%" y="1007.50"></text></g><g><title>&lt;mws5::words::Word as core::hash::Hash&gt;::hash (33,901,217 samples, 0.09%)</title><rect x="16.7595%" y="981" width="0.0916%" height="15" fill="rgb(220,229,9)" fg:x="6203614629" fg:w="33901217"/><text x="17.0095%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (33,901,217 samples, 0.09%)</title><rect x="16.7595%" y="965" width="0.0916%" height="15" fill="rgb(250,87,22)" fg:x="6203614629" fg:w="33901217"/><text x="17.0095%" y="975.50"></text></g><g><title>core::hash::Hasher::write_u32 (33,901,217 samples, 0.09%)</title><rect x="16.7595%" y="949" width="0.0916%" height="15" fill="rgb(239,43,17)" fg:x="6203614629" fg:w="33901217"/><text x="17.0095%" y="959.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (33,901,217 samples, 0.09%)</title><rect x="16.7595%" y="933" width="0.0916%" height="15" fill="rgb(231,177,25)" fg:x="6203614629" fg:w="33901217"/><text x="17.0095%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (33,901,217 samples, 0.09%)</title><rect x="16.7595%" y="917" width="0.0916%" height="15" fill="rgb(219,179,1)" fg:x="6203614629" fg:w="33901217"/><text x="17.0095%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (33,901,217 samples, 0.09%)</title><rect x="16.7595%" y="901" width="0.0916%" height="15" fill="rgb(238,219,53)" fg:x="6203614629" fg:w="33901217"/><text x="17.0095%" y="911.50"></text></g><g><title>core::hash::sip::u8to64_le (33,901,217 samples, 0.09%)</title><rect x="16.7595%" y="885" width="0.0916%" height="15" fill="rgb(232,167,36)" fg:x="6203614629" fg:w="33901217"/><text x="17.0095%" y="895.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (25,890,227 samples, 0.07%)</title><rect x="16.9296%" y="997" width="0.0699%" height="15" fill="rgb(244,19,51)" fg:x="6266578252" fg:w="25890227"/><text x="17.1796%" y="1007.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (25,890,227 samples, 0.07%)</title><rect x="16.9296%" y="981" width="0.0699%" height="15" fill="rgb(224,6,22)" fg:x="6266578252" fg:w="25890227"/><text x="17.1796%" y="991.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (4,194,426 samples, 0.01%)</title><rect x="16.9882%" y="965" width="0.0113%" height="15" fill="rgb(224,145,5)" fg:x="6288274053" fg:w="4194426"/><text x="17.2382%" y="975.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (4,194,426 samples, 0.01%)</title><rect x="16.9882%" y="949" width="0.0113%" height="15" fill="rgb(234,130,49)" fg:x="6288274053" fg:w="4194426"/><text x="17.2382%" y="959.50"></text></g><g><title>core::intrinsics::likely (8,408,301 samples, 0.02%)</title><rect x="16.9995%" y="997" width="0.0227%" height="15" fill="rgb(254,6,2)" fg:x="6292468479" fg:w="8408301"/><text x="17.2495%" y="1007.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load (24,549,960 samples, 0.07%)</title><rect x="17.0222%" y="997" width="0.0663%" height="15" fill="rgb(208,96,46)" fg:x="6300876780" fg:w="24549960"/><text x="17.2722%" y="1007.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (24,549,960 samples, 0.07%)</title><rect x="17.0222%" y="981" width="0.0663%" height="15" fill="rgb(239,3,39)" fg:x="6300876780" fg:w="24549960"/><text x="17.2722%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (24,549,960 samples, 0.07%)</title><rect x="17.0222%" y="965" width="0.0663%" height="15" fill="rgb(233,210,1)" fg:x="6300876780" fg:w="24549960"/><text x="17.2722%" y="975.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty (16,397,301 samples, 0.04%)</title><rect x="17.0886%" y="997" width="0.0443%" height="15" fill="rgb(244,137,37)" fg:x="6325426740" fg:w="16397301"/><text x="17.3386%" y="1007.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (16,397,301 samples, 0.04%)</title><rect x="17.0886%" y="981" width="0.0443%" height="15" fill="rgb(240,136,2)" fg:x="6325426740" fg:w="16397301"/><text x="17.3386%" y="991.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (16,397,301 samples, 0.04%)</title><rect x="17.0886%" y="965" width="0.0443%" height="15" fill="rgb(239,18,37)" fg:x="6325426740" fg:w="16397301"/><text x="17.3386%" y="975.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (25,033,386 samples, 0.07%)</title><rect x="17.1328%" y="997" width="0.0676%" height="15" fill="rgb(218,185,22)" fg:x="6341824041" fg:w="25033386"/><text x="17.3828%" y="1007.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (25,033,386 samples, 0.07%)</title><rect x="17.1328%" y="981" width="0.0676%" height="15" fill="rgb(225,218,4)" fg:x="6341824041" fg:w="25033386"/><text x="17.3828%" y="991.50"></text></g><g><title>hashbrown::control::tag::Tag::full (16,479,408 samples, 0.04%)</title><rect x="17.2005%" y="997" width="0.0445%" height="15" fill="rgb(230,182,32)" fg:x="6366857427" fg:w="16479408"/><text x="17.4505%" y="1007.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (13,013,286 samples, 0.04%)</title><rect x="17.2450%" y="997" width="0.0352%" height="15" fill="rgb(242,56,43)" fg:x="6383336835" fg:w="13013286"/><text x="17.4950%" y="1007.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (8,498,113 samples, 0.02%)</title><rect x="17.2830%" y="981" width="0.0230%" height="15" fill="rgb(233,99,24)" fg:x="6397408208" fg:w="8498113"/><text x="17.5330%" y="991.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (8,498,113 samples, 0.02%)</title><rect x="17.2830%" y="965" width="0.0230%" height="15" fill="rgb(234,209,42)" fg:x="6397408208" fg:w="8498113"/><text x="17.5330%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8,498,113 samples, 0.02%)</title><rect x="17.2830%" y="949" width="0.0230%" height="15" fill="rgb(227,7,12)" fg:x="6397408208" fg:w="8498113"/><text x="17.5330%" y="959.50"></text></g><g><title>&lt;caches::lru::raw::KeyWrapper&lt;K&gt; as core::cmp::PartialEq&gt;::eq (8,498,113 samples, 0.02%)</title><rect x="17.2830%" y="933" width="0.0230%" height="15" fill="rgb(245,203,43)" fg:x="6397408208" fg:w="8498113"/><text x="17.5330%" y="943.50"></text></g><g><title>&lt;mws5::words::Word as core::cmp::PartialEq&gt;::eq (8,498,113 samples, 0.02%)</title><rect x="17.2830%" y="917" width="0.0230%" height="15" fill="rgb(238,205,33)" fg:x="6397408208" fg:w="8498113"/><text x="17.5330%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (22,588,992 samples, 0.06%)</title><rect x="17.2802%" y="997" width="0.0610%" height="15" fill="rgb(231,56,7)" fg:x="6396350121" fg:w="22588992"/><text x="17.5302%" y="1007.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (13,032,792 samples, 0.04%)</title><rect x="17.3060%" y="981" width="0.0352%" height="15" fill="rgb(244,186,29)" fg:x="6405906321" fg:w="13032792"/><text x="17.5560%" y="991.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (13,032,792 samples, 0.04%)</title><rect x="17.3060%" y="965" width="0.0352%" height="15" fill="rgb(234,111,31)" fg:x="6405906321" fg:w="13032792"/><text x="17.5560%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (13,032,792 samples, 0.04%)</title><rect x="17.3060%" y="949" width="0.0352%" height="15" fill="rgb(241,149,10)" fg:x="6405906321" fg:w="13032792"/><text x="17.5560%" y="959.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (707,154,941 samples, 1.91%)</title><rect x="15.4541%" y="1109" width="1.9104%" height="15" fill="rgb(249,206,44)" fg:x="5720420664" fg:w="707154941"/><text x="15.7041%" y="1119.50">c..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (640,050,388 samples, 1.73%)</title><rect x="15.6354%" y="1093" width="1.7291%" height="15" fill="rgb(251,153,30)" fg:x="5787525217" fg:w="640050388"/><text x="15.8854%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (640,050,388 samples, 1.73%)</title><rect x="15.6354%" y="1077" width="1.7291%" height="15" fill="rgb(239,152,38)" fg:x="5787525217" fg:w="640050388"/><text x="15.8854%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (640,050,388 samples, 1.73%)</title><rect x="15.6354%" y="1061" width="1.7291%" height="15" fill="rgb(249,139,47)" fg:x="5787525217" fg:w="640050388"/><text x="15.8854%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (190,059,759 samples, 0.51%)</title><rect x="16.8511%" y="1045" width="0.5135%" height="15" fill="rgb(244,64,35)" fg:x="6237515846" fg:w="190059759"/><text x="17.1011%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (190,059,759 samples, 0.51%)</title><rect x="16.8511%" y="1029" width="0.5135%" height="15" fill="rgb(216,46,15)" fg:x="6237515846" fg:w="190059759"/><text x="17.1011%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (186,048,705 samples, 0.50%)</title><rect x="16.8619%" y="1013" width="0.5026%" height="15" fill="rgb(250,74,19)" fg:x="6241526900" fg:w="186048705"/><text x="17.1119%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (8,636,492 samples, 0.02%)</title><rect x="17.3412%" y="997" width="0.0233%" height="15" fill="rgb(249,42,33)" fg:x="6418939113" fg:w="8636492"/><text x="17.5912%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4,176,792 samples, 0.01%)</title><rect x="17.3645%" y="1013" width="0.0113%" height="15" fill="rgb(242,149,17)" fg:x="6427575605" fg:w="4176792"/><text x="17.6145%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,176,792 samples, 0.01%)</title><rect x="17.3645%" y="997" width="0.0113%" height="15" fill="rgb(244,29,21)" fg:x="6427575605" fg:w="4176792"/><text x="17.6145%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (8,585,676 samples, 0.02%)</title><rect x="17.3645%" y="1093" width="0.0232%" height="15" fill="rgb(220,130,37)" fg:x="6427575605" fg:w="8585676"/><text x="17.6145%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8,585,676 samples, 0.02%)</title><rect x="17.3645%" y="1077" width="0.0232%" height="15" fill="rgb(211,67,2)" fg:x="6427575605" fg:w="8585676"/><text x="17.6145%" y="1087.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (8,585,676 samples, 0.02%)</title><rect x="17.3645%" y="1061" width="0.0232%" height="15" fill="rgb(235,68,52)" fg:x="6427575605" fg:w="8585676"/><text x="17.6145%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8,585,676 samples, 0.02%)</title><rect x="17.3645%" y="1045" width="0.0232%" height="15" fill="rgb(246,142,3)" fg:x="6427575605" fg:w="8585676"/><text x="17.6145%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8,585,676 samples, 0.02%)</title><rect x="17.3645%" y="1029" width="0.0232%" height="15" fill="rgb(241,25,7)" fg:x="6427575605" fg:w="8585676"/><text x="17.6145%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4,408,884 samples, 0.01%)</title><rect x="17.3758%" y="1013" width="0.0119%" height="15" fill="rgb(242,119,39)" fg:x="6431752397" fg:w="4408884"/><text x="17.6258%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4,408,884 samples, 0.01%)</title><rect x="17.3758%" y="997" width="0.0119%" height="15" fill="rgb(241,98,45)" fg:x="6431752397" fg:w="4408884"/><text x="17.6258%" y="1007.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (12,346,591 samples, 0.03%)</title><rect x="17.3993%" y="1045" width="0.0334%" height="15" fill="rgb(254,28,30)" fg:x="6440445802" fg:w="12346591"/><text x="17.6493%" y="1055.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (12,346,591 samples, 0.03%)</title><rect x="17.3993%" y="1029" width="0.0334%" height="15" fill="rgb(241,142,54)" fg:x="6440445802" fg:w="12346591"/><text x="17.6493%" y="1039.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (12,346,591 samples, 0.03%)</title><rect x="17.3993%" y="1013" width="0.0334%" height="15" fill="rgb(222,85,15)" fg:x="6440445802" fg:w="12346591"/><text x="17.6493%" y="1023.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (12,346,591 samples, 0.03%)</title><rect x="17.3993%" y="997" width="0.0334%" height="15" fill="rgb(210,85,47)" fg:x="6440445802" fg:w="12346591"/><text x="17.6493%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (29,606,506 samples, 0.08%)</title><rect x="17.3645%" y="1109" width="0.0800%" height="15" fill="rgb(224,206,25)" fg:x="6427575605" fg:w="29606506"/><text x="17.6145%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (21,020,830 samples, 0.06%)</title><rect x="17.3877%" y="1093" width="0.0568%" height="15" fill="rgb(243,201,19)" fg:x="6436161281" fg:w="21020830"/><text x="17.6377%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (21,020,830 samples, 0.06%)</title><rect x="17.3877%" y="1077" width="0.0568%" height="15" fill="rgb(236,59,4)" fg:x="6436161281" fg:w="21020830"/><text x="17.6377%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (16,736,309 samples, 0.05%)</title><rect x="17.3993%" y="1061" width="0.0452%" height="15" fill="rgb(254,179,45)" fg:x="6440445802" fg:w="16736309"/><text x="17.6493%" y="1071.50"></text></g><g><title>hashbrown::control::tag::Tag::full (4,389,718 samples, 0.01%)</title><rect x="17.4326%" y="1045" width="0.0119%" height="15" fill="rgb(226,14,10)" fg:x="6452792393" fg:w="4389718"/><text x="17.6826%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (4,038,243 samples, 0.01%)</title><rect x="17.4445%" y="1109" width="0.0109%" height="15" fill="rgb(244,27,41)" fg:x="6457182111" fg:w="4038243"/><text x="17.6945%" y="1119.50"></text></g><g><title>hashbrown::map::make_hash (4,038,243 samples, 0.01%)</title><rect x="17.4445%" y="1093" width="0.0109%" height="15" fill="rgb(235,35,32)" fg:x="6457182111" fg:w="4038243"/><text x="17.6945%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,038,243 samples, 0.01%)</title><rect x="17.4445%" y="1077" width="0.0109%" height="15" fill="rgb(218,68,31)" fg:x="6457182111" fg:w="4038243"/><text x="17.6945%" y="1087.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (4,038,243 samples, 0.01%)</title><rect x="17.4445%" y="1061" width="0.0109%" height="15" fill="rgb(207,120,37)" fg:x="6457182111" fg:w="4038243"/><text x="17.6945%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4,038,243 samples, 0.01%)</title><rect x="17.4445%" y="1045" width="0.0109%" height="15" fill="rgb(227,98,0)" fg:x="6457182111" fg:w="4038243"/><text x="17.6945%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4,038,243 samples, 0.01%)</title><rect x="17.4445%" y="1029" width="0.0109%" height="15" fill="rgb(207,7,3)" fg:x="6457182111" fg:w="4038243"/><text x="17.6945%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4,038,243 samples, 0.01%)</title><rect x="17.4445%" y="1013" width="0.0109%" height="15" fill="rgb(206,98,19)" fg:x="6457182111" fg:w="4038243"/><text x="17.6945%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (7,236,560 samples, 0.02%)</title><rect x="17.5083%" y="1093" width="0.0196%" height="15" fill="rgb(217,5,26)" fg:x="6480789216" fg:w="7236560"/><text x="17.7583%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (7,236,560 samples, 0.02%)</title><rect x="17.5083%" y="1077" width="0.0196%" height="15" fill="rgb(235,190,38)" fg:x="6480789216" fg:w="7236560"/><text x="17.7583%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (7,236,560 samples, 0.02%)</title><rect x="17.5083%" y="1061" width="0.0196%" height="15" fill="rgb(247,86,24)" fg:x="6480789216" fg:w="7236560"/><text x="17.7583%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8,405,437 samples, 0.02%)</title><rect x="17.5501%" y="1013" width="0.0227%" height="15" fill="rgb(205,101,16)" fg:x="6496280772" fg:w="8405437"/><text x="17.8001%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4,172,758 samples, 0.01%)</title><rect x="17.5616%" y="997" width="0.0113%" height="15" fill="rgb(246,168,33)" fg:x="6500513451" fg:w="4172758"/><text x="17.8116%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (47,601,350 samples, 0.13%)</title><rect x="17.4554%" y="1109" width="0.1286%" height="15" fill="rgb(231,114,1)" fg:x="6461220354" fg:w="47601350"/><text x="17.7054%" y="1119.50"></text></g><g><title>hashbrown::map::make_hash (20,795,928 samples, 0.06%)</title><rect x="17.5278%" y="1093" width="0.0562%" height="15" fill="rgb(207,184,53)" fg:x="6488025776" fg:w="20795928"/><text x="17.7778%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12,540,932 samples, 0.03%)</title><rect x="17.5501%" y="1077" width="0.0339%" height="15" fill="rgb(224,95,51)" fg:x="6496280772" fg:w="12540932"/><text x="17.8001%" y="1087.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (12,540,932 samples, 0.03%)</title><rect x="17.5501%" y="1061" width="0.0339%" height="15" fill="rgb(212,188,45)" fg:x="6496280772" fg:w="12540932"/><text x="17.8001%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12,540,932 samples, 0.03%)</title><rect x="17.5501%" y="1045" width="0.0339%" height="15" fill="rgb(223,154,38)" fg:x="6496280772" fg:w="12540932"/><text x="17.8001%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12,540,932 samples, 0.03%)</title><rect x="17.5501%" y="1029" width="0.0339%" height="15" fill="rgb(251,22,52)" fg:x="6496280772" fg:w="12540932"/><text x="17.8001%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4,135,495 samples, 0.01%)</title><rect x="17.5728%" y="1013" width="0.0112%" height="15" fill="rgb(229,209,22)" fg:x="6504686209" fg:w="4135495"/><text x="17.8228%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,135,495 samples, 0.01%)</title><rect x="17.5728%" y="997" width="0.0112%" height="15" fill="rgb(234,138,34)" fg:x="6504686209" fg:w="4135495"/><text x="17.8228%" y="1007.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (8,475,701 samples, 0.02%)</title><rect x="17.5945%" y="1045" width="0.0229%" height="15" fill="rgb(212,95,11)" fg:x="6512714297" fg:w="8475701"/><text x="17.8445%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8,475,701 samples, 0.02%)</title><rect x="17.5945%" y="1029" width="0.0229%" height="15" fill="rgb(240,179,47)" fg:x="6512714297" fg:w="8475701"/><text x="17.8445%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8,475,701 samples, 0.02%)</title><rect x="17.5945%" y="1013" width="0.0229%" height="15" fill="rgb(240,163,11)" fg:x="6512714297" fg:w="8475701"/><text x="17.8445%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8,475,701 samples, 0.02%)</title><rect x="17.5945%" y="997" width="0.0229%" height="15" fill="rgb(236,37,12)" fg:x="6512714297" fg:w="8475701"/><text x="17.8445%" y="1007.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8,475,701 samples, 0.02%)</title><rect x="17.5945%" y="981" width="0.0229%" height="15" fill="rgb(232,164,16)" fg:x="6512714297" fg:w="8475701"/><text x="17.8445%" y="991.50"></text></g><g><title>hashbrown::map::make_hash (16,760,854 samples, 0.05%)</title><rect x="17.5840%" y="1077" width="0.0453%" height="15" fill="rgb(244,205,15)" fg:x="6508821704" fg:w="16760854"/><text x="17.8340%" y="1087.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12,868,261 samples, 0.03%)</title><rect x="17.5945%" y="1061" width="0.0348%" height="15" fill="rgb(223,117,47)" fg:x="6512714297" fg:w="12868261"/><text x="17.8445%" y="1071.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4,392,560 samples, 0.01%)</title><rect x="17.6174%" y="1045" width="0.0119%" height="15" fill="rgb(244,107,35)" fg:x="6521189998" fg:w="4392560"/><text x="17.8674%" y="1055.50"></text></g><g><title>&lt;caches::lru::raw::KeyWrapper&lt;K&gt; as core::hash::Hash&gt;::hash (4,392,560 samples, 0.01%)</title><rect x="17.6174%" y="1029" width="0.0119%" height="15" fill="rgb(205,140,8)" fg:x="6521189998" fg:w="4392560"/><text x="17.8674%" y="1039.50"></text></g><g><title>&lt;mws5::words::Word as core::hash::Hash&gt;::hash (4,392,560 samples, 0.01%)</title><rect x="17.6174%" y="1013" width="0.0119%" height="15" fill="rgb(228,84,46)" fg:x="6521189998" fg:w="4392560"/><text x="17.8674%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (4,392,560 samples, 0.01%)</title><rect x="17.6174%" y="997" width="0.0119%" height="15" fill="rgb(254,188,9)" fg:x="6521189998" fg:w="4392560"/><text x="17.8674%" y="1007.50"></text></g><g><title>core::hash::Hasher::write_u32 (4,392,560 samples, 0.01%)</title><rect x="17.6174%" y="981" width="0.0119%" height="15" fill="rgb(206,112,54)" fg:x="6521189998" fg:w="4392560"/><text x="17.8674%" y="991.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4,392,560 samples, 0.01%)</title><rect x="17.6174%" y="965" width="0.0119%" height="15" fill="rgb(216,84,49)" fg:x="6521189998" fg:w="4392560"/><text x="17.8674%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4,392,560 samples, 0.01%)</title><rect x="17.6174%" y="949" width="0.0119%" height="15" fill="rgb(214,194,35)" fg:x="6521189998" fg:w="4392560"/><text x="17.8674%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4,392,560 samples, 0.01%)</title><rect x="17.6174%" y="933" width="0.0119%" height="15" fill="rgb(249,28,3)" fg:x="6521189998" fg:w="4392560"/><text x="17.8674%" y="943.50"></text></g><g><title>core::hash::sip::u8to64_le (4,392,560 samples, 0.01%)</title><rect x="17.6174%" y="917" width="0.0119%" height="15" fill="rgb(222,56,52)" fg:x="6521189998" fg:w="4392560"/><text x="17.8674%" y="927.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty (4,146,192 samples, 0.01%)</title><rect x="17.6411%" y="1029" width="0.0112%" height="15" fill="rgb(245,217,50)" fg:x="6529945048" fg:w="4146192"/><text x="17.8911%" y="1039.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (4,146,192 samples, 0.01%)</title><rect x="17.6411%" y="1013" width="0.0112%" height="15" fill="rgb(213,201,24)" fg:x="6529945048" fg:w="4146192"/><text x="17.8911%" y="1023.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4,146,192 samples, 0.01%)</title><rect x="17.6411%" y="997" width="0.0112%" height="15" fill="rgb(248,116,28)" fg:x="6529945048" fg:w="4146192"/><text x="17.8911%" y="1007.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (4,357,066 samples, 0.01%)</title><rect x="17.6523%" y="1029" width="0.0118%" height="15" fill="rgb(219,72,43)" fg:x="6534091240" fg:w="4357066"/><text x="17.9023%" y="1039.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4,357,066 samples, 0.01%)</title><rect x="17.6523%" y="1013" width="0.0118%" height="15" fill="rgb(209,138,14)" fg:x="6534091240" fg:w="4357066"/><text x="17.9023%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (21,164,007 samples, 0.06%)</title><rect x="17.6293%" y="1061" width="0.0572%" height="15" fill="rgb(222,18,33)" fg:x="6525582558" fg:w="21164007"/><text x="17.8793%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (21,164,007 samples, 0.06%)</title><rect x="17.6293%" y="1045" width="0.0572%" height="15" fill="rgb(213,199,7)" fg:x="6525582558" fg:w="21164007"/><text x="17.8793%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (8,298,259 samples, 0.02%)</title><rect x="17.6640%" y="1029" width="0.0224%" height="15" fill="rgb(250,110,10)" fg:x="6538448306" fg:w="8298259"/><text x="17.9140%" y="1039.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (4,278,672 samples, 0.01%)</title><rect x="17.6749%" y="1013" width="0.0116%" height="15" fill="rgb(248,123,6)" fg:x="6542467893" fg:w="4278672"/><text x="17.9249%" y="1023.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (4,278,672 samples, 0.01%)</title><rect x="17.6749%" y="997" width="0.0116%" height="15" fill="rgb(206,91,31)" fg:x="6542467893" fg:w="4278672"/><text x="17.9249%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4,278,672 samples, 0.01%)</title><rect x="17.6749%" y="981" width="0.0116%" height="15" fill="rgb(211,154,13)" fg:x="6542467893" fg:w="4278672"/><text x="17.9249%" y="991.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::read (4,394,744 samples, 0.01%)</title><rect x="17.6865%" y="1045" width="0.0119%" height="15" fill="rgb(225,148,7)" fg:x="6546746565" fg:w="4394744"/><text x="17.9365%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (4,394,744 samples, 0.01%)</title><rect x="17.6865%" y="1029" width="0.0119%" height="15" fill="rgb(220,160,43)" fg:x="6546746565" fg:w="4394744"/><text x="17.9365%" y="1039.50"></text></g><g><title>core::ptr::read (4,394,744 samples, 0.01%)</title><rect x="17.6865%" y="1013" width="0.0119%" height="15" fill="rgb(213,52,39)" fg:x="6546746565" fg:w="4394744"/><text x="17.9365%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (54,245,239 samples, 0.15%)</title><rect x="17.5840%" y="1109" width="0.1465%" height="15" fill="rgb(243,137,7)" fg:x="6508821704" fg:w="54245239"/><text x="17.8340%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (54,245,239 samples, 0.15%)</title><rect x="17.5840%" y="1093" width="0.1465%" height="15" fill="rgb(230,79,13)" fg:x="6508821704" fg:w="54245239"/><text x="17.8340%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (37,484,385 samples, 0.10%)</title><rect x="17.6293%" y="1077" width="0.1013%" height="15" fill="rgb(247,105,23)" fg:x="6525582558" fg:w="37484385"/><text x="17.8793%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (16,320,378 samples, 0.04%)</title><rect x="17.6865%" y="1061" width="0.0441%" height="15" fill="rgb(223,179,41)" fg:x="6546746565" fg:w="16320378"/><text x="17.9365%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (11,925,634 samples, 0.03%)</title><rect x="17.6983%" y="1045" width="0.0322%" height="15" fill="rgb(218,9,34)" fg:x="6551141309" fg:w="11925634"/><text x="17.9483%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::erase (11,925,634 samples, 0.03%)</title><rect x="17.6983%" y="1029" width="0.0322%" height="15" fill="rgb(222,106,8)" fg:x="6551141309" fg:w="11925634"/><text x="17.9483%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl (4,094,479 samples, 0.01%)</title><rect x="17.7195%" y="1013" width="0.0111%" height="15" fill="rgb(211,220,0)" fg:x="6558972464" fg:w="4094479"/><text x="17.9695%" y="1023.50"></text></g><g><title>mws5::dict::Dict::matches (4,149,218 samples, 0.01%)</title><rect x="17.7306%" y="1109" width="0.0112%" height="15" fill="rgb(229,52,16)" fg:x="6563066943" fg:w="4149218"/><text x="17.9806%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by_key (4,149,218 samples, 0.01%)</title><rect x="17.7306%" y="1093" width="0.0112%" height="15" fill="rgb(212,155,18)" fg:x="6563066943" fg:w="4149218"/><text x="17.9806%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (4,149,218 samples, 0.01%)</title><rect x="17.7306%" y="1077" width="0.0112%" height="15" fill="rgb(242,21,14)" fg:x="6563066943" fg:w="4149218"/><text x="17.9806%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (4,149,218 samples, 0.01%)</title><rect x="17.7306%" y="1061" width="0.0112%" height="15" fill="rgb(222,19,48)" fg:x="6563066943" fg:w="4149218"/><text x="17.9806%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,149,218 samples, 0.01%)</title><rect x="17.7306%" y="1045" width="0.0112%" height="15" fill="rgb(232,45,27)" fg:x="6563066943" fg:w="4149218"/><text x="17.9806%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,149,218 samples, 0.01%)</title><rect x="17.7306%" y="1029" width="0.0112%" height="15" fill="rgb(249,103,42)" fg:x="6563066943" fg:w="4149218"/><text x="17.9806%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4,149,218 samples, 0.01%)</title><rect x="17.7306%" y="1013" width="0.0112%" height="15" fill="rgb(246,81,33)" fg:x="6563066943" fg:w="4149218"/><text x="17.9806%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4,149,218 samples, 0.01%)</title><rect x="17.7306%" y="997" width="0.0112%" height="15" fill="rgb(252,33,42)" fg:x="6563066943" fg:w="4149218"/><text x="17.9806%" y="1007.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (4,149,218 samples, 0.01%)</title><rect x="17.7306%" y="981" width="0.0112%" height="15" fill="rgb(209,212,41)" fg:x="6563066943" fg:w="4149218"/><text x="17.9806%" y="991.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (37,470,667 samples, 0.10%)</title><rect x="17.7418%" y="1061" width="0.1012%" height="15" fill="rgb(207,154,6)" fg:x="6567216161" fg:w="37470667"/><text x="17.9918%" y="1071.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (21,408,643 samples, 0.06%)</title><rect x="17.7852%" y="1045" width="0.0578%" height="15" fill="rgb(223,64,47)" fg:x="6583278185" fg:w="21408643"/><text x="18.0352%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (304,651,197 samples, 0.82%)</title><rect x="17.7418%" y="1093" width="0.8230%" height="15" fill="rgb(211,161,38)" fg:x="6567216161" fg:w="304651197"/><text x="17.9918%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (304,651,197 samples, 0.82%)</title><rect x="17.7418%" y="1077" width="0.8230%" height="15" fill="rgb(219,138,40)" fg:x="6567216161" fg:w="304651197"/><text x="17.9918%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (267,180,530 samples, 0.72%)</title><rect x="17.8430%" y="1061" width="0.7218%" height="15" fill="rgb(241,228,46)" fg:x="6604686828" fg:w="267180530"/><text x="18.0930%" y="1071.50"></text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (267,180,530 samples, 0.72%)</title><rect x="17.8430%" y="1045" width="0.7218%" height="15" fill="rgb(223,209,38)" fg:x="6604686828" fg:w="267180530"/><text x="18.0930%" y="1055.50"></text></g><g><title>mws5::words::Word::is_fit (259,207,879 samples, 0.70%)</title><rect x="17.8645%" y="1029" width="0.7003%" height="15" fill="rgb(236,164,45)" fg:x="6612659479" fg:w="259207879"/><text x="18.1145%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (46,386,578 samples, 0.13%)</title><rect x="18.4395%" y="1013" width="0.1253%" height="15" fill="rgb(231,15,5)" fg:x="6825480780" fg:w="46386578"/><text x="18.6895%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (46,386,578 samples, 0.13%)</title><rect x="18.4395%" y="997" width="0.1253%" height="15" fill="rgb(252,35,15)" fg:x="6825480780" fg:w="46386578"/><text x="18.6895%" y="1007.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (46,386,578 samples, 0.13%)</title><rect x="18.4395%" y="981" width="0.1253%" height="15" fill="rgb(248,181,18)" fg:x="6825480780" fg:w="46386578"/><text x="18.6895%" y="991.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (46,386,578 samples, 0.13%)</title><rect x="18.4395%" y="965" width="0.1253%" height="15" fill="rgb(233,39,42)" fg:x="6825480780" fg:w="46386578"/><text x="18.6895%" y="975.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::increment (5,855,544 samples, 0.02%)</title><rect x="18.5648%" y="1045" width="0.0158%" height="15" fill="rgb(238,110,33)" fg:x="6871867358" fg:w="5855544"/><text x="18.8148%" y="1055.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::hash_key (5,855,544 samples, 0.02%)</title><rect x="18.5648%" y="1029" width="0.0158%" height="15" fill="rgb(233,195,10)" fg:x="6871867358" fg:w="5855544"/><text x="18.8148%" y="1039.50"></text></g><g><title>&lt;caches::lfu::DefaultKeyHasher&lt;K&gt; as caches::lfu::KeyHasher&lt;K&gt;&gt;::hash_key (5,855,544 samples, 0.02%)</title><rect x="18.5648%" y="1013" width="0.0158%" height="15" fill="rgb(254,105,3)" fg:x="6871867358" fg:w="5855544"/><text x="18.8148%" y="1023.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (5,855,544 samples, 0.02%)</title><rect x="18.5648%" y="997" width="0.0158%" height="15" fill="rgb(221,225,9)" fg:x="6871867358" fg:w="5855544"/><text x="18.8148%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5,855,544 samples, 0.02%)</title><rect x="18.5648%" y="981" width="0.0158%" height="15" fill="rgb(224,227,45)" fg:x="6871867358" fg:w="5855544"/><text x="18.8148%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5,855,544 samples, 0.02%)</title><rect x="18.5648%" y="965" width="0.0158%" height="15" fill="rgb(229,198,43)" fg:x="6871867358" fg:w="5855544"/><text x="18.8148%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5,855,544 samples, 0.02%)</title><rect x="18.5648%" y="949" width="0.0158%" height="15" fill="rgb(206,209,35)" fg:x="6871867358" fg:w="5855544"/><text x="18.8148%" y="959.50"></text></g><g><title>mws5::search::best_pos (10,260,739 samples, 0.03%)</title><rect x="18.5648%" y="1093" width="0.0277%" height="15" fill="rgb(245,195,53)" fg:x="6871867358" fg:w="10260739"/><text x="18.8148%" y="1103.50"></text></g><g><title>mws5::dict::Dict::match_count (10,260,739 samples, 0.03%)</title><rect x="18.5648%" y="1077" width="0.0277%" height="15" fill="rgb(240,92,26)" fg:x="6871867358" fg:w="10260739"/><text x="18.8148%" y="1087.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (10,260,739 samples, 0.03%)</title><rect x="18.5648%" y="1061" width="0.0277%" height="15" fill="rgb(207,40,23)" fg:x="6871867358" fg:w="10260739"/><text x="18.8148%" y="1071.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::try_reset (4,405,195 samples, 0.01%)</title><rect x="18.5806%" y="1045" width="0.0119%" height="15" fill="rgb(223,111,35)" fg:x="6877722902" fg:w="4405195"/><text x="18.8306%" y="1055.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,364,682 samples, 0.01%)</title><rect x="18.6263%" y="869" width="0.0118%" height="15" fill="rgb(229,147,28)" fg:x="6894627159" fg:w="4364682"/><text x="18.8763%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (17,034,479 samples, 0.05%)</title><rect x="18.6039%" y="965" width="0.0460%" height="15" fill="rgb(211,29,28)" fg:x="6886324718" fg:w="17034479"/><text x="18.8539%" y="975.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17,034,479 samples, 0.05%)</title><rect x="18.6039%" y="949" width="0.0460%" height="15" fill="rgb(228,72,33)" fg:x="6886324718" fg:w="17034479"/><text x="18.8539%" y="959.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (17,034,479 samples, 0.05%)</title><rect x="18.6039%" y="933" width="0.0460%" height="15" fill="rgb(205,214,31)" fg:x="6886324718" fg:w="17034479"/><text x="18.8539%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17,034,479 samples, 0.05%)</title><rect x="18.6039%" y="917" width="0.0460%" height="15" fill="rgb(224,111,15)" fg:x="6886324718" fg:w="17034479"/><text x="18.8539%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17,034,479 samples, 0.05%)</title><rect x="18.6039%" y="901" width="0.0460%" height="15" fill="rgb(253,21,26)" fg:x="6886324718" fg:w="17034479"/><text x="18.8539%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13,098,210 samples, 0.04%)</title><rect x="18.6145%" y="885" width="0.0354%" height="15" fill="rgb(245,139,43)" fg:x="6890260987" fg:w="13098210"/><text x="18.8645%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4,367,356 samples, 0.01%)</title><rect x="18.6381%" y="869" width="0.0118%" height="15" fill="rgb(252,170,7)" fg:x="6898991841" fg:w="4367356"/><text x="18.8881%" y="879.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (21,444,577 samples, 0.06%)</title><rect x="18.6039%" y="1045" width="0.0579%" height="15" fill="rgb(231,118,14)" fg:x="6886324718" fg:w="21444577"/><text x="18.8539%" y="1055.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (21,444,577 samples, 0.06%)</title><rect x="18.6039%" y="1029" width="0.0579%" height="15" fill="rgb(238,83,0)" fg:x="6886324718" fg:w="21444577"/><text x="18.8539%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (21,444,577 samples, 0.06%)</title><rect x="18.6039%" y="1013" width="0.0579%" height="15" fill="rgb(221,39,39)" fg:x="6886324718" fg:w="21444577"/><text x="18.8539%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (21,444,577 samples, 0.06%)</title><rect x="18.6039%" y="997" width="0.0579%" height="15" fill="rgb(222,119,46)" fg:x="6886324718" fg:w="21444577"/><text x="18.8539%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (21,444,577 samples, 0.06%)</title><rect x="18.6039%" y="981" width="0.0579%" height="15" fill="rgb(222,165,49)" fg:x="6886324718" fg:w="21444577"/><text x="18.8539%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (4,410,098 samples, 0.01%)</title><rect x="18.6499%" y="965" width="0.0119%" height="15" fill="rgb(219,113,52)" fg:x="6903359197" fg:w="4410098"/><text x="18.8999%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4,410,098 samples, 0.01%)</title><rect x="18.6499%" y="949" width="0.0119%" height="15" fill="rgb(214,7,15)" fg:x="6903359197" fg:w="4410098"/><text x="18.8999%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (4,410,098 samples, 0.01%)</title><rect x="18.6499%" y="933" width="0.0119%" height="15" fill="rgb(235,32,4)" fg:x="6903359197" fg:w="4410098"/><text x="18.8999%" y="943.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (12,591,550 samples, 0.03%)</title><rect x="18.6746%" y="933" width="0.0340%" height="15" fill="rgb(238,90,54)" fg:x="6912529703" fg:w="12591550"/><text x="18.9246%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12,591,550 samples, 0.03%)</title><rect x="18.6746%" y="917" width="0.0340%" height="15" fill="rgb(213,208,19)" fg:x="6912529703" fg:w="12591550"/><text x="18.9246%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12,591,550 samples, 0.03%)</title><rect x="18.6746%" y="901" width="0.0340%" height="15" fill="rgb(233,156,4)" fg:x="6912529703" fg:w="12591550"/><text x="18.9246%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4,169,589 samples, 0.01%)</title><rect x="18.6974%" y="885" width="0.0113%" height="15" fill="rgb(207,194,5)" fg:x="6920951664" fg:w="4169589"/><text x="18.9474%" y="895.50"></text></g><g><title>hashbrown::map::make_hash (16,976,112 samples, 0.05%)</title><rect x="18.6746%" y="965" width="0.0459%" height="15" fill="rgb(206,111,30)" fg:x="6912529703" fg:w="16976112"/><text x="18.9246%" y="975.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16,976,112 samples, 0.05%)</title><rect x="18.6746%" y="949" width="0.0459%" height="15" fill="rgb(243,70,54)" fg:x="6912529703" fg:w="16976112"/><text x="18.9246%" y="959.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (4,384,562 samples, 0.01%)</title><rect x="18.7087%" y="933" width="0.0118%" height="15" fill="rgb(242,28,8)" fg:x="6925121253" fg:w="4384562"/><text x="18.9587%" y="943.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4,384,562 samples, 0.01%)</title><rect x="18.7087%" y="917" width="0.0118%" height="15" fill="rgb(219,106,18)" fg:x="6925121253" fg:w="4384562"/><text x="18.9587%" y="927.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4,384,562 samples, 0.01%)</title><rect x="18.7087%" y="901" width="0.0118%" height="15" fill="rgb(244,222,10)" fg:x="6925121253" fg:w="4384562"/><text x="18.9587%" y="911.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (4,384,562 samples, 0.01%)</title><rect x="18.7087%" y="885" width="0.0118%" height="15" fill="rgb(236,179,52)" fg:x="6925121253" fg:w="4384562"/><text x="18.9587%" y="895.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (26,049,292 samples, 0.07%)</title><rect x="18.6618%" y="1045" width="0.0704%" height="15" fill="rgb(213,23,39)" fg:x="6907769295" fg:w="26049292"/><text x="18.9118%" y="1055.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (26,049,292 samples, 0.07%)</title><rect x="18.6618%" y="1029" width="0.0704%" height="15" fill="rgb(238,48,10)" fg:x="6907769295" fg:w="26049292"/><text x="18.9118%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (25,598,677 samples, 0.07%)</title><rect x="18.6630%" y="1013" width="0.0692%" height="15" fill="rgb(251,196,23)" fg:x="6908219910" fg:w="25598677"/><text x="18.9130%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (25,598,677 samples, 0.07%)</title><rect x="18.6630%" y="997" width="0.0692%" height="15" fill="rgb(250,152,24)" fg:x="6908219910" fg:w="25598677"/><text x="18.9130%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (25,598,677 samples, 0.07%)</title><rect x="18.6630%" y="981" width="0.0692%" height="15" fill="rgb(209,150,17)" fg:x="6908219910" fg:w="25598677"/><text x="18.9130%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (4,312,772 samples, 0.01%)</title><rect x="18.7205%" y="965" width="0.0117%" height="15" fill="rgb(234,202,34)" fg:x="6929505815" fg:w="4312772"/><text x="18.9705%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4,312,772 samples, 0.01%)</title><rect x="18.7205%" y="949" width="0.0117%" height="15" fill="rgb(253,148,53)" fg:x="6929505815" fg:w="4312772"/><text x="18.9705%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (4,312,772 samples, 0.01%)</title><rect x="18.7205%" y="933" width="0.0117%" height="15" fill="rgb(218,129,16)" fg:x="6929505815" fg:w="4312772"/><text x="18.9705%" y="943.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4,312,772 samples, 0.01%)</title><rect x="18.7205%" y="917" width="0.0117%" height="15" fill="rgb(216,85,19)" fg:x="6929505815" fg:w="4312772"/><text x="18.9705%" y="927.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (4,312,772 samples, 0.01%)</title><rect x="18.7205%" y="901" width="0.0117%" height="15" fill="rgb(235,228,7)" fg:x="6929505815" fg:w="4312772"/><text x="18.9705%" y="911.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::hash_key (12,894,482 samples, 0.03%)</title><rect x="18.7322%" y="1029" width="0.0348%" height="15" fill="rgb(245,175,0)" fg:x="6933818587" fg:w="12894482"/><text x="18.9822%" y="1039.50"></text></g><g><title>&lt;caches::lfu::DefaultKeyHasher&lt;K&gt; as caches::lfu::KeyHasher&lt;K&gt;&gt;::hash_key (12,894,482 samples, 0.03%)</title><rect x="18.7322%" y="1013" width="0.0348%" height="15" fill="rgb(208,168,36)" fg:x="6933818587" fg:w="12894482"/><text x="18.9822%" y="1023.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (12,894,482 samples, 0.03%)</title><rect x="18.7322%" y="997" width="0.0348%" height="15" fill="rgb(246,171,24)" fg:x="6933818587" fg:w="12894482"/><text x="18.9822%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12,894,482 samples, 0.03%)</title><rect x="18.7322%" y="981" width="0.0348%" height="15" fill="rgb(215,142,24)" fg:x="6933818587" fg:w="12894482"/><text x="18.9822%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12,894,482 samples, 0.03%)</title><rect x="18.7322%" y="965" width="0.0348%" height="15" fill="rgb(250,187,7)" fg:x="6933818587" fg:w="12894482"/><text x="18.9822%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (12,894,482 samples, 0.03%)</title><rect x="18.7322%" y="949" width="0.0348%" height="15" fill="rgb(228,66,33)" fg:x="6933818587" fg:w="12894482"/><text x="18.9822%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8,981,550 samples, 0.02%)</title><rect x="18.7427%" y="933" width="0.0243%" height="15" fill="rgb(234,215,21)" fg:x="6937731519" fg:w="8981550"/><text x="18.9927%" y="943.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (64,237,383 samples, 0.17%)</title><rect x="18.6039%" y="1061" width="0.1735%" height="15" fill="rgb(222,191,20)" fg:x="6886324718" fg:w="64237383"/><text x="18.8539%" y="1071.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::increment (16,743,514 samples, 0.05%)</title><rect x="18.7322%" y="1045" width="0.0452%" height="15" fill="rgb(245,79,54)" fg:x="6933818587" fg:w="16743514"/><text x="18.9822%" y="1055.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::try_reset (3,849,032 samples, 0.01%)</title><rect x="18.7670%" y="1029" width="0.0104%" height="15" fill="rgb(240,10,37)" fg:x="6946713069" fg:w="3849032"/><text x="19.0170%" y="1039.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::reset (3,849,032 samples, 0.01%)</title><rect x="18.7670%" y="1013" width="0.0104%" height="15" fill="rgb(214,192,32)" fg:x="6946713069" fg:w="3849032"/><text x="19.0170%" y="1023.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset (3,849,032 samples, 0.01%)</title><rect x="18.7670%" y="997" width="0.0104%" height="15" fill="rgb(209,36,54)" fg:x="6946713069" fg:w="3849032"/><text x="19.0170%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (3,849,032 samples, 0.01%)</title><rect x="18.7670%" y="981" width="0.0104%" height="15" fill="rgb(220,10,11)" fg:x="6946713069" fg:w="3849032"/><text x="19.0170%" y="991.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset::_{{closure}} (3,849,032 samples, 0.01%)</title><rect x="18.7670%" y="965" width="0.0104%" height="15" fill="rgb(221,106,17)" fg:x="6946713069" fg:w="3849032"/><text x="19.0170%" y="975.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset (3,849,032 samples, 0.01%)</title><rect x="18.7670%" y="949" width="0.0104%" height="15" fill="rgb(251,142,44)" fg:x="6946713069" fg:w="3849032"/><text x="19.0170%" y="959.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (3,849,032 samples, 0.01%)</title><rect x="18.7670%" y="933" width="0.0104%" height="15" fill="rgb(238,13,15)" fg:x="6946713069" fg:w="3849032"/><text x="19.0170%" y="943.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset::_{{closure}} (3,849,032 samples, 0.01%)</title><rect x="18.7670%" y="917" width="0.0104%" height="15" fill="rgb(208,107,27)" fg:x="6946713069" fg:w="3849032"/><text x="19.0170%" y="927.50"></text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (387,755,666 samples, 1.05%)</title><rect x="17.7418%" y="1109" width="1.0475%" height="15" fill="rgb(205,136,37)" fg:x="6567216161" fg:w="387755666"/><text x="17.9918%" y="1119.50"></text></g><g><title>mws5::search::cross_fit (72,843,730 samples, 0.20%)</title><rect x="18.5925%" y="1093" width="0.1968%" height="15" fill="rgb(250,205,27)" fg:x="6882128097" fg:w="72843730"/><text x="18.8425%" y="1103.50"></text></g><g><title>mws5::dict::Dict::is_fit (72,843,730 samples, 0.20%)</title><rect x="18.5925%" y="1077" width="0.1968%" height="15" fill="rgb(210,80,43)" fg:x="6882128097" fg:w="72843730"/><text x="18.8425%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,409,726 samples, 0.01%)</title><rect x="18.7774%" y="1061" width="0.0119%" height="15" fill="rgb(247,160,36)" fg:x="6950562101" fg:w="4409726"/><text x="19.0274%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (4,409,726 samples, 0.01%)</title><rect x="18.7774%" y="1045" width="0.0119%" height="15" fill="rgb(234,13,49)" fg:x="6950562101" fg:w="4409726"/><text x="19.0274%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4,409,726 samples, 0.01%)</title><rect x="18.7774%" y="1029" width="0.0119%" height="15" fill="rgb(234,122,0)" fg:x="6950562101" fg:w="4409726"/><text x="19.0274%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4,409,726 samples, 0.01%)</title><rect x="18.7774%" y="1013" width="0.0119%" height="15" fill="rgb(207,146,38)" fg:x="6950562101" fg:w="4409726"/><text x="19.0274%" y="1023.50"></text></g><g><title>core::iter::adapters::copied::copy_try_fold::_{{closure}} (4,409,726 samples, 0.01%)</title><rect x="18.7774%" y="997" width="0.0119%" height="15" fill="rgb(207,177,25)" fg:x="6950562101" fg:w="4409726"/><text x="19.0274%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (4,409,726 samples, 0.01%)</title><rect x="18.7774%" y="981" width="0.0119%" height="15" fill="rgb(211,178,42)" fg:x="6950562101" fg:w="4409726"/><text x="19.0274%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4,409,726 samples, 0.01%)</title><rect x="18.7774%" y="965" width="0.0119%" height="15" fill="rgb(230,69,54)" fg:x="6950562101" fg:w="4409726"/><text x="19.0274%" y="975.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (4,409,726 samples, 0.01%)</title><rect x="18.7774%" y="949" width="0.0119%" height="15" fill="rgb(214,135,41)" fg:x="6950562101" fg:w="4409726"/><text x="19.0274%" y="959.50"></text></g><g><title>mws5::words::Word::is_fit (4,409,726 samples, 0.01%)</title><rect x="18.7774%" y="933" width="0.0119%" height="15" fill="rgb(237,67,25)" fg:x="6950562101" fg:w="4409726"/><text x="19.0274%" y="943.50"></text></g><g><title>[[stack]] (3,881,084,107 samples, 10.49%)</title><rect x="8.3161%" y="1125" width="10.4850%" height="15" fill="rgb(222,189,50)" fg:x="3078259533" fg:w="3881084107"/><text x="8.5661%" y="1135.50">[[stack]]</text></g><g><title>mws5::squares::Square::has_double (4,371,813 samples, 0.01%)</title><rect x="18.7893%" y="1109" width="0.0118%" height="15" fill="rgb(245,148,34)" fg:x="6954971827" fg:w="4371813"/><text x="19.0393%" y="1119.50"></text></g><g><title>__GI___libc_free (3,978,294 samples, 0.01%)</title><rect x="18.8011%" y="1109" width="0.0107%" height="15" fill="rgb(222,29,6)" fg:x="6959343640" fg:w="3978294"/><text x="19.0511%" y="1119.50"></text></g><g><title>_int_free (3,978,294 samples, 0.01%)</title><rect x="18.8011%" y="1093" width="0.0107%" height="15" fill="rgb(221,189,43)" fg:x="6959343640" fg:w="3978294"/><text x="19.0511%" y="1103.50"></text></g><g><title>tcache_free (3,978,294 samples, 0.01%)</title><rect x="18.8011%" y="1077" width="0.0107%" height="15" fill="rgb(207,36,27)" fg:x="6959343640" fg:w="3978294"/><text x="19.0511%" y="1087.50"></text></g><g><title>tcache_put (3,978,294 samples, 0.01%)</title><rect x="18.8011%" y="1061" width="0.0107%" height="15" fill="rgb(217,90,24)" fg:x="6959343640" fg:w="3978294"/><text x="19.0511%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (7,891,450 samples, 0.02%)</title><rect x="18.8119%" y="1061" width="0.0213%" height="15" fill="rgb(224,66,35)" fg:x="6963321934" fg:w="7891450"/><text x="19.0619%" y="1071.50"></text></g><g><title>core::intrinsics::unlikely (3,973,137 samples, 0.01%)</title><rect x="18.8225%" y="1045" width="0.0107%" height="15" fill="rgb(221,13,50)" fg:x="6967240247" fg:w="3973137"/><text x="19.0725%" y="1055.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4,332,135 samples, 0.01%)</title><rect x="18.8332%" y="1045" width="0.0117%" height="15" fill="rgb(236,68,49)" fg:x="6971213384" fg:w="4332135"/><text x="19.0832%" y="1055.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (4,332,135 samples, 0.01%)</title><rect x="18.8332%" y="1029" width="0.0117%" height="15" fill="rgb(229,146,28)" fg:x="6971213384" fg:w="4332135"/><text x="19.0832%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (16,589,958 samples, 0.04%)</title><rect x="18.8119%" y="1093" width="0.0448%" height="15" fill="rgb(225,31,38)" fg:x="6963321934" fg:w="16589958"/><text x="19.0619%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (16,589,958 samples, 0.04%)</title><rect x="18.8119%" y="1077" width="0.0448%" height="15" fill="rgb(250,208,3)" fg:x="6963321934" fg:w="16589958"/><text x="19.0619%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (8,698,508 samples, 0.02%)</title><rect x="18.8332%" y="1061" width="0.0235%" height="15" fill="rgb(246,54,23)" fg:x="6971213384" fg:w="8698508"/><text x="19.0832%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (4,366,373 samples, 0.01%)</title><rect x="18.8449%" y="1045" width="0.0118%" height="15" fill="rgb(243,76,11)" fg:x="6975545519" fg:w="4366373"/><text x="19.0949%" y="1055.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (4,366,373 samples, 0.01%)</title><rect x="18.8449%" y="1029" width="0.0118%" height="15" fill="rgb(245,21,50)" fg:x="6975545519" fg:w="4366373"/><text x="19.0949%" y="1039.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (4,366,373 samples, 0.01%)</title><rect x="18.8449%" y="1013" width="0.0118%" height="15" fill="rgb(228,9,43)" fg:x="6975545519" fg:w="4366373"/><text x="19.0949%" y="1023.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4,366,373 samples, 0.01%)</title><rect x="18.8449%" y="997" width="0.0118%" height="15" fill="rgb(208,100,47)" fg:x="6975545519" fg:w="4366373"/><text x="19.0949%" y="1007.50"></text></g><g><title>&lt;caches::KeyRef&lt;K&gt; as core::cmp::PartialEq&gt;::eq (4,366,373 samples, 0.01%)</title><rect x="18.8449%" y="981" width="0.0118%" height="15" fill="rgb(232,26,8)" fg:x="6975545519" fg:w="4366373"/><text x="19.0949%" y="991.50"></text></g><g><title>&lt;mws5::words::Word as core::cmp::PartialEq&gt;::eq (4,366,373 samples, 0.01%)</title><rect x="18.8449%" y="965" width="0.0118%" height="15" fill="rgb(216,166,38)" fg:x="6975545519" fg:w="4366373"/><text x="19.0949%" y="975.50"></text></g><g><title>hashbrown::map::make_hash (4,337,497 samples, 0.01%)</title><rect x="18.8567%" y="1093" width="0.0117%" height="15" fill="rgb(251,202,51)" fg:x="6979911892" fg:w="4337497"/><text x="19.1067%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,337,497 samples, 0.01%)</title><rect x="18.8567%" y="1077" width="0.0117%" height="15" fill="rgb(254,216,34)" fg:x="6979911892" fg:w="4337497"/><text x="19.1067%" y="1087.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (4,337,497 samples, 0.01%)</title><rect x="18.8567%" y="1061" width="0.0117%" height="15" fill="rgb(251,32,27)" fg:x="6979911892" fg:w="4337497"/><text x="19.1067%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4,337,497 samples, 0.01%)</title><rect x="18.8567%" y="1045" width="0.0117%" height="15" fill="rgb(208,127,28)" fg:x="6979911892" fg:w="4337497"/><text x="19.1067%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4,337,497 samples, 0.01%)</title><rect x="18.8567%" y="1029" width="0.0117%" height="15" fill="rgb(224,137,22)" fg:x="6979911892" fg:w="4337497"/><text x="19.1067%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4,337,497 samples, 0.01%)</title><rect x="18.8567%" y="1013" width="0.0117%" height="15" fill="rgb(254,70,32)" fg:x="6979911892" fg:w="4337497"/><text x="19.1067%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4,337,497 samples, 0.01%)</title><rect x="18.8567%" y="997" width="0.0117%" height="15" fill="rgb(229,75,37)" fg:x="6979911892" fg:w="4337497"/><text x="19.1067%" y="1007.50"></text></g><g><title>[anon] (29,010,289 samples, 0.08%)</title><rect x="18.8011%" y="1125" width="0.0784%" height="15" fill="rgb(252,64,23)" fg:x="6959343640" fg:w="29010289"/><text x="19.0511%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (25,031,995 samples, 0.07%)</title><rect x="18.8119%" y="1109" width="0.0676%" height="15" fill="rgb(232,162,48)" fg:x="6963321934" fg:w="25031995"/><text x="19.0619%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (4,104,540 samples, 0.01%)</title><rect x="18.8684%" y="1093" width="0.0111%" height="15" fill="rgb(246,160,12)" fg:x="6984249389" fg:w="4104540"/><text x="19.1184%" y="1103.50"></text></g><g><title>[libc.so.6] (4,098,129 samples, 0.01%)</title><rect x="18.8795%" y="1125" width="0.0111%" height="15" fill="rgb(247,166,0)" fg:x="6988353929" fg:w="4098129"/><text x="19.1295%" y="1135.50"></text></g><g><title>mws5::squares::Square::has_double (4,098,129 samples, 0.01%)</title><rect x="18.8795%" y="1109" width="0.0111%" height="15" fill="rgb(249,219,21)" fg:x="6988353929" fg:w="4098129"/><text x="19.1295%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4,098,129 samples, 0.01%)</title><rect x="18.8795%" y="1093" width="0.0111%" height="15" fill="rgb(205,209,3)" fg:x="6988353929" fg:w="4098129"/><text x="19.1295%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4,098,129 samples, 0.01%)</title><rect x="18.8795%" y="1077" width="0.0111%" height="15" fill="rgb(243,44,1)" fg:x="6988353929" fg:w="4098129"/><text x="19.1295%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4,098,129 samples, 0.01%)</title><rect x="18.8795%" y="1061" width="0.0111%" height="15" fill="rgb(206,159,16)" fg:x="6988353929" fg:w="4098129"/><text x="19.1295%" y="1071.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4,098,129 samples, 0.01%)</title><rect x="18.8795%" y="1045" width="0.0111%" height="15" fill="rgb(244,77,30)" fg:x="6988353929" fg:w="4098129"/><text x="19.1295%" y="1055.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4,098,129 samples, 0.01%)</title><rect x="18.8795%" y="1029" width="0.0111%" height="15" fill="rgb(218,69,12)" fg:x="6988353929" fg:w="4098129"/><text x="19.1295%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4,098,129 samples, 0.01%)</title><rect x="18.8795%" y="1013" width="0.0111%" height="15" fill="rgb(212,87,7)" fg:x="6988353929" fg:w="4098129"/><text x="19.1295%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,098,129 samples, 0.01%)</title><rect x="18.8795%" y="997" width="0.0111%" height="15" fill="rgb(245,114,25)" fg:x="6988353929" fg:w="4098129"/><text x="19.1295%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::inspect::Inspect&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,098,129 samples, 0.01%)</title><rect x="18.8795%" y="981" width="0.0111%" height="15" fill="rgb(210,61,42)" fg:x="6988353929" fg:w="4098129"/><text x="19.1295%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,098,129 samples, 0.01%)</title><rect x="18.8795%" y="965" width="0.0111%" height="15" fill="rgb(211,52,33)" fg:x="6988353929" fg:w="4098129"/><text x="19.1295%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,098,129 samples, 0.01%)</title><rect x="18.8795%" y="949" width="0.0111%" height="15" fill="rgb(234,58,33)" fg:x="6988353929" fg:w="4098129"/><text x="19.1295%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4,098,129 samples, 0.01%)</title><rect x="18.8795%" y="933" width="0.0111%" height="15" fill="rgb(220,115,36)" fg:x="6988353929" fg:w="4098129"/><text x="19.1295%" y="943.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (4,098,129 samples, 0.01%)</title><rect x="18.8795%" y="917" width="0.0111%" height="15" fill="rgb(243,153,54)" fg:x="6988353929" fg:w="4098129"/><text x="19.1295%" y="927.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::_{{closure}} (4,098,129 samples, 0.01%)</title><rect x="18.8795%" y="901" width="0.0111%" height="15" fill="rgb(251,47,18)" fg:x="6988353929" fg:w="4098129"/><text x="19.1295%" y="911.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::contains (4,269,387 samples, 0.01%)</title><rect x="18.9024%" y="1093" width="0.0115%" height="15" fill="rgb(242,102,42)" fg:x="6996826613" fg:w="4269387"/><text x="19.1524%" y="1103.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::contains (4,269,387 samples, 0.01%)</title><rect x="18.9024%" y="1077" width="0.0115%" height="15" fill="rgb(234,31,38)" fg:x="6996826613" fg:w="4269387"/><text x="19.1524%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (4,269,387 samples, 0.01%)</title><rect x="18.9024%" y="1061" width="0.0115%" height="15" fill="rgb(221,117,51)" fg:x="6996826613" fg:w="4269387"/><text x="19.1524%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (4,269,387 samples, 0.01%)</title><rect x="18.9024%" y="1045" width="0.0115%" height="15" fill="rgb(212,20,18)" fg:x="6996826613" fg:w="4269387"/><text x="19.1524%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (4,269,387 samples, 0.01%)</title><rect x="18.9024%" y="1029" width="0.0115%" height="15" fill="rgb(245,133,36)" fg:x="6996826613" fg:w="4269387"/><text x="19.1524%" y="1039.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::put (12,916,714 samples, 0.03%)</title><rect x="18.8906%" y="1109" width="0.0349%" height="15" fill="rgb(212,6,19)" fg:x="6992452058" fg:w="12916714"/><text x="19.1406%" y="1119.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::lt (4,272,772 samples, 0.01%)</title><rect x="18.9139%" y="1093" width="0.0115%" height="15" fill="rgb(218,1,36)" fg:x="7001096000" fg:w="4272772"/><text x="19.1639%" y="1103.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::put (4,341,130 samples, 0.01%)</title><rect x="18.9255%" y="1109" width="0.0117%" height="15" fill="rgb(246,84,54)" fg:x="7005368772" fg:w="4341130"/><text x="19.1755%" y="1119.50"></text></g><g><title>__GI___libc_free (41,820,919 samples, 0.11%)</title><rect x="18.9372%" y="1109" width="0.1130%" height="15" fill="rgb(242,110,6)" fg:x="7009709902" fg:w="41820919"/><text x="19.1872%" y="1119.50"></text></g><g><title>_int_free (12,508,674 samples, 0.03%)</title><rect x="19.0164%" y="1093" width="0.0338%" height="15" fill="rgb(214,47,5)" fg:x="7039022147" fg:w="12508674"/><text x="19.2664%" y="1103.50"></text></g><g><title>tcache_free (12,508,674 samples, 0.03%)</title><rect x="19.0164%" y="1077" width="0.0338%" height="15" fill="rgb(218,159,25)" fg:x="7039022147" fg:w="12508674"/><text x="19.2664%" y="1087.50"></text></g><g><title>tcache_put (8,126,042 samples, 0.02%)</title><rect x="19.0282%" y="1061" width="0.0220%" height="15" fill="rgb(215,211,28)" fg:x="7043404779" fg:w="8126042"/><text x="19.2782%" y="1071.50"></text></g><g><title>__GI___libc_malloc (29,733,862 samples, 0.08%)</title><rect x="19.0502%" y="1109" width="0.0803%" height="15" fill="rgb(238,59,32)" fg:x="7051530821" fg:w="29733862"/><text x="19.3002%" y="1119.50"></text></g><g><title>tcache_try_malloc (8,589,610 samples, 0.02%)</title><rect x="19.1073%" y="1093" width="0.0232%" height="15" fill="rgb(226,82,3)" fg:x="7072675073" fg:w="8589610"/><text x="19.3573%" y="1103.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::hash_key (8,156,411 samples, 0.02%)</title><rect x="19.1305%" y="1093" width="0.0220%" height="15" fill="rgb(240,164,32)" fg:x="7081264683" fg:w="8156411"/><text x="19.3805%" y="1103.50"></text></g><g><title>&lt;caches::lfu::DefaultKeyHasher&lt;K&gt; as caches::lfu::KeyHasher&lt;K&gt;&gt;::hash_key (8,156,411 samples, 0.02%)</title><rect x="19.1305%" y="1077" width="0.0220%" height="15" fill="rgb(232,46,7)" fg:x="7081264683" fg:w="8156411"/><text x="19.3805%" y="1087.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (8,156,411 samples, 0.02%)</title><rect x="19.1305%" y="1061" width="0.0220%" height="15" fill="rgb(229,129,53)" fg:x="7081264683" fg:w="8156411"/><text x="19.3805%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8,156,411 samples, 0.02%)</title><rect x="19.1305%" y="1045" width="0.0220%" height="15" fill="rgb(234,188,29)" fg:x="7081264683" fg:w="8156411"/><text x="19.3805%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8,156,411 samples, 0.02%)</title><rect x="19.1305%" y="1029" width="0.0220%" height="15" fill="rgb(246,141,4)" fg:x="7081264683" fg:w="8156411"/><text x="19.3805%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4,199,952 samples, 0.01%)</title><rect x="19.1412%" y="1013" width="0.0113%" height="15" fill="rgb(229,23,39)" fg:x="7085221142" fg:w="4199952"/><text x="19.3912%" y="1023.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::compare_helper (16,533,191 samples, 0.04%)</title><rect x="19.1305%" y="1109" width="0.0447%" height="15" fill="rgb(206,12,3)" fg:x="7081264683" fg:w="16533191"/><text x="19.3805%" y="1119.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains (8,376,780 samples, 0.02%)</title><rect x="19.1525%" y="1093" width="0.0226%" height="15" fill="rgb(252,226,20)" fg:x="7089421094" fg:w="8376780"/><text x="19.4025%" y="1103.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::set (8,687,316 samples, 0.02%)</title><rect x="19.2834%" y="1077" width="0.0235%" height="15" fill="rgb(216,123,35)" fg:x="7137852363" fg:w="8687316"/><text x="19.5334%" y="1087.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::add (48,298,174 samples, 0.13%)</title><rect x="19.2089%" y="1093" width="0.1305%" height="15" fill="rgb(212,68,40)" fg:x="7110298670" fg:w="48298174"/><text x="19.4589%" y="1103.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (12,057,165 samples, 0.03%)</title><rect x="19.3068%" y="1077" width="0.0326%" height="15" fill="rgb(254,125,32)" fg:x="7146539679" fg:w="12057165"/><text x="19.5568%" y="1087.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (12,057,165 samples, 0.03%)</title><rect x="19.3068%" y="1061" width="0.0326%" height="15" fill="rgb(253,97,22)" fg:x="7146539679" fg:w="12057165"/><text x="19.5568%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::lt (4,021,598 samples, 0.01%)</title><rect x="19.3285%" y="1045" width="0.0109%" height="15" fill="rgb(241,101,14)" fg:x="7154575246" fg:w="4021598"/><text x="19.5785%" y="1055.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::is_set (41,351,396 samples, 0.11%)</title><rect x="19.5064%" y="1077" width="0.1117%" height="15" fill="rgb(238,103,29)" fg:x="7220414605" fg:w="41351396"/><text x="19.7564%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (8,152,061 samples, 0.02%)</title><rect x="19.5961%" y="1061" width="0.0220%" height="15" fill="rgb(233,195,47)" fg:x="7253613940" fg:w="8152061"/><text x="19.8461%" y="1071.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (8,152,061 samples, 0.02%)</title><rect x="19.5961%" y="1045" width="0.0220%" height="15" fill="rgb(246,218,30)" fg:x="7253613940" fg:w="8152061"/><text x="19.8461%" y="1055.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8,152,061 samples, 0.02%)</title><rect x="19.5961%" y="1029" width="0.0220%" height="15" fill="rgb(219,145,47)" fg:x="7253613940" fg:w="8152061"/><text x="19.8461%" y="1039.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains_or_add (197,031,016 samples, 0.53%)</title><rect x="19.1752%" y="1109" width="0.5323%" height="15" fill="rgb(243,12,26)" fg:x="7097797874" fg:w="197031016"/><text x="19.4252%" y="1119.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains (136,232,046 samples, 0.37%)</title><rect x="19.3394%" y="1093" width="0.3680%" height="15" fill="rgb(214,87,16)" fg:x="7158596844" fg:w="136232046"/><text x="19.5894%" y="1103.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (33,062,889 samples, 0.09%)</title><rect x="19.6181%" y="1077" width="0.0893%" height="15" fill="rgb(208,99,42)" fg:x="7261766001" fg:w="33062889"/><text x="19.8681%" y="1087.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (33,062,889 samples, 0.09%)</title><rect x="19.6181%" y="1061" width="0.0893%" height="15" fill="rgb(253,99,2)" fg:x="7261766001" fg:w="33062889"/><text x="19.8681%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::lt (6,891,821 samples, 0.02%)</title><rect x="19.6888%" y="1045" width="0.0186%" height="15" fill="rgb(220,168,23)" fg:x="7287937069" fg:w="6891821"/><text x="19.9388%" y="1055.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::increment (45,078,658 samples, 0.12%)</title><rect x="19.7075%" y="1109" width="0.1218%" height="15" fill="rgb(242,38,24)" fg:x="7294828890" fg:w="45078658"/><text x="19.9575%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (45,061,389 samples, 0.12%)</title><rect x="19.7075%" y="1093" width="0.1217%" height="15" fill="rgb(225,182,9)" fg:x="7294846159" fg:w="45061389"/><text x="19.9575%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (45,061,389 samples, 0.12%)</title><rect x="19.7075%" y="1077" width="0.1217%" height="15" fill="rgb(243,178,37)" fg:x="7294846159" fg:w="45061389"/><text x="19.9575%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (45,061,389 samples, 0.12%)</title><rect x="19.7075%" y="1061" width="0.1217%" height="15" fill="rgb(232,139,19)" fg:x="7294846159" fg:w="45061389"/><text x="19.9575%" y="1071.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::increment::_{{closure}} (45,061,389 samples, 0.12%)</title><rect x="19.7075%" y="1045" width="0.1217%" height="15" fill="rgb(225,201,24)" fg:x="7294846159" fg:w="45061389"/><text x="19.9575%" y="1055.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::increment (26,276,590 samples, 0.07%)</title><rect x="19.7582%" y="1029" width="0.0710%" height="15" fill="rgb(221,47,46)" fg:x="7313630958" fg:w="26276590"/><text x="20.0082%" y="1039.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::capturing_put (8,387,936 samples, 0.02%)</title><rect x="19.8292%" y="1109" width="0.0227%" height="15" fill="rgb(249,23,13)" fg:x="7339907548" fg:w="8387936"/><text x="20.0792%" y="1119.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,386,783 samples, 0.01%)</title><rect x="19.9760%" y="949" width="0.0119%" height="15" fill="rgb(219,9,5)" fg:x="7394236444" fg:w="4386783"/><text x="20.2260%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8,742,824 samples, 0.02%)</title><rect x="19.9760%" y="965" width="0.0236%" height="15" fill="rgb(254,171,16)" fg:x="7394236444" fg:w="8742824"/><text x="20.2260%" y="975.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4,356,041 samples, 0.01%)</title><rect x="19.9879%" y="949" width="0.0118%" height="15" fill="rgb(230,171,20)" fg:x="7398623227" fg:w="4356041"/><text x="20.2379%" y="959.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (17,384,115 samples, 0.05%)</title><rect x="19.9760%" y="1013" width="0.0470%" height="15" fill="rgb(210,71,41)" fg:x="7394236444" fg:w="17384115"/><text x="20.2260%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17,384,115 samples, 0.05%)</title><rect x="19.9760%" y="997" width="0.0470%" height="15" fill="rgb(206,173,20)" fg:x="7394236444" fg:w="17384115"/><text x="20.2260%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17,384,115 samples, 0.05%)</title><rect x="19.9760%" y="981" width="0.0470%" height="15" fill="rgb(233,88,34)" fg:x="7394236444" fg:w="17384115"/><text x="20.2260%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8,641,291 samples, 0.02%)</title><rect x="19.9996%" y="965" width="0.0233%" height="15" fill="rgb(223,209,46)" fg:x="7402979268" fg:w="8641291"/><text x="20.2496%" y="975.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,290,210 samples, 0.01%)</title><rect x="20.0114%" y="949" width="0.0116%" height="15" fill="rgb(250,43,18)" fg:x="7407330349" fg:w="4290210"/><text x="20.2614%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (21,436,873 samples, 0.06%)</title><rect x="19.9760%" y="1045" width="0.0579%" height="15" fill="rgb(208,13,10)" fg:x="7394236444" fg:w="21436873"/><text x="20.2260%" y="1055.50"></text></g><g><title>core::hash::BuildHasher::hash_one (21,436,873 samples, 0.06%)</title><rect x="19.9760%" y="1029" width="0.0579%" height="15" fill="rgb(212,200,36)" fg:x="7394236444" fg:w="21436873"/><text x="20.2260%" y="1039.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (4,052,758 samples, 0.01%)</title><rect x="20.0230%" y="1013" width="0.0109%" height="15" fill="rgb(225,90,30)" fg:x="7411620559" fg:w="4052758"/><text x="20.2730%" y="1023.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4,052,758 samples, 0.01%)</title><rect x="20.0230%" y="997" width="0.0109%" height="15" fill="rgb(236,182,39)" fg:x="7411620559" fg:w="4052758"/><text x="20.2730%" y="1007.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4,052,758 samples, 0.01%)</title><rect x="20.0230%" y="981" width="0.0109%" height="15" fill="rgb(212,144,35)" fg:x="7411620559" fg:w="4052758"/><text x="20.2730%" y="991.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (4,052,758 samples, 0.01%)</title><rect x="20.0230%" y="965" width="0.0109%" height="15" fill="rgb(228,63,44)" fg:x="7411620559" fg:w="4052758"/><text x="20.2730%" y="975.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (8,325,366 samples, 0.02%)</title><rect x="20.0455%" y="997" width="0.0225%" height="15" fill="rgb(228,109,6)" fg:x="7419951318" fg:w="8325366"/><text x="20.2955%" y="1007.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (8,325,366 samples, 0.02%)</title><rect x="20.0455%" y="981" width="0.0225%" height="15" fill="rgb(238,117,24)" fg:x="7419951318" fg:w="8325366"/><text x="20.2955%" y="991.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (3,961,208 samples, 0.01%)</title><rect x="20.0573%" y="965" width="0.0107%" height="15" fill="rgb(242,26,26)" fg:x="7424315476" fg:w="3961208"/><text x="20.3073%" y="975.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (3,961,208 samples, 0.01%)</title><rect x="20.0573%" y="949" width="0.0107%" height="15" fill="rgb(221,92,48)" fg:x="7424315476" fg:w="3961208"/><text x="20.3073%" y="959.50"></text></g><g><title>core::num::nonzero::NonZero&lt;T&gt;::get (3,961,208 samples, 0.01%)</title><rect x="20.0573%" y="933" width="0.0107%" height="15" fill="rgb(209,209,32)" fg:x="7424315476" fg:w="3961208"/><text x="20.3073%" y="943.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (4,333,494 samples, 0.01%)</title><rect x="20.0680%" y="997" width="0.0117%" height="15" fill="rgb(221,70,22)" fg:x="7428276684" fg:w="4333494"/><text x="20.3180%" y="1007.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4,333,494 samples, 0.01%)</title><rect x="20.0680%" y="981" width="0.0117%" height="15" fill="rgb(248,145,5)" fg:x="7428276684" fg:w="4333494"/><text x="20.3180%" y="991.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (92,784,999 samples, 0.25%)</title><rect x="19.8519%" y="1109" width="0.2507%" height="15" fill="rgb(226,116,26)" fg:x="7348295484" fg:w="92784999"/><text x="20.1019%" y="1119.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (46,844,039 samples, 0.13%)</title><rect x="19.9760%" y="1093" width="0.1266%" height="15" fill="rgb(244,5,17)" fg:x="7394236444" fg:w="46844039"/><text x="20.2260%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (46,844,039 samples, 0.13%)</title><rect x="19.9760%" y="1077" width="0.1266%" height="15" fill="rgb(252,159,33)" fg:x="7394236444" fg:w="46844039"/><text x="20.2260%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (46,844,039 samples, 0.13%)</title><rect x="19.9760%" y="1061" width="0.1266%" height="15" fill="rgb(206,71,0)" fg:x="7394236444" fg:w="46844039"/><text x="20.2260%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (25,407,166 samples, 0.07%)</title><rect x="20.0339%" y="1045" width="0.0686%" height="15" fill="rgb(233,118,54)" fg:x="7415673317" fg:w="25407166"/><text x="20.2839%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (25,407,166 samples, 0.07%)</title><rect x="20.0339%" y="1029" width="0.0686%" height="15" fill="rgb(234,83,48)" fg:x="7415673317" fg:w="25407166"/><text x="20.2839%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (21,129,165 samples, 0.06%)</title><rect x="20.0455%" y="1013" width="0.0571%" height="15" fill="rgb(228,3,54)" fg:x="7419951318" fg:w="21129165"/><text x="20.2955%" y="1023.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (8,470,305 samples, 0.02%)</title><rect x="20.0797%" y="997" width="0.0229%" height="15" fill="rgb(226,155,13)" fg:x="7432610178" fg:w="8470305"/><text x="20.3297%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12,929,550 samples, 0.03%)</title><rect x="20.1026%" y="1013" width="0.0349%" height="15" fill="rgb(241,28,37)" fg:x="7441080483" fg:w="12929550"/><text x="20.3526%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,259,111 samples, 0.01%)</title><rect x="20.1260%" y="997" width="0.0115%" height="15" fill="rgb(233,93,10)" fg:x="7449750922" fg:w="4259111"/><text x="20.3760%" y="1007.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8,712,189 samples, 0.02%)</title><rect x="20.1375%" y="997" width="0.0235%" height="15" fill="rgb(225,113,19)" fg:x="7454010033" fg:w="8712189"/><text x="20.3875%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (34,661,418 samples, 0.09%)</title><rect x="20.1026%" y="1093" width="0.0936%" height="15" fill="rgb(241,2,18)" fg:x="7441080483" fg:w="34661418"/><text x="20.3526%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (34,661,418 samples, 0.09%)</title><rect x="20.1026%" y="1077" width="0.0936%" height="15" fill="rgb(228,207,21)" fg:x="7441080483" fg:w="34661418"/><text x="20.3526%" y="1087.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (34,661,418 samples, 0.09%)</title><rect x="20.1026%" y="1061" width="0.0936%" height="15" fill="rgb(213,211,35)" fg:x="7441080483" fg:w="34661418"/><text x="20.3526%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (34,661,418 samples, 0.09%)</title><rect x="20.1026%" y="1045" width="0.0936%" height="15" fill="rgb(209,83,10)" fg:x="7441080483" fg:w="34661418"/><text x="20.3526%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (34,661,418 samples, 0.09%)</title><rect x="20.1026%" y="1029" width="0.0936%" height="15" fill="rgb(209,164,1)" fg:x="7441080483" fg:w="34661418"/><text x="20.3526%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (21,731,868 samples, 0.06%)</title><rect x="20.1375%" y="1013" width="0.0587%" height="15" fill="rgb(213,184,43)" fg:x="7454010033" fg:w="21731868"/><text x="20.3875%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (13,019,679 samples, 0.04%)</title><rect x="20.1610%" y="997" width="0.0352%" height="15" fill="rgb(231,61,34)" fg:x="7462722222" fg:w="13019679"/><text x="20.4110%" y="1007.50"></text></g><g><title>core::intrinsics::likely (4,258,297 samples, 0.01%)</title><rect x="20.1962%" y="1045" width="0.0115%" height="15" fill="rgb(235,75,3)" fg:x="7475741901" fg:w="4258297"/><text x="20.4462%" y="1055.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (7,381,852 samples, 0.02%)</title><rect x="20.2077%" y="1045" width="0.0199%" height="15" fill="rgb(220,106,47)" fg:x="7480000198" fg:w="7381852"/><text x="20.4577%" y="1055.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7,381,852 samples, 0.02%)</title><rect x="20.2077%" y="1029" width="0.0199%" height="15" fill="rgb(210,196,33)" fg:x="7480000198" fg:w="7381852"/><text x="20.4577%" y="1039.50"></text></g><g><title>hashbrown::control::tag::Tag::full (12,775,274 samples, 0.03%)</title><rect x="20.2276%" y="1045" width="0.0345%" height="15" fill="rgb(229,154,42)" fg:x="7487382050" fg:w="12775274"/><text x="20.4776%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (63,299,706 samples, 0.17%)</title><rect x="20.1026%" y="1109" width="0.1710%" height="15" fill="rgb(228,114,26)" fg:x="7441080483" fg:w="63299706"/><text x="20.3526%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (28,638,288 samples, 0.08%)</title><rect x="20.1962%" y="1093" width="0.0774%" height="15" fill="rgb(208,144,1)" fg:x="7475741901" fg:w="28638288"/><text x="20.4462%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (28,638,288 samples, 0.08%)</title><rect x="20.1962%" y="1077" width="0.0774%" height="15" fill="rgb(239,112,37)" fg:x="7475741901" fg:w="28638288"/><text x="20.4462%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (28,638,288 samples, 0.08%)</title><rect x="20.1962%" y="1061" width="0.0774%" height="15" fill="rgb(210,96,50)" fg:x="7475741901" fg:w="28638288"/><text x="20.4462%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (4,222,865 samples, 0.01%)</title><rect x="20.2622%" y="1045" width="0.0114%" height="15" fill="rgb(222,178,2)" fg:x="7500157324" fg:w="4222865"/><text x="20.5122%" y="1055.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,167,752 samples, 0.01%)</title><rect x="20.2853%" y="997" width="0.0113%" height="15" fill="rgb(226,74,18)" fg:x="7508733225" fg:w="4167752"/><text x="20.5353%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16,889,581 samples, 0.05%)</title><rect x="20.2736%" y="1013" width="0.0456%" height="15" fill="rgb(225,67,54)" fg:x="7504380189" fg:w="16889581"/><text x="20.5236%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8,368,793 samples, 0.02%)</title><rect x="20.2966%" y="997" width="0.0226%" height="15" fill="rgb(251,92,32)" fg:x="7512900977" fg:w="8368793"/><text x="20.5466%" y="1007.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,327,178 samples, 0.01%)</title><rect x="20.3307%" y="997" width="0.0117%" height="15" fill="rgb(228,149,22)" fg:x="7525543959" fg:w="4327178"/><text x="20.5807%" y="1007.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (33,843,572 samples, 0.09%)</title><rect x="20.2736%" y="1061" width="0.0914%" height="15" fill="rgb(243,54,13)" fg:x="7504380189" fg:w="33843572"/><text x="20.5236%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (33,843,572 samples, 0.09%)</title><rect x="20.2736%" y="1045" width="0.0914%" height="15" fill="rgb(243,180,28)" fg:x="7504380189" fg:w="33843572"/><text x="20.5236%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (33,843,572 samples, 0.09%)</title><rect x="20.2736%" y="1029" width="0.0914%" height="15" fill="rgb(208,167,24)" fg:x="7504380189" fg:w="33843572"/><text x="20.5236%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (16,953,991 samples, 0.05%)</title><rect x="20.3192%" y="1013" width="0.0458%" height="15" fill="rgb(245,73,45)" fg:x="7521269770" fg:w="16953991"/><text x="20.5692%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8,352,624 samples, 0.02%)</title><rect x="20.3424%" y="997" width="0.0226%" height="15" fill="rgb(237,203,48)" fg:x="7529871137" fg:w="8352624"/><text x="20.5924%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (37,986,656 samples, 0.10%)</title><rect x="20.2736%" y="1093" width="0.1026%" height="15" fill="rgb(211,197,16)" fg:x="7504380189" fg:w="37986656"/><text x="20.5236%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (37,986,656 samples, 0.10%)</title><rect x="20.2736%" y="1077" width="0.1026%" height="15" fill="rgb(243,99,51)" fg:x="7504380189" fg:w="37986656"/><text x="20.5236%" y="1087.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4,143,084 samples, 0.01%)</title><rect x="20.3650%" y="1061" width="0.0112%" height="15" fill="rgb(215,123,29)" fg:x="7538223761" fg:w="4143084"/><text x="20.6150%" y="1071.50"></text></g><g><title>&lt;caches::KeyRef&lt;K&gt; as core::hash::Hash&gt;::hash (4,143,084 samples, 0.01%)</title><rect x="20.3650%" y="1045" width="0.0112%" height="15" fill="rgb(239,186,37)" fg:x="7538223761" fg:w="4143084"/><text x="20.6150%" y="1055.50"></text></g><g><title>&lt;mws5::words::Word as core::hash::Hash&gt;::hash (4,143,084 samples, 0.01%)</title><rect x="20.3650%" y="1029" width="0.0112%" height="15" fill="rgb(252,136,39)" fg:x="7538223761" fg:w="4143084"/><text x="20.6150%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (4,143,084 samples, 0.01%)</title><rect x="20.3650%" y="1013" width="0.0112%" height="15" fill="rgb(223,213,32)" fg:x="7538223761" fg:w="4143084"/><text x="20.6150%" y="1023.50"></text></g><g><title>core::hash::Hasher::write_u32 (4,143,084 samples, 0.01%)</title><rect x="20.3650%" y="997" width="0.0112%" height="15" fill="rgb(233,115,5)" fg:x="7538223761" fg:w="4143084"/><text x="20.6150%" y="1007.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4,143,084 samples, 0.01%)</title><rect x="20.3650%" y="981" width="0.0112%" height="15" fill="rgb(207,226,44)" fg:x="7538223761" fg:w="4143084"/><text x="20.6150%" y="991.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4,143,084 samples, 0.01%)</title><rect x="20.3650%" y="965" width="0.0112%" height="15" fill="rgb(208,126,0)" fg:x="7538223761" fg:w="4143084"/><text x="20.6150%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4,143,084 samples, 0.01%)</title><rect x="20.3650%" y="949" width="0.0112%" height="15" fill="rgb(244,66,21)" fg:x="7538223761" fg:w="4143084"/><text x="20.6150%" y="959.50"></text></g><g><title>core::hash::sip::u8to64_le (4,143,084 samples, 0.01%)</title><rect x="20.3650%" y="933" width="0.0112%" height="15" fill="rgb(222,97,12)" fg:x="7538223761" fg:w="4143084"/><text x="20.6150%" y="943.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty (7,707,900 samples, 0.02%)</title><rect x="20.4046%" y="1045" width="0.0208%" height="15" fill="rgb(219,213,19)" fg:x="7552875637" fg:w="7707900"/><text x="20.6546%" y="1055.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (7,707,900 samples, 0.02%)</title><rect x="20.4046%" y="1029" width="0.0208%" height="15" fill="rgb(252,169,30)" fg:x="7552875637" fg:w="7707900"/><text x="20.6546%" y="1039.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7,707,900 samples, 0.02%)</title><rect x="20.4046%" y="1013" width="0.0208%" height="15" fill="rgb(206,32,51)" fg:x="7552875637" fg:w="7707900"/><text x="20.6546%" y="1023.50"></text></g><g><title>hashbrown::control::tag::Tag::full (3,927,818 samples, 0.01%)</title><rect x="20.4254%" y="1045" width="0.0106%" height="15" fill="rgb(250,172,42)" fg:x="7560583537" fg:w="3927818"/><text x="20.6754%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (68,758,818 samples, 0.19%)</title><rect x="20.2736%" y="1109" width="0.1858%" height="15" fill="rgb(209,34,43)" fg:x="7504380189" fg:w="68758818"/><text x="20.5236%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (30,772,162 samples, 0.08%)</title><rect x="20.3762%" y="1093" width="0.0831%" height="15" fill="rgb(223,11,35)" fg:x="7542366845" fg:w="30772162"/><text x="20.6262%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (27,797,973 samples, 0.08%)</title><rect x="20.3842%" y="1077" width="0.0751%" height="15" fill="rgb(251,219,26)" fg:x="7545341034" fg:w="27797973"/><text x="20.6342%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (27,797,973 samples, 0.08%)</title><rect x="20.3842%" y="1061" width="0.0751%" height="15" fill="rgb(231,119,3)" fg:x="7545341034" fg:w="27797973"/><text x="20.6342%" y="1071.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (8,627,652 samples, 0.02%)</title><rect x="20.4360%" y="1045" width="0.0233%" height="15" fill="rgb(216,97,11)" fg:x="7564511355" fg:w="8627652"/><text x="20.6860%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (8,604,886 samples, 0.02%)</title><rect x="20.5057%" y="1061" width="0.0232%" height="15" fill="rgb(223,59,9)" fg:x="7590285772" fg:w="8604886"/><text x="20.7557%" y="1071.50"></text></g><g><title>core::intrinsics::unlikely (4,358,683 samples, 0.01%)</title><rect x="20.5171%" y="1045" width="0.0118%" height="15" fill="rgb(233,93,31)" fg:x="7594531975" fg:w="4358683"/><text x="20.7671%" y="1055.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load (4,325,550 samples, 0.01%)</title><rect x="20.5289%" y="1045" width="0.0117%" height="15" fill="rgb(239,81,33)" fg:x="7598890658" fg:w="4325550"/><text x="20.7789%" y="1055.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (4,325,550 samples, 0.01%)</title><rect x="20.5289%" y="1029" width="0.0117%" height="15" fill="rgb(213,120,34)" fg:x="7598890658" fg:w="4325550"/><text x="20.7789%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4,325,550 samples, 0.01%)</title><rect x="20.5289%" y="1013" width="0.0117%" height="15" fill="rgb(243,49,53)" fg:x="7598890658" fg:w="4325550"/><text x="20.7789%" y="1023.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty (8,763,096 samples, 0.02%)</title><rect x="20.5406%" y="1045" width="0.0237%" height="15" fill="rgb(247,216,33)" fg:x="7603216208" fg:w="8763096"/><text x="20.7906%" y="1055.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (8,763,096 samples, 0.02%)</title><rect x="20.5406%" y="1029" width="0.0237%" height="15" fill="rgb(226,26,14)" fg:x="7603216208" fg:w="8763096"/><text x="20.7906%" y="1039.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (8,763,096 samples, 0.02%)</title><rect x="20.5406%" y="1013" width="0.0237%" height="15" fill="rgb(215,49,53)" fg:x="7603216208" fg:w="8763096"/><text x="20.7906%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (4,045,049 samples, 0.01%)</title><rect x="20.5643%" y="1045" width="0.0109%" height="15" fill="rgb(245,162,40)" fg:x="7611979304" fg:w="4045049"/><text x="20.8143%" y="1055.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (4,045,049 samples, 0.01%)</title><rect x="20.5643%" y="1029" width="0.0109%" height="15" fill="rgb(229,68,17)" fg:x="7611979304" fg:w="4045049"/><text x="20.8143%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (30,093,515 samples, 0.08%)</title><rect x="20.5057%" y="1093" width="0.0813%" height="15" fill="rgb(213,182,10)" fg:x="7590285772" fg:w="30093515"/><text x="20.7557%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (30,093,515 samples, 0.08%)</title><rect x="20.5057%" y="1077" width="0.0813%" height="15" fill="rgb(245,125,30)" fg:x="7590285772" fg:w="30093515"/><text x="20.7557%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (21,488,629 samples, 0.06%)</title><rect x="20.5289%" y="1061" width="0.0581%" height="15" fill="rgb(232,202,2)" fg:x="7598890658" fg:w="21488629"/><text x="20.7789%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (4,354,934 samples, 0.01%)</title><rect x="20.5752%" y="1045" width="0.0118%" height="15" fill="rgb(237,140,51)" fg:x="7616024353" fg:w="4354934"/><text x="20.8252%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (4,354,934 samples, 0.01%)</title><rect x="20.5752%" y="1029" width="0.0118%" height="15" fill="rgb(236,157,25)" fg:x="7616024353" fg:w="4354934"/><text x="20.8252%" y="1039.50"></text></g><g><title>hashbrown::control::tag::Tag::is_full (4,354,934 samples, 0.01%)</title><rect x="20.5752%" y="1013" width="0.0118%" height="15" fill="rgb(219,209,0)" fg:x="7616024353" fg:w="4354934"/><text x="20.8252%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8,164,297 samples, 0.02%)</title><rect x="20.6437%" y="997" width="0.0221%" height="15" fill="rgb(240,116,54)" fg:x="7641402193" fg:w="8164297"/><text x="20.8937%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12,399,917 samples, 0.03%)</title><rect x="20.6437%" y="1013" width="0.0335%" height="15" fill="rgb(216,10,36)" fg:x="7641402193" fg:w="12399917"/><text x="20.8937%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4,235,620 samples, 0.01%)</title><rect x="20.6658%" y="997" width="0.0114%" height="15" fill="rgb(222,72,44)" fg:x="7649566490" fg:w="4235620"/><text x="20.9158%" y="1007.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (25,031,967 samples, 0.07%)</title><rect x="20.6772%" y="997" width="0.0676%" height="15" fill="rgb(232,159,9)" fg:x="7653802110" fg:w="25031967"/><text x="20.9272%" y="1007.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (50,335,487 samples, 0.14%)</title><rect x="20.6206%" y="1061" width="0.1360%" height="15" fill="rgb(210,39,32)" fg:x="7632850413" fg:w="50335487"/><text x="20.8706%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (50,335,487 samples, 0.14%)</title><rect x="20.6206%" y="1045" width="0.1360%" height="15" fill="rgb(216,194,45)" fg:x="7632850413" fg:w="50335487"/><text x="20.8706%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (50,335,487 samples, 0.14%)</title><rect x="20.6206%" y="1029" width="0.1360%" height="15" fill="rgb(218,18,35)" fg:x="7632850413" fg:w="50335487"/><text x="20.8706%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (29,383,790 samples, 0.08%)</title><rect x="20.6772%" y="1013" width="0.0794%" height="15" fill="rgb(207,83,51)" fg:x="7653802110" fg:w="29383790"/><text x="20.9272%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4,351,823 samples, 0.01%)</title><rect x="20.7449%" y="997" width="0.0118%" height="15" fill="rgb(225,63,43)" fg:x="7678834077" fg:w="4351823"/><text x="20.9949%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (75,263,758 samples, 0.20%)</title><rect x="20.5869%" y="1093" width="0.2033%" height="15" fill="rgb(207,57,36)" fg:x="7620379287" fg:w="75263758"/><text x="20.8369%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (62,792,632 samples, 0.17%)</title><rect x="20.6206%" y="1077" width="0.1696%" height="15" fill="rgb(216,99,33)" fg:x="7632850413" fg:w="62792632"/><text x="20.8706%" y="1087.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (12,457,145 samples, 0.03%)</title><rect x="20.7566%" y="1061" width="0.0337%" height="15" fill="rgb(225,42,16)" fg:x="7683185900" fg:w="12457145"/><text x="21.0066%" y="1071.50"></text></g><g><title>&lt;mws5::words::Word as core::hash::Hash&gt;::hash (4,240,236 samples, 0.01%)</title><rect x="20.7788%" y="1045" width="0.0115%" height="15" fill="rgb(220,201,45)" fg:x="7691402809" fg:w="4240236"/><text x="21.0288%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (4,240,236 samples, 0.01%)</title><rect x="20.7788%" y="1029" width="0.0115%" height="15" fill="rgb(225,33,4)" fg:x="7691402809" fg:w="4240236"/><text x="21.0288%" y="1039.50"></text></g><g><title>core::hash::Hasher::write_u32 (4,240,236 samples, 0.01%)</title><rect x="20.7788%" y="1013" width="0.0115%" height="15" fill="rgb(224,33,50)" fg:x="7691402809" fg:w="4240236"/><text x="21.0288%" y="1023.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4,240,236 samples, 0.01%)</title><rect x="20.7788%" y="997" width="0.0115%" height="15" fill="rgb(246,198,51)" fg:x="7691402809" fg:w="4240236"/><text x="21.0288%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4,240,236 samples, 0.01%)</title><rect x="20.7788%" y="981" width="0.0115%" height="15" fill="rgb(205,22,4)" fg:x="7691402809" fg:w="4240236"/><text x="21.0288%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4,240,236 samples, 0.01%)</title><rect x="20.7788%" y="965" width="0.0115%" height="15" fill="rgb(206,3,8)" fg:x="7691402809" fg:w="4240236"/><text x="21.0288%" y="975.50"></text></g><g><title>core::hash::sip::u8to64_le (4,240,236 samples, 0.01%)</title><rect x="20.7788%" y="949" width="0.0115%" height="15" fill="rgb(251,23,15)" fg:x="7691402809" fg:w="4240236"/><text x="21.0288%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (138,286,260 samples, 0.37%)</title><rect x="20.4593%" y="1109" width="0.3736%" height="15" fill="rgb(252,88,28)" fg:x="7573139007" fg:w="138286260"/><text x="20.7093%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (15,782,222 samples, 0.04%)</title><rect x="20.7903%" y="1093" width="0.0426%" height="15" fill="rgb(212,127,14)" fg:x="7695643045" fg:w="15782222"/><text x="21.0403%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner::record_item_insert_at (12,325,266 samples, 0.03%)</title><rect x="20.7996%" y="1077" width="0.0333%" height="15" fill="rgb(247,145,37)" fg:x="7699100001" fg:w="12325266"/><text x="21.0496%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl_hash (12,325,266 samples, 0.03%)</title><rect x="20.7996%" y="1061" width="0.0333%" height="15" fill="rgb(209,117,53)" fg:x="7699100001" fg:w="12325266"/><text x="21.0496%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl (12,325,266 samples, 0.03%)</title><rect x="20.7996%" y="1045" width="0.0333%" height="15" fill="rgb(212,90,42)" fg:x="7699100001" fg:w="12325266"/><text x="21.0496%" y="1055.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (4,364,045 samples, 0.01%)</title><rect x="20.8211%" y="1029" width="0.0118%" height="15" fill="rgb(218,164,37)" fg:x="7707061222" fg:w="4364045"/><text x="21.0711%" y="1039.50"></text></g><g><title>hashbrown::map::make_hash (4,217,500 samples, 0.01%)</title><rect x="20.8436%" y="1077" width="0.0114%" height="15" fill="rgb(246,65,34)" fg:x="7715365161" fg:w="4217500"/><text x="21.0936%" y="1087.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,217,500 samples, 0.01%)</title><rect x="20.8436%" y="1061" width="0.0114%" height="15" fill="rgb(231,100,33)" fg:x="7715365161" fg:w="4217500"/><text x="21.0936%" y="1071.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4,217,500 samples, 0.01%)</title><rect x="20.8436%" y="1045" width="0.0114%" height="15" fill="rgb(228,126,14)" fg:x="7715365161" fg:w="4217500"/><text x="21.0936%" y="1055.50"></text></g><g><title>&lt;caches::lru::raw::KeyWrapper&lt;K&gt; as core::hash::Hash&gt;::hash (4,217,500 samples, 0.01%)</title><rect x="20.8436%" y="1029" width="0.0114%" height="15" fill="rgb(215,173,21)" fg:x="7715365161" fg:w="4217500"/><text x="21.0936%" y="1039.50"></text></g><g><title>&lt;mws5::words::Word as core::hash::Hash&gt;::hash (4,217,500 samples, 0.01%)</title><rect x="20.8436%" y="1013" width="0.0114%" height="15" fill="rgb(210,6,40)" fg:x="7715365161" fg:w="4217500"/><text x="21.0936%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (4,217,500 samples, 0.01%)</title><rect x="20.8436%" y="997" width="0.0114%" height="15" fill="rgb(212,48,18)" fg:x="7715365161" fg:w="4217500"/><text x="21.0936%" y="1007.50"></text></g><g><title>core::hash::Hasher::write_u32 (4,217,500 samples, 0.01%)</title><rect x="20.8436%" y="981" width="0.0114%" height="15" fill="rgb(230,214,11)" fg:x="7715365161" fg:w="4217500"/><text x="21.0936%" y="991.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4,217,500 samples, 0.01%)</title><rect x="20.8436%" y="965" width="0.0114%" height="15" fill="rgb(254,105,39)" fg:x="7715365161" fg:w="4217500"/><text x="21.0936%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4,217,500 samples, 0.01%)</title><rect x="20.8436%" y="949" width="0.0114%" height="15" fill="rgb(245,158,5)" fg:x="7715365161" fg:w="4217500"/><text x="21.0936%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4,217,500 samples, 0.01%)</title><rect x="20.8436%" y="933" width="0.0114%" height="15" fill="rgb(249,208,11)" fg:x="7715365161" fg:w="4217500"/><text x="21.0936%" y="943.50"></text></g><g><title>core::hash::sip::u8to64_le (4,217,500 samples, 0.01%)</title><rect x="20.8436%" y="917" width="0.0114%" height="15" fill="rgb(210,39,28)" fg:x="7715365161" fg:w="4217500"/><text x="21.0936%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (12,300,964 samples, 0.03%)</title><rect x="20.8329%" y="1109" width="0.0332%" height="15" fill="rgb(211,56,53)" fg:x="7711425267" fg:w="12300964"/><text x="21.0829%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (8,361,070 samples, 0.02%)</title><rect x="20.8436%" y="1093" width="0.0226%" height="15" fill="rgb(226,201,30)" fg:x="7715365161" fg:w="8361070"/><text x="21.0936%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (4,143,570 samples, 0.01%)</title><rect x="20.8550%" y="1077" width="0.0112%" height="15" fill="rgb(239,101,34)" fg:x="7719582661" fg:w="4143570"/><text x="21.1050%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (4,143,570 samples, 0.01%)</title><rect x="20.8550%" y="1061" width="0.0112%" height="15" fill="rgb(226,209,5)" fg:x="7719582661" fg:w="4143570"/><text x="21.1050%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (4,143,570 samples, 0.01%)</title><rect x="20.8550%" y="1045" width="0.0112%" height="15" fill="rgb(250,105,47)" fg:x="7719582661" fg:w="4143570"/><text x="21.1050%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::erase (4,143,570 samples, 0.01%)</title><rect x="20.8550%" y="1029" width="0.0112%" height="15" fill="rgb(230,72,3)" fg:x="7719582661" fg:w="4143570"/><text x="21.1050%" y="1039.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::trailing_zeros (4,143,570 samples, 0.01%)</title><rect x="20.8550%" y="1013" width="0.0112%" height="15" fill="rgb(232,218,39)" fg:x="7719582661" fg:w="4143570"/><text x="21.1050%" y="1023.50"></text></g><g><title>core::num::&lt;impl u16&gt;::trailing_zeros (4,143,570 samples, 0.01%)</title><rect x="20.8550%" y="997" width="0.0112%" height="15" fill="rgb(248,166,6)" fg:x="7719582661" fg:w="4143570"/><text x="21.1050%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::FullBucketsIndices as core::iter::traits::iterator::Iterator&gt;::next (8,442,525 samples, 0.02%)</title><rect x="20.9474%" y="1061" width="0.0228%" height="15" fill="rgb(247,89,20)" fg:x="7753819243" fg:w="8442525"/><text x="21.1974%" y="1071.50"></text></g><g><title>hashbrown::raw::FullBucketsIndices::next_impl (4,215,822 samples, 0.01%)</title><rect x="20.9589%" y="1045" width="0.0114%" height="15" fill="rgb(248,130,54)" fg:x="7758045946" fg:w="4215822"/><text x="21.2089%" y="1055.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4,215,822 samples, 0.01%)</title><rect x="20.9589%" y="1029" width="0.0114%" height="15" fill="rgb(234,196,4)" fg:x="7758045946" fg:w="4215822"/><text x="21.2089%" y="1039.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (4,215,822 samples, 0.01%)</title><rect x="20.9589%" y="1013" width="0.0114%" height="15" fill="rgb(250,143,31)" fg:x="7758045946" fg:w="4215822"/><text x="21.2089%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4,382,186 samples, 0.01%)</title><rect x="20.9703%" y="1061" width="0.0118%" height="15" fill="rgb(211,110,34)" fg:x="7762261768" fg:w="4382186"/><text x="21.2203%" y="1071.50"></text></g><g><title>core::mem::swap (4,393,411 samples, 0.01%)</title><rect x="20.9821%" y="1061" width="0.0119%" height="15" fill="rgb(215,124,48)" fg:x="7766643954" fg:w="4393411"/><text x="21.2321%" y="1071.50"></text></g><g><title>core::intrinsics::typed_swap_nonoverlapping (4,393,411 samples, 0.01%)</title><rect x="20.9821%" y="1045" width="0.0119%" height="15" fill="rgb(216,46,13)" fg:x="7766643954" fg:w="4393411"/><text x="21.2321%" y="1055.50"></text></g><g><title>core::ptr::swap_nonoverlapping (4,393,411 samples, 0.01%)</title><rect x="20.9821%" y="1029" width="0.0119%" height="15" fill="rgb(205,184,25)" fg:x="7766643954" fg:w="4393411"/><text x="21.2321%" y="1039.50"></text></g><g><title>core::ptr::swap_nonoverlapping::runtime (4,393,411 samples, 0.01%)</title><rect x="20.9821%" y="1013" width="0.0119%" height="15" fill="rgb(228,1,10)" fg:x="7766643954" fg:w="4393411"/><text x="21.2321%" y="1023.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (4,393,411 samples, 0.01%)</title><rect x="20.9821%" y="997" width="0.0119%" height="15" fill="rgb(213,116,27)" fg:x="7766643954" fg:w="4393411"/><text x="21.2321%" y="1007.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes::swap_nonoverlapping_chunks (4,393,411 samples, 0.01%)</title><rect x="20.9821%" y="981" width="0.0119%" height="15" fill="rgb(241,95,50)" fg:x="7766643954" fg:w="4393411"/><text x="21.2321%" y="991.50"></text></g><g><title>core::ptr::swap_chunk (4,393,411 samples, 0.01%)</title><rect x="20.9821%" y="965" width="0.0119%" height="15" fill="rgb(238,48,32)" fg:x="7766643954" fg:w="4393411"/><text x="21.2321%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner,hashbrown::raw::RawTableInner::prepare_resize&lt;alloc::alloc::Global&gt;::{{closure}}&gt;&gt; (13,062,727 samples, 0.04%)</title><rect x="20.9940%" y="1061" width="0.0353%" height="15" fill="rgb(235,113,49)" fg:x="7771037365" fg:w="13062727"/><text x="21.2440%" y="1071.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (13,062,727 samples, 0.04%)</title><rect x="20.9940%" y="1045" width="0.0353%" height="15" fill="rgb(205,127,43)" fg:x="7771037365" fg:w="13062727"/><text x="21.2440%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize::_{{closure}} (13,062,727 samples, 0.04%)</title><rect x="20.9940%" y="1029" width="0.0353%" height="15" fill="rgb(250,162,2)" fg:x="7771037365" fg:w="13062727"/><text x="21.2440%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (13,062,727 samples, 0.04%)</title><rect x="20.9940%" y="1013" width="0.0353%" height="15" fill="rgb(220,13,41)" fg:x="7771037365" fg:w="13062727"/><text x="21.2440%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13,062,727 samples, 0.04%)</title><rect x="20.9940%" y="997" width="0.0353%" height="15" fill="rgb(249,221,25)" fg:x="7771037365" fg:w="13062727"/><text x="21.2440%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (13,062,727 samples, 0.04%)</title><rect x="20.9940%" y="981" width="0.0353%" height="15" fill="rgb(215,208,19)" fg:x="7771037365" fg:w="13062727"/><text x="21.2440%" y="991.50"></text></g><g><title>__rustc::__rdl_dealloc (13,062,727 samples, 0.04%)</title><rect x="20.9940%" y="965" width="0.0353%" height="15" fill="rgb(236,175,2)" fg:x="7771037365" fg:w="13062727"/><text x="21.2440%" y="975.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (13,062,727 samples, 0.04%)</title><rect x="20.9940%" y="949" width="0.0353%" height="15" fill="rgb(241,52,2)" fg:x="7771037365" fg:w="13062727"/><text x="21.2440%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12,573,479 samples, 0.03%)</title><rect x="21.0966%" y="933" width="0.0340%" height="15" fill="rgb(248,140,14)" fg:x="7809043334" fg:w="12573479"/><text x="21.3466%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (24,375,292 samples, 0.07%)</title><rect x="21.0852%" y="949" width="0.0659%" height="15" fill="rgb(253,22,42)" fg:x="7804810700" fg:w="24375292"/><text x="21.3352%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7,569,179 samples, 0.02%)</title><rect x="21.1306%" y="933" width="0.0204%" height="15" fill="rgb(234,61,47)" fg:x="7821616813" fg:w="7569179"/><text x="21.3806%" y="943.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (46,453,036 samples, 0.13%)</title><rect x="21.2175%" y="933" width="0.1255%" height="15" fill="rgb(208,226,15)" fg:x="7853787721" fg:w="46453036"/><text x="21.4675%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (136,553,715 samples, 0.37%)</title><rect x="21.0293%" y="1061" width="0.3689%" height="15" fill="rgb(217,221,4)" fg:x="7784100092" fg:w="136553715"/><text x="21.2793%" y="1071.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (128,211,715 samples, 0.35%)</title><rect x="21.0518%" y="1045" width="0.3464%" height="15" fill="rgb(212,174,34)" fg:x="7792442092" fg:w="128211715"/><text x="21.3018%" y="1055.50"></text></g><g><title>hashbrown::map::make_hash (128,211,715 samples, 0.35%)</title><rect x="21.0518%" y="1029" width="0.3464%" height="15" fill="rgb(253,83,4)" fg:x="7792442092" fg:w="128211715"/><text x="21.3018%" y="1039.50"></text></g><g><title>core::hash::BuildHasher::hash_one (128,211,715 samples, 0.35%)</title><rect x="21.0518%" y="1013" width="0.3464%" height="15" fill="rgb(250,195,49)" fg:x="7792442092" fg:w="128211715"/><text x="21.3018%" y="1023.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (128,211,715 samples, 0.35%)</title><rect x="21.0518%" y="997" width="0.3464%" height="15" fill="rgb(241,192,25)" fg:x="7792442092" fg:w="128211715"/><text x="21.3018%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (128,211,715 samples, 0.35%)</title><rect x="21.0518%" y="981" width="0.3464%" height="15" fill="rgb(208,124,10)" fg:x="7792442092" fg:w="128211715"/><text x="21.3018%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (128,211,715 samples, 0.35%)</title><rect x="21.0518%" y="965" width="0.3464%" height="15" fill="rgb(222,33,0)" fg:x="7792442092" fg:w="128211715"/><text x="21.3018%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (91,467,815 samples, 0.25%)</title><rect x="21.1511%" y="949" width="0.2471%" height="15" fill="rgb(234,209,28)" fg:x="7829185992" fg:w="91467815"/><text x="21.4011%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (20,413,050 samples, 0.06%)</title><rect x="21.3430%" y="933" width="0.0551%" height="15" fill="rgb(224,11,23)" fg:x="7900240757" fg:w="20413050"/><text x="21.5930%" y="943.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load_aligned (4,407,645 samples, 0.01%)</title><rect x="21.3982%" y="1045" width="0.0119%" height="15" fill="rgb(232,99,1)" fg:x="7920653807" fg:w="4407645"/><text x="21.6482%" y="1055.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (4,407,645 samples, 0.01%)</title><rect x="21.3982%" y="1029" width="0.0119%" height="15" fill="rgb(237,95,45)" fg:x="7920653807" fg:w="4407645"/><text x="21.6482%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner::full_buckets_indices (12,633,088 samples, 0.03%)</title><rect x="21.3982%" y="1061" width="0.0341%" height="15" fill="rgb(208,109,11)" fg:x="7920653807" fg:w="12633088"/><text x="21.6482%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::ctrl (8,225,443 samples, 0.02%)</title><rect x="21.4101%" y="1045" width="0.0222%" height="15" fill="rgb(216,190,48)" fg:x="7925061452" fg:w="8225443"/><text x="21.6601%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (8,076,615 samples, 0.02%)</title><rect x="21.4323%" y="1045" width="0.0218%" height="15" fill="rgb(251,171,36)" fg:x="7933286895" fg:w="8076615"/><text x="21.6823%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (3,904,224 samples, 0.01%)</title><rect x="21.4436%" y="1029" width="0.0105%" height="15" fill="rgb(230,62,22)" fg:x="7937459286" fg:w="3904224"/><text x="21.6936%" y="1039.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty_or_deleted (3,904,224 samples, 0.01%)</title><rect x="21.4436%" y="1013" width="0.0105%" height="15" fill="rgb(225,114,35)" fg:x="7937459286" fg:w="3904224"/><text x="21.6936%" y="1023.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3,904,224 samples, 0.01%)</title><rect x="21.4436%" y="997" width="0.0105%" height="15" fill="rgb(215,118,42)" fg:x="7937459286" fg:w="3904224"/><text x="21.6936%" y="1007.50"></text></g><g><title>hashbrown::control::tag::Tag::full (4,275,274 samples, 0.01%)</title><rect x="21.4541%" y="1029" width="0.0115%" height="15" fill="rgb(243,119,21)" fg:x="7941363510" fg:w="4275274"/><text x="21.7041%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (20,817,460 samples, 0.06%)</title><rect x="21.4323%" y="1061" width="0.0562%" height="15" fill="rgb(252,177,53)" fg:x="7933286895" fg:w="20817460"/><text x="21.6823%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl_hash (12,740,845 samples, 0.03%)</title><rect x="21.4541%" y="1045" width="0.0344%" height="15" fill="rgb(237,209,29)" fg:x="7941363510" fg:w="12740845"/><text x="21.7041%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl (8,465,571 samples, 0.02%)</title><rect x="21.4657%" y="1029" width="0.0229%" height="15" fill="rgb(212,65,23)" fg:x="7945638784" fg:w="8465571"/><text x="21.7157%" y="1039.50"></text></g><g><title>hashbrown::control::tag::TagSliceExt::fill_empty (17,503,983 samples, 0.05%)</title><rect x="21.4885%" y="1029" width="0.0473%" height="15" fill="rgb(230,222,46)" fg:x="7954104355" fg:w="17503983"/><text x="21.7385%" y="1039.50"></text></g><g><title>&lt;[hashbrown::control::tag::Tag] as hashbrown::control::tag::TagSliceExt&gt;::fill_tag (17,503,983 samples, 0.05%)</title><rect x="21.4885%" y="1013" width="0.0473%" height="15" fill="rgb(215,135,32)" fg:x="7954104355" fg:w="17503983"/><text x="21.7385%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (17,503,983 samples, 0.05%)</title><rect x="21.4885%" y="997" width="0.0473%" height="15" fill="rgb(246,101,22)" fg:x="7954104355" fg:w="17503983"/><text x="21.7385%" y="1007.50"></text></g><g><title>core::intrinsics::write_bytes (17,503,983 samples, 0.05%)</title><rect x="21.4885%" y="981" width="0.0473%" height="15" fill="rgb(206,107,13)" fg:x="7954104355" fg:w="17503983"/><text x="21.7385%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4,256,466 samples, 0.01%)</title><rect x="21.5596%" y="1013" width="0.0115%" height="15" fill="rgb(250,100,44)" fg:x="7980411603" fg:w="4256466"/><text x="21.8096%" y="1023.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (3,861,776 samples, 0.01%)</title><rect x="21.6168%" y="997" width="0.0104%" height="15" fill="rgb(231,147,38)" fg:x="8001582302" fg:w="3861776"/><text x="21.8668%" y="1007.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (37,150,891 samples, 0.10%)</title><rect x="21.5711%" y="1013" width="0.1004%" height="15" fill="rgb(229,8,40)" fg:x="7984668069" fg:w="37150891"/><text x="21.8211%" y="1023.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (16,374,882 samples, 0.04%)</title><rect x="21.6272%" y="997" width="0.0442%" height="15" fill="rgb(221,135,30)" fg:x="8005444078" fg:w="16374882"/><text x="21.8772%" y="1007.50"></text></g><g><title>core::intrinsics::unlikely (8,610,919 samples, 0.02%)</title><rect x="21.6482%" y="981" width="0.0233%" height="15" fill="rgb(249,193,18)" fg:x="8013208041" fg:w="8610919"/><text x="21.8982%" y="991.50"></text></g><g><title>__rustc::__rdl_alloc (16,776,379 samples, 0.05%)</title><rect x="21.6715%" y="949" width="0.0453%" height="15" fill="rgb(209,133,39)" fg:x="8021818960" fg:w="16776379"/><text x="21.9215%" y="959.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (16,776,379 samples, 0.05%)</title><rect x="21.6715%" y="933" width="0.0453%" height="15" fill="rgb(232,100,14)" fg:x="8021818960" fg:w="16776379"/><text x="21.9215%" y="943.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (20,889,452 samples, 0.06%)</title><rect x="21.6715%" y="1013" width="0.0564%" height="15" fill="rgb(224,185,1)" fg:x="8021818960" fg:w="20889452"/><text x="21.9215%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20,889,452 samples, 0.06%)</title><rect x="21.6715%" y="997" width="0.0564%" height="15" fill="rgb(223,139,8)" fg:x="8021818960" fg:w="20889452"/><text x="21.9215%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20,889,452 samples, 0.06%)</title><rect x="21.6715%" y="981" width="0.0564%" height="15" fill="rgb(232,213,38)" fg:x="8021818960" fg:w="20889452"/><text x="21.9215%" y="991.50"></text></g><g><title>alloc::alloc::alloc (20,889,452 samples, 0.06%)</title><rect x="21.6715%" y="965" width="0.0564%" height="15" fill="rgb(207,94,22)" fg:x="8021818960" fg:w="20889452"/><text x="21.9215%" y="975.50"></text></g><g><title>core::ptr::read_volatile (4,113,073 samples, 0.01%)</title><rect x="21.7168%" y="949" width="0.0111%" height="15" fill="rgb(219,183,54)" fg:x="8038595339" fg:w="4113073"/><text x="21.9668%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (74,884,059 samples, 0.20%)</title><rect x="21.5358%" y="1029" width="0.2023%" height="15" fill="rgb(216,185,54)" fg:x="7971608338" fg:w="74884059"/><text x="21.7858%" y="1039.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (3,783,985 samples, 0.01%)</title><rect x="21.7279%" y="1013" width="0.0102%" height="15" fill="rgb(254,217,39)" fg:x="8042708412" fg:w="3783985"/><text x="21.9779%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (301,064,434 samples, 0.81%)</title><rect x="20.9360%" y="1077" width="0.8133%" height="15" fill="rgb(240,178,23)" fg:x="7749591264" fg:w="301064434"/><text x="21.1860%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (96,551,343 samples, 0.26%)</title><rect x="21.4885%" y="1061" width="0.2608%" height="15" fill="rgb(218,11,47)" fg:x="7954104355" fg:w="96551343"/><text x="21.7385%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (96,551,343 samples, 0.26%)</title><rect x="21.4885%" y="1045" width="0.2608%" height="15" fill="rgb(218,51,51)" fg:x="7954104355" fg:w="96551343"/><text x="21.7385%" y="1055.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (4,163,301 samples, 0.01%)</title><rect x="21.7381%" y="1029" width="0.0112%" height="15" fill="rgb(238,126,27)" fg:x="8046492397" fg:w="4163301"/><text x="21.9881%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (347,242,523 samples, 0.94%)</title><rect x="20.8661%" y="1109" width="0.9381%" height="15" fill="rgb(249,202,22)" fg:x="7723726231" fg:w="347242523"/><text x="21.1161%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (338,510,312 samples, 0.91%)</title><rect x="20.8897%" y="1093" width="0.9145%" height="15" fill="rgb(254,195,49)" fg:x="7732458442" fg:w="338510312"/><text x="21.1397%" y="1103.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (20,313,056 samples, 0.05%)</title><rect x="21.7494%" y="1077" width="0.0549%" height="15" fill="rgb(208,123,14)" fg:x="8050655698" fg:w="20313056"/><text x="21.9994%" y="1087.50"></text></g><g><title>malloc_consolidate (4,452,834 samples, 0.01%)</title><rect x="21.8042%" y="1109" width="0.0120%" height="15" fill="rgb(224,200,8)" fg:x="8070968754" fg:w="4452834"/><text x="22.0542%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (234,343,897 samples, 0.63%)</title><rect x="21.8627%" y="1061" width="0.6331%" height="15" fill="rgb(217,61,36)" fg:x="8092617068" fg:w="234343897"/><text x="22.1127%" y="1071.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (104,269,860 samples, 0.28%)</title><rect x="22.2141%" y="1045" width="0.2817%" height="15" fill="rgb(206,35,45)" fg:x="8222691105" fg:w="104269860"/><text x="22.4641%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,537,287,553 samples, 4.15%)</title><rect x="21.8627%" y="1093" width="4.1531%" height="15" fill="rgb(217,65,33)" fg:x="8092617068" fg:w="1537287553"/><text x="22.1127%" y="1103.50">&lt;core..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1,537,287,553 samples, 4.15%)</title><rect x="21.8627%" y="1077" width="4.1531%" height="15" fill="rgb(222,158,48)" fg:x="8092617068" fg:w="1537287553"/><text x="22.1127%" y="1087.50">&lt;core..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,302,943,656 samples, 3.52%)</title><rect x="22.4958%" y="1061" width="3.5200%" height="15" fill="rgb(254,2,54)" fg:x="8326960965" fg:w="1302943656"/><text x="22.7458%" y="1071.50">cor..</text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (1,302,943,656 samples, 3.52%)</title><rect x="22.4958%" y="1045" width="3.5200%" height="15" fill="rgb(250,143,38)" fg:x="8326960965" fg:w="1302943656"/><text x="22.7458%" y="1055.50">mws..</text></g><g><title>mws5::words::Word::is_fit (1,236,970,068 samples, 3.34%)</title><rect x="22.6741%" y="1029" width="3.3418%" height="15" fill="rgb(248,25,0)" fg:x="8392934553" fg:w="1236970068"/><text x="22.9241%" y="1039.50">mws..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (273,328,024 samples, 0.74%)</title><rect x="25.2774%" y="1013" width="0.7384%" height="15" fill="rgb(206,152,27)" fg:x="9356576597" fg:w="273328024"/><text x="25.5274%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (273,328,024 samples, 0.74%)</title><rect x="25.2774%" y="997" width="0.7384%" height="15" fill="rgb(240,77,30)" fg:x="9356576597" fg:w="273328024"/><text x="25.5274%" y="1007.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (273,328,024 samples, 0.74%)</title><rect x="25.2774%" y="981" width="0.7384%" height="15" fill="rgb(231,5,3)" fg:x="9356576597" fg:w="273328024"/><text x="25.5274%" y="991.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (273,328,024 samples, 0.74%)</title><rect x="25.2774%" y="965" width="0.7384%" height="15" fill="rgb(207,226,32)" fg:x="9356576597" fg:w="273328024"/><text x="25.5274%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4,227,033 samples, 0.01%)</title><rect x="26.0158%" y="1077" width="0.0114%" height="15" fill="rgb(222,207,47)" fg:x="9629904621" fg:w="4227033"/><text x="26.2658%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,227,033 samples, 0.01%)</title><rect x="26.0158%" y="1061" width="0.0114%" height="15" fill="rgb(229,115,45)" fg:x="9629904621" fg:w="4227033"/><text x="26.2658%" y="1071.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,095,806 samples, 0.01%)</title><rect x="26.0272%" y="1029" width="0.0111%" height="15" fill="rgb(224,191,6)" fg:x="9634131654" fg:w="4095806"/><text x="26.2772%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by::fold::_{{closure}} (4,095,806 samples, 0.01%)</title><rect x="26.0272%" y="1013" width="0.0111%" height="15" fill="rgb(230,227,24)" fg:x="9634131654" fg:w="4095806"/><text x="26.2772%" y="1023.50"></text></g><g><title>core::cmp::min_by (4,095,806 samples, 0.01%)</title><rect x="26.0272%" y="997" width="0.0111%" height="15" fill="rgb(228,80,19)" fg:x="9634131654" fg:w="4095806"/><text x="26.2772%" y="1007.50"></text></g><g><title>core::cmp::Ordering::is_lt (4,095,806 samples, 0.01%)</title><rect x="26.0272%" y="981" width="0.0111%" height="15" fill="rgb(247,229,0)" fg:x="9634131654" fg:w="4095806"/><text x="26.2772%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (8,445,939 samples, 0.02%)</title><rect x="26.0272%" y="1077" width="0.0228%" height="15" fill="rgb(237,194,15)" fg:x="9634131654" fg:w="8445939"/><text x="26.2772%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (8,445,939 samples, 0.02%)</title><rect x="26.0272%" y="1061" width="0.0228%" height="15" fill="rgb(219,203,20)" fg:x="9634131654" fg:w="8445939"/><text x="26.2772%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (8,445,939 samples, 0.02%)</title><rect x="26.0272%" y="1045" width="0.0228%" height="15" fill="rgb(234,128,8)" fg:x="9634131654" fg:w="8445939"/><text x="26.2772%" y="1055.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,350,133 samples, 0.01%)</title><rect x="26.0383%" y="1029" width="0.0118%" height="15" fill="rgb(248,202,8)" fg:x="9638227460" fg:w="4350133"/><text x="26.2883%" y="1039.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4,350,133 samples, 0.01%)</title><rect x="26.0383%" y="1013" width="0.0118%" height="15" fill="rgb(206,104,37)" fg:x="9638227460" fg:w="4350133"/><text x="26.2883%" y="1023.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (8,598,098 samples, 0.02%)</title><rect x="26.0500%" y="1045" width="0.0232%" height="15" fill="rgb(223,8,27)" fg:x="9642577593" fg:w="8598098"/><text x="26.3000%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4,284,923 samples, 0.01%)</title><rect x="26.0836%" y="949" width="0.0116%" height="15" fill="rgb(216,217,28)" fg:x="9655014354" fg:w="4284923"/><text x="26.3336%" y="959.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::increment (20,974,845 samples, 0.06%)</title><rect x="26.0733%" y="1045" width="0.0567%" height="15" fill="rgb(249,199,1)" fg:x="9651175691" fg:w="20974845"/><text x="26.3233%" y="1055.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::hash_key (17,136,182 samples, 0.05%)</title><rect x="26.0836%" y="1029" width="0.0463%" height="15" fill="rgb(240,85,17)" fg:x="9655014354" fg:w="17136182"/><text x="26.3336%" y="1039.50"></text></g><g><title>&lt;caches::lfu::DefaultKeyHasher&lt;K&gt; as caches::lfu::KeyHasher&lt;K&gt;&gt;::hash_key (17,136,182 samples, 0.05%)</title><rect x="26.0836%" y="1013" width="0.0463%" height="15" fill="rgb(206,108,45)" fg:x="9655014354" fg:w="17136182"/><text x="26.3336%" y="1023.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (17,136,182 samples, 0.05%)</title><rect x="26.0836%" y="997" width="0.0463%" height="15" fill="rgb(245,210,41)" fg:x="9655014354" fg:w="17136182"/><text x="26.3336%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17,136,182 samples, 0.05%)</title><rect x="26.0836%" y="981" width="0.0463%" height="15" fill="rgb(206,13,37)" fg:x="9655014354" fg:w="17136182"/><text x="26.3336%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17,136,182 samples, 0.05%)</title><rect x="26.0836%" y="965" width="0.0463%" height="15" fill="rgb(250,61,18)" fg:x="9655014354" fg:w="17136182"/><text x="26.3336%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (12,851,259 samples, 0.03%)</title><rect x="26.0952%" y="949" width="0.0347%" height="15" fill="rgb(235,172,48)" fg:x="9659299277" fg:w="12851259"/><text x="26.3452%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4,192,796 samples, 0.01%)</title><rect x="26.1186%" y="933" width="0.0113%" height="15" fill="rgb(249,201,17)" fg:x="9667957740" fg:w="4192796"/><text x="26.3686%" y="943.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (33,795,073 samples, 0.09%)</title><rect x="26.0500%" y="1061" width="0.0913%" height="15" fill="rgb(219,208,6)" fg:x="9642577593" fg:w="33795073"/><text x="26.3000%" y="1071.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::try_reset (4,222,130 samples, 0.01%)</title><rect x="26.1299%" y="1045" width="0.0114%" height="15" fill="rgb(248,31,23)" fg:x="9672150536" fg:w="4222130"/><text x="26.3799%" y="1055.50"></text></g><g><title>mws5::dict::Dict::match_count (41,964,320 samples, 0.11%)</title><rect x="26.0500%" y="1077" width="0.1134%" height="15" fill="rgb(245,15,42)" fg:x="9642577593" fg:w="41964320"/><text x="26.3000%" y="1087.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (8,169,247 samples, 0.02%)</title><rect x="26.1413%" y="1061" width="0.0221%" height="15" fill="rgb(222,217,39)" fg:x="9676372666" fg:w="8169247"/><text x="26.3913%" y="1071.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (8,169,247 samples, 0.02%)</title><rect x="26.1413%" y="1045" width="0.0221%" height="15" fill="rgb(210,219,27)" fg:x="9676372666" fg:w="8169247"/><text x="26.3913%" y="1055.50"></text></g><g><title>core::cell::BorrowRefMut::new (8,169,247 samples, 0.02%)</title><rect x="26.1413%" y="1029" width="0.0221%" height="15" fill="rgb(252,166,36)" fg:x="9676372666" fg:w="8169247"/><text x="26.3913%" y="1039.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3,895,820 samples, 0.01%)</title><rect x="26.1529%" y="1013" width="0.0105%" height="15" fill="rgb(245,132,34)" fg:x="9680646093" fg:w="3895820"/><text x="26.4029%" y="1023.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3,895,820 samples, 0.01%)</title><rect x="26.1529%" y="997" width="0.0105%" height="15" fill="rgb(236,54,3)" fg:x="9680646093" fg:w="3895820"/><text x="26.4029%" y="1007.50"></text></g><g><title>core::mem::replace (3,895,820 samples, 0.01%)</title><rect x="26.1529%" y="981" width="0.0105%" height="15" fill="rgb(241,173,43)" fg:x="9680646093" fg:w="3895820"/><text x="26.4029%" y="991.50"></text></g><g><title>mws5::search::best_pos (58,516,289 samples, 0.16%)</title><rect x="26.0158%" y="1093" width="0.1581%" height="15" fill="rgb(215,190,9)" fg:x="9629904621" fg:w="58516289"/><text x="26.2658%" y="1103.50"></text></g><g><title>mws5::squares::Square::get_pos (3,878,997 samples, 0.01%)</title><rect x="26.1634%" y="1077" width="0.0105%" height="15" fill="rgb(242,101,16)" fg:x="9684541913" fg:w="3878997"/><text x="26.4134%" y="1087.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8,409,659 samples, 0.02%)</title><rect x="26.2640%" y="869" width="0.0227%" height="15" fill="rgb(223,190,21)" fg:x="9721784214" fg:w="8409659"/><text x="26.5140%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16,684,458 samples, 0.05%)</title><rect x="26.2532%" y="885" width="0.0451%" height="15" fill="rgb(215,228,25)" fg:x="9717786943" fg:w="16684458"/><text x="26.5032%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4,277,528 samples, 0.01%)</title><rect x="26.2868%" y="869" width="0.0116%" height="15" fill="rgb(225,36,22)" fg:x="9730193873" fg:w="4277528"/><text x="26.5368%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (29,589,466 samples, 0.08%)</title><rect x="26.3220%" y="869" width="0.0799%" height="15" fill="rgb(251,106,46)" fg:x="9743230825" fg:w="29589466"/><text x="26.5720%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (75,752,960 samples, 0.20%)</title><rect x="26.2202%" y="965" width="0.2047%" height="15" fill="rgb(208,90,1)" fg:x="9705577944" fg:w="75752960"/><text x="26.4702%" y="975.50"></text></g><g><title>core::hash::BuildHasher::hash_one (75,752,960 samples, 0.20%)</title><rect x="26.2202%" y="949" width="0.2047%" height="15" fill="rgb(243,10,4)" fg:x="9705577944" fg:w="75752960"/><text x="26.4702%" y="959.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (75,752,960 samples, 0.20%)</title><rect x="26.2202%" y="933" width="0.2047%" height="15" fill="rgb(212,137,27)" fg:x="9705577944" fg:w="75752960"/><text x="26.4702%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (75,752,960 samples, 0.20%)</title><rect x="26.2202%" y="917" width="0.2047%" height="15" fill="rgb(231,220,49)" fg:x="9705577944" fg:w="75752960"/><text x="26.4702%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (75,752,960 samples, 0.20%)</title><rect x="26.2202%" y="901" width="0.2047%" height="15" fill="rgb(237,96,20)" fg:x="9705577944" fg:w="75752960"/><text x="26.4702%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (46,859,503 samples, 0.13%)</title><rect x="26.2983%" y="885" width="0.1266%" height="15" fill="rgb(239,229,30)" fg:x="9734471401" fg:w="46859503"/><text x="26.5483%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8,510,613 samples, 0.02%)</title><rect x="26.4019%" y="869" width="0.0230%" height="15" fill="rgb(219,65,33)" fg:x="9772820291" fg:w="8510613"/><text x="26.6519%" y="879.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3,989,855 samples, 0.01%)</title><rect x="26.4249%" y="917" width="0.0108%" height="15" fill="rgb(243,134,7)" fg:x="9781330904" fg:w="3989855"/><text x="26.6749%" y="927.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (3,989,855 samples, 0.01%)</title><rect x="26.4249%" y="901" width="0.0108%" height="15" fill="rgb(216,177,54)" fg:x="9781330904" fg:w="3989855"/><text x="26.6749%" y="911.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (3,989,855 samples, 0.01%)</title><rect x="26.4249%" y="885" width="0.0108%" height="15" fill="rgb(211,160,20)" fg:x="9781330904" fg:w="3989855"/><text x="26.6749%" y="895.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (3,989,855 samples, 0.01%)</title><rect x="26.4249%" y="869" width="0.0108%" height="15" fill="rgb(239,85,39)" fg:x="9781330904" fg:w="3989855"/><text x="26.6749%" y="879.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load (8,443,092 samples, 0.02%)</title><rect x="26.4357%" y="917" width="0.0228%" height="15" fill="rgb(232,125,22)" fg:x="9785320759" fg:w="8443092"/><text x="26.6857%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (8,443,092 samples, 0.02%)</title><rect x="26.4357%" y="901" width="0.0228%" height="15" fill="rgb(244,57,34)" fg:x="9785320759" fg:w="8443092"/><text x="26.6857%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8,443,092 samples, 0.02%)</title><rect x="26.4357%" y="885" width="0.0228%" height="15" fill="rgb(214,203,32)" fg:x="9785320759" fg:w="8443092"/><text x="26.6857%" y="895.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (92,538,082 samples, 0.25%)</title><rect x="26.2202%" y="1045" width="0.2500%" height="15" fill="rgb(207,58,43)" fg:x="9705577944" fg:w="92538082"/><text x="26.4702%" y="1055.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (92,538,082 samples, 0.25%)</title><rect x="26.2202%" y="1029" width="0.2500%" height="15" fill="rgb(215,193,15)" fg:x="9705577944" fg:w="92538082"/><text x="26.4702%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (92,538,082 samples, 0.25%)</title><rect x="26.2202%" y="1013" width="0.2500%" height="15" fill="rgb(232,15,44)" fg:x="9705577944" fg:w="92538082"/><text x="26.4702%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (92,538,082 samples, 0.25%)</title><rect x="26.2202%" y="997" width="0.2500%" height="15" fill="rgb(212,3,48)" fg:x="9705577944" fg:w="92538082"/><text x="26.4702%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (92,538,082 samples, 0.25%)</title><rect x="26.2202%" y="981" width="0.2500%" height="15" fill="rgb(218,128,7)" fg:x="9705577944" fg:w="92538082"/><text x="26.4702%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (16,785,122 samples, 0.05%)</title><rect x="26.4249%" y="965" width="0.0453%" height="15" fill="rgb(226,216,39)" fg:x="9781330904" fg:w="16785122"/><text x="26.6749%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16,785,122 samples, 0.05%)</title><rect x="26.4249%" y="949" width="0.0453%" height="15" fill="rgb(243,47,51)" fg:x="9781330904" fg:w="16785122"/><text x="26.6749%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (16,785,122 samples, 0.05%)</title><rect x="26.4249%" y="933" width="0.0453%" height="15" fill="rgb(241,183,40)" fg:x="9781330904" fg:w="16785122"/><text x="26.6749%" y="943.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (4,352,175 samples, 0.01%)</title><rect x="26.4585%" y="917" width="0.0118%" height="15" fill="rgb(231,217,32)" fg:x="9793763851" fg:w="4352175"/><text x="26.7085%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4,098,278 samples, 0.01%)</title><rect x="26.4820%" y="885" width="0.0111%" height="15" fill="rgb(229,61,38)" fg:x="9802470482" fg:w="4098278"/><text x="26.7320%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4,098,278 samples, 0.01%)</title><rect x="26.4820%" y="869" width="0.0111%" height="15" fill="rgb(225,210,5)" fg:x="9802470482" fg:w="4098278"/><text x="26.7320%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (21,474,787 samples, 0.06%)</title><rect x="26.4702%" y="965" width="0.0580%" height="15" fill="rgb(231,79,45)" fg:x="9798116026" fg:w="21474787"/><text x="26.7202%" y="975.50"></text></g><g><title>core::hash::BuildHasher::hash_one (21,474,787 samples, 0.06%)</title><rect x="26.4702%" y="949" width="0.0580%" height="15" fill="rgb(224,100,7)" fg:x="9798116026" fg:w="21474787"/><text x="26.7202%" y="959.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (21,474,787 samples, 0.06%)</title><rect x="26.4702%" y="933" width="0.0580%" height="15" fill="rgb(241,198,18)" fg:x="9798116026" fg:w="21474787"/><text x="26.7202%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (21,474,787 samples, 0.06%)</title><rect x="26.4702%" y="917" width="0.0580%" height="15" fill="rgb(252,97,53)" fg:x="9798116026" fg:w="21474787"/><text x="26.7202%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (21,474,787 samples, 0.06%)</title><rect x="26.4702%" y="901" width="0.0580%" height="15" fill="rgb(220,88,7)" fg:x="9798116026" fg:w="21474787"/><text x="26.7202%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13,022,053 samples, 0.04%)</title><rect x="26.4931%" y="885" width="0.0352%" height="15" fill="rgb(213,176,14)" fg:x="9806568760" fg:w="13022053"/><text x="26.7431%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8,686,611 samples, 0.02%)</title><rect x="26.5048%" y="869" width="0.0235%" height="15" fill="rgb(246,73,7)" fg:x="9810904202" fg:w="8686611"/><text x="26.7548%" y="879.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4,371,884 samples, 0.01%)</title><rect x="26.5283%" y="917" width="0.0118%" height="15" fill="rgb(245,64,36)" fg:x="9819590813" fg:w="4371884"/><text x="26.7783%" y="927.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (4,371,884 samples, 0.01%)</title><rect x="26.5283%" y="901" width="0.0118%" height="15" fill="rgb(245,80,10)" fg:x="9819590813" fg:w="4371884"/><text x="26.7783%" y="911.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load (4,360,182 samples, 0.01%)</title><rect x="26.5401%" y="917" width="0.0118%" height="15" fill="rgb(232,107,50)" fg:x="9823962697" fg:w="4360182"/><text x="26.7901%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (4,360,182 samples, 0.01%)</title><rect x="26.5401%" y="901" width="0.0118%" height="15" fill="rgb(253,3,0)" fg:x="9823962697" fg:w="4360182"/><text x="26.7901%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4,360,182 samples, 0.01%)</title><rect x="26.5401%" y="885" width="0.0118%" height="15" fill="rgb(212,99,53)" fg:x="9823962697" fg:w="4360182"/><text x="26.7901%" y="895.50"></text></g><g><title>hashbrown::control::tag::Tag::full (4,135,379 samples, 0.01%)</title><rect x="26.5519%" y="917" width="0.0112%" height="15" fill="rgb(249,111,54)" fg:x="9828322879" fg:w="4135379"/><text x="26.8019%" y="927.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (38,715,576 samples, 0.10%)</title><rect x="26.4702%" y="1029" width="0.1046%" height="15" fill="rgb(249,55,30)" fg:x="9798116026" fg:w="38715576"/><text x="26.7202%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (38,715,576 samples, 0.10%)</title><rect x="26.4702%" y="1013" width="0.1046%" height="15" fill="rgb(237,47,42)" fg:x="9798116026" fg:w="38715576"/><text x="26.7202%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (38,715,576 samples, 0.10%)</title><rect x="26.4702%" y="997" width="0.1046%" height="15" fill="rgb(211,20,18)" fg:x="9798116026" fg:w="38715576"/><text x="26.7202%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (38,715,576 samples, 0.10%)</title><rect x="26.4702%" y="981" width="0.1046%" height="15" fill="rgb(231,203,46)" fg:x="9798116026" fg:w="38715576"/><text x="26.7202%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (17,240,789 samples, 0.05%)</title><rect x="26.5283%" y="965" width="0.0466%" height="15" fill="rgb(237,142,3)" fg:x="9819590813" fg:w="17240789"/><text x="26.7783%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17,240,789 samples, 0.05%)</title><rect x="26.5283%" y="949" width="0.0466%" height="15" fill="rgb(241,107,1)" fg:x="9819590813" fg:w="17240789"/><text x="26.7783%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (17,240,789 samples, 0.05%)</title><rect x="26.5283%" y="933" width="0.0466%" height="15" fill="rgb(229,83,13)" fg:x="9819590813" fg:w="17240789"/><text x="26.7783%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (4,373,344 samples, 0.01%)</title><rect x="26.5630%" y="917" width="0.0118%" height="15" fill="rgb(241,91,40)" fg:x="9832458258" fg:w="4373344"/><text x="26.8130%" y="927.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (43,098,732 samples, 0.12%)</title><rect x="26.4702%" y="1045" width="0.1164%" height="15" fill="rgb(225,3,45)" fg:x="9798116026" fg:w="43098732"/><text x="26.7202%" y="1055.50"></text></g><g><title>caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt;::move_to_protected (4,383,156 samples, 0.01%)</title><rect x="26.5748%" y="1029" width="0.0118%" height="15" fill="rgb(244,223,14)" fg:x="9836831602" fg:w="4383156"/><text x="26.8248%" y="1039.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::remove_and_return_ent (4,383,156 samples, 0.01%)</title><rect x="26.5748%" y="1013" width="0.0118%" height="15" fill="rgb(224,124,37)" fg:x="9836831602" fg:w="4383156"/><text x="26.8248%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4,339,560 samples, 0.01%)</title><rect x="26.6434%" y="949" width="0.0117%" height="15" fill="rgb(251,171,30)" fg:x="9862202310" fg:w="4339560"/><text x="26.8934%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8,705,109 samples, 0.02%)</title><rect x="26.6551%" y="933" width="0.0235%" height="15" fill="rgb(236,46,54)" fg:x="9866541870" fg:w="8705109"/><text x="26.9051%" y="943.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (22,223,116 samples, 0.06%)</title><rect x="26.6204%" y="997" width="0.0600%" height="15" fill="rgb(245,213,5)" fg:x="9853701641" fg:w="22223116"/><text x="26.8704%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (22,223,116 samples, 0.06%)</title><rect x="26.6204%" y="981" width="0.0600%" height="15" fill="rgb(230,144,27)" fg:x="9853701641" fg:w="22223116"/><text x="26.8704%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (22,223,116 samples, 0.06%)</title><rect x="26.6204%" y="965" width="0.0600%" height="15" fill="rgb(220,86,6)" fg:x="9853701641" fg:w="22223116"/><text x="26.8704%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9,382,887 samples, 0.03%)</title><rect x="26.6551%" y="949" width="0.0253%" height="15" fill="rgb(240,20,13)" fg:x="9866541870" fg:w="9382887"/><text x="26.9051%" y="959.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::hash_key (40,248,084 samples, 0.11%)</title><rect x="26.6086%" y="1029" width="0.1087%" height="15" fill="rgb(217,89,34)" fg:x="9849342767" fg:w="40248084"/><text x="26.8586%" y="1039.50"></text></g><g><title>&lt;caches::lfu::DefaultKeyHasher&lt;K&gt; as caches::lfu::KeyHasher&lt;K&gt;&gt;::hash_key (35,889,210 samples, 0.10%)</title><rect x="26.6204%" y="1013" width="0.0970%" height="15" fill="rgb(229,13,5)" fg:x="9853701641" fg:w="35889210"/><text x="26.8704%" y="1023.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (13,666,094 samples, 0.04%)</title><rect x="26.6805%" y="997" width="0.0369%" height="15" fill="rgb(244,67,35)" fg:x="9875924757" fg:w="13666094"/><text x="26.9305%" y="1007.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (13,666,094 samples, 0.04%)</title><rect x="26.6805%" y="981" width="0.0369%" height="15" fill="rgb(221,40,2)" fg:x="9875924757" fg:w="13666094"/><text x="26.9305%" y="991.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (13,666,094 samples, 0.04%)</title><rect x="26.6805%" y="965" width="0.0369%" height="15" fill="rgb(237,157,21)" fg:x="9875924757" fg:w="13666094"/><text x="26.9305%" y="975.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (13,666,094 samples, 0.04%)</title><rect x="26.6805%" y="949" width="0.0369%" height="15" fill="rgb(222,94,11)" fg:x="9875924757" fg:w="13666094"/><text x="26.9305%" y="959.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::increment (65,402,139 samples, 0.18%)</title><rect x="26.5867%" y="1045" width="0.1767%" height="15" fill="rgb(249,113,6)" fg:x="9841214758" fg:w="65402139"/><text x="26.8367%" y="1055.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::try_reset (17,026,046 samples, 0.05%)</title><rect x="26.7174%" y="1029" width="0.0460%" height="15" fill="rgb(238,137,36)" fg:x="9889590851" fg:w="17026046"/><text x="26.9674%" y="1039.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::reset (12,613,470 samples, 0.03%)</title><rect x="26.7293%" y="1013" width="0.0341%" height="15" fill="rgb(210,102,26)" fg:x="9894003427" fg:w="12613470"/><text x="26.9793%" y="1023.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset (12,613,470 samples, 0.03%)</title><rect x="26.7293%" y="997" width="0.0341%" height="15" fill="rgb(218,30,30)" fg:x="9894003427" fg:w="12613470"/><text x="26.9793%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (12,613,470 samples, 0.03%)</title><rect x="26.7293%" y="981" width="0.0341%" height="15" fill="rgb(214,67,26)" fg:x="9894003427" fg:w="12613470"/><text x="26.9793%" y="991.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset::_{{closure}} (12,613,470 samples, 0.03%)</title><rect x="26.7293%" y="965" width="0.0341%" height="15" fill="rgb(251,9,53)" fg:x="9894003427" fg:w="12613470"/><text x="26.9793%" y="975.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset (12,613,470 samples, 0.03%)</title><rect x="26.7293%" y="949" width="0.0341%" height="15" fill="rgb(228,204,25)" fg:x="9894003427" fg:w="12613470"/><text x="26.9793%" y="959.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (12,613,470 samples, 0.03%)</title><rect x="26.7293%" y="933" width="0.0341%" height="15" fill="rgb(207,153,8)" fg:x="9894003427" fg:w="12613470"/><text x="26.9793%" y="943.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset::_{{closure}} (12,613,470 samples, 0.03%)</title><rect x="26.7293%" y="917" width="0.0341%" height="15" fill="rgb(242,9,16)" fg:x="9894003427" fg:w="12613470"/><text x="26.9793%" y="927.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (204,475,037 samples, 0.55%)</title><rect x="26.2202%" y="1061" width="0.5524%" height="15" fill="rgb(217,211,10)" fg:x="9705577944" fg:w="204475037"/><text x="26.4702%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,302,571 samples, 0.01%)</title><rect x="26.7727%" y="997" width="0.0116%" height="15" fill="rgb(219,228,52)" fg:x="9910052981" fg:w="4302571"/><text x="27.0227%" y="1007.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4,302,571 samples, 0.01%)</title><rect x="26.7727%" y="981" width="0.0116%" height="15" fill="rgb(231,92,29)" fg:x="9910052981" fg:w="4302571"/><text x="27.0227%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (13,028,429 samples, 0.04%)</title><rect x="26.7727%" y="1061" width="0.0352%" height="15" fill="rgb(232,8,23)" fg:x="9910052981" fg:w="13028429"/><text x="27.0227%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (13,028,429 samples, 0.04%)</title><rect x="26.7727%" y="1045" width="0.0352%" height="15" fill="rgb(216,211,34)" fg:x="9910052981" fg:w="13028429"/><text x="27.0227%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13,028,429 samples, 0.04%)</title><rect x="26.7727%" y="1029" width="0.0352%" height="15" fill="rgb(236,151,0)" fg:x="9910052981" fg:w="13028429"/><text x="27.0227%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13,028,429 samples, 0.04%)</title><rect x="26.7727%" y="1013" width="0.0352%" height="15" fill="rgb(209,168,3)" fg:x="9910052981" fg:w="13028429"/><text x="27.0227%" y="1023.50"></text></g><g><title>core::iter::adapters::copied::copy_try_fold::_{{closure}} (8,725,858 samples, 0.02%)</title><rect x="26.7843%" y="997" width="0.0236%" height="15" fill="rgb(208,129,28)" fg:x="9914355552" fg:w="8725858"/><text x="27.0343%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (8,725,858 samples, 0.02%)</title><rect x="26.7843%" y="981" width="0.0236%" height="15" fill="rgb(229,78,22)" fg:x="9914355552" fg:w="8725858"/><text x="27.0343%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8,725,858 samples, 0.02%)</title><rect x="26.7843%" y="965" width="0.0236%" height="15" fill="rgb(228,187,13)" fg:x="9914355552" fg:w="8725858"/><text x="27.0343%" y="975.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (8,725,858 samples, 0.02%)</title><rect x="26.7843%" y="949" width="0.0236%" height="15" fill="rgb(240,119,24)" fg:x="9914355552" fg:w="8725858"/><text x="27.0343%" y="959.50"></text></g><g><title>mws5::words::Word::is_fit (8,725,858 samples, 0.02%)</title><rect x="26.7843%" y="933" width="0.0236%" height="15" fill="rgb(209,194,42)" fg:x="9914355552" fg:w="8725858"/><text x="27.0343%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,725,858 samples, 0.02%)</title><rect x="26.7843%" y="917" width="0.0236%" height="15" fill="rgb(247,200,46)" fg:x="9914355552" fg:w="8725858"/><text x="27.0343%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (8,725,858 samples, 0.02%)</title><rect x="26.7843%" y="901" width="0.0236%" height="15" fill="rgb(218,76,16)" fg:x="9914355552" fg:w="8725858"/><text x="27.0343%" y="911.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,725,858 samples, 0.02%)</title><rect x="26.7843%" y="885" width="0.0236%" height="15" fill="rgb(225,21,48)" fg:x="9914355552" fg:w="8725858"/><text x="27.0343%" y="895.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (8,725,858 samples, 0.02%)</title><rect x="26.7843%" y="869" width="0.0236%" height="15" fill="rgb(239,223,50)" fg:x="9914355552" fg:w="8725858"/><text x="27.0343%" y="879.50"></text></g><g><title>mws5::dict::Dict::is_fit (234,757,159 samples, 0.63%)</title><rect x="26.1853%" y="1077" width="0.6342%" height="15" fill="rgb(244,45,21)" fg:x="9692659477" fg:w="234757159"/><text x="26.4353%" y="1087.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (4,335,226 samples, 0.01%)</title><rect x="26.8078%" y="1061" width="0.0117%" height="15" fill="rgb(232,33,43)" fg:x="9923081410" fg:w="4335226"/><text x="27.0578%" y="1071.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (4,335,226 samples, 0.01%)</title><rect x="26.8078%" y="1045" width="0.0117%" height="15" fill="rgb(209,8,3)" fg:x="9923081410" fg:w="4335226"/><text x="27.0578%" y="1055.50"></text></g><g><title>core::cell::BorrowRefMut::new (4,335,226 samples, 0.01%)</title><rect x="26.8078%" y="1029" width="0.0117%" height="15" fill="rgb(214,25,53)" fg:x="9923081410" fg:w="4335226"/><text x="27.0578%" y="1039.50"></text></g><g><title>mws5::search::cross_fit (243,254,574 samples, 0.66%)</title><rect x="26.1739%" y="1093" width="0.6572%" height="15" fill="rgb(254,186,54)" fg:x="9688420910" fg:w="243254574"/><text x="26.4239%" y="1103.50"></text></g><g><title>mws5::squares::Square::is_transposed (4,258,848 samples, 0.01%)</title><rect x="26.8196%" y="1077" width="0.0115%" height="15" fill="rgb(208,174,49)" fg:x="9927416636" fg:w="4258848"/><text x="27.0696%" y="1087.50"></text></g><g><title>mws5::words::Word::is_transposed (4,258,848 samples, 0.01%)</title><rect x="26.8196%" y="1061" width="0.0115%" height="15" fill="rgb(233,191,51)" fg:x="9927416636" fg:w="4258848"/><text x="27.0696%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u8&gt;::cmp (4,258,848 samples, 0.01%)</title><rect x="26.8196%" y="1045" width="0.0115%" height="15" fill="rgb(222,134,10)" fg:x="9927416636" fg:w="4258848"/><text x="27.0696%" y="1055.50"></text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (1,873,362,859 samples, 5.06%)</title><rect x="21.8163%" y="1109" width="5.0610%" height="15" fill="rgb(230,226,20)" fg:x="8075421588" fg:w="1873362859"/><text x="22.0663%" y="1119.50">mws5::..</text></g><g><title>mws5::squares::Square::set_pos (17,108,963 samples, 0.05%)</title><rect x="26.8311%" y="1093" width="0.0462%" height="15" fill="rgb(251,111,25)" fg:x="9931675484" fg:w="17108963"/><text x="27.0811%" y="1103.50"></text></g><g><title>core::iter::adapters::inspect::inspect_fold::_{{closure}} (23,893,081 samples, 0.06%)</title><rect x="27.1175%" y="885" width="0.0645%" height="15" fill="rgb(224,40,46)" fg:x="10037711814" fg:w="23893081"/><text x="27.3675%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (23,893,081 samples, 0.06%)</title><rect x="27.1175%" y="869" width="0.0645%" height="15" fill="rgb(236,108,47)" fg:x="10037711814" fg:w="23893081"/><text x="27.3675%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (23,893,081 samples, 0.06%)</title><rect x="27.1175%" y="853" width="0.0645%" height="15" fill="rgb(234,93,0)" fg:x="10037711814" fg:w="23893081"/><text x="27.3675%" y="863.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (23,893,081 samples, 0.06%)</title><rect x="27.1175%" y="837" width="0.0645%" height="15" fill="rgb(224,213,32)" fg:x="10037711814" fg:w="23893081"/><text x="27.3675%" y="847.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::_{{closure}} (79,669,461 samples, 0.22%)</title><rect x="27.0250%" y="901" width="0.2152%" height="15" fill="rgb(251,11,48)" fg:x="10003449247" fg:w="79669461"/><text x="27.2750%" y="911.50"></text></g><g><title>mws5::squares::Square::has_double::_{{closure}} (21,513,813 samples, 0.06%)</title><rect x="27.1821%" y="885" width="0.0581%" height="15" fill="rgb(236,173,5)" fg:x="10061604895" fg:w="21513813"/><text x="27.4321%" y="895.50"></text></g><g><title>mws5::words::Word::is_full (21,513,813 samples, 0.06%)</title><rect x="27.1821%" y="869" width="0.0581%" height="15" fill="rgb(230,95,12)" fg:x="10061604895" fg:w="21513813"/><text x="27.4321%" y="879.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (100,661,598 samples, 0.27%)</title><rect x="27.0020%" y="1061" width="0.2719%" height="15" fill="rgb(232,209,1)" fg:x="9994949404" fg:w="100661598"/><text x="27.2520%" y="1071.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (100,661,598 samples, 0.27%)</title><rect x="27.0020%" y="1045" width="0.2719%" height="15" fill="rgb(232,6,1)" fg:x="9994949404" fg:w="100661598"/><text x="27.2520%" y="1055.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (100,661,598 samples, 0.27%)</title><rect x="27.0020%" y="1029" width="0.2719%" height="15" fill="rgb(210,224,50)" fg:x="9994949404" fg:w="100661598"/><text x="27.2520%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (100,661,598 samples, 0.27%)</title><rect x="27.0020%" y="1013" width="0.2719%" height="15" fill="rgb(228,127,35)" fg:x="9994949404" fg:w="100661598"/><text x="27.2520%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (100,661,598 samples, 0.27%)</title><rect x="27.0020%" y="997" width="0.2719%" height="15" fill="rgb(245,102,45)" fg:x="9994949404" fg:w="100661598"/><text x="27.2520%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::inspect::Inspect&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (100,661,598 samples, 0.27%)</title><rect x="27.0020%" y="981" width="0.2719%" height="15" fill="rgb(214,1,49)" fg:x="9994949404" fg:w="100661598"/><text x="27.2520%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (100,661,598 samples, 0.27%)</title><rect x="27.0020%" y="965" width="0.2719%" height="15" fill="rgb(226,163,40)" fg:x="9994949404" fg:w="100661598"/><text x="27.2520%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (100,661,598 samples, 0.27%)</title><rect x="27.0020%" y="949" width="0.2719%" height="15" fill="rgb(239,212,28)" fg:x="9994949404" fg:w="100661598"/><text x="27.2520%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (100,661,598 samples, 0.27%)</title><rect x="27.0020%" y="933" width="0.2719%" height="15" fill="rgb(220,20,13)" fg:x="9994949404" fg:w="100661598"/><text x="27.2520%" y="943.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (100,661,598 samples, 0.27%)</title><rect x="27.0020%" y="917" width="0.2719%" height="15" fill="rgb(210,164,35)" fg:x="9994949404" fg:w="100661598"/><text x="27.2520%" y="927.50"></text></g><g><title>mws5::squares::Square::has_double::_{{closure}} (12,492,294 samples, 0.03%)</title><rect x="27.2402%" y="901" width="0.0337%" height="15" fill="rgb(248,109,41)" fg:x="10083118708" fg:w="12492294"/><text x="27.4902%" y="911.50"></text></g><g><title>mws5::squares::Square::get_pos (12,492,294 samples, 0.03%)</title><rect x="27.2402%" y="885" width="0.0337%" height="15" fill="rgb(238,23,50)" fg:x="10083118708" fg:w="12492294"/><text x="27.4902%" y="895.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (19,326,212 samples, 0.05%)</title><rect x="27.2739%" y="981" width="0.0522%" height="15" fill="rgb(211,48,49)" fg:x="10095611002" fg:w="19326212"/><text x="27.5239%" y="991.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::default::Default&gt;::default (23,695,980 samples, 0.06%)</title><rect x="27.2739%" y="1061" width="0.0640%" height="15" fill="rgb(223,36,21)" fg:x="10095611002" fg:w="23695980"/><text x="27.5239%" y="1071.50"></text></g><g><title>std::hash::random::RandomState::new (23,695,980 samples, 0.06%)</title><rect x="27.2739%" y="1045" width="0.0640%" height="15" fill="rgb(207,123,46)" fg:x="10095611002" fg:w="23695980"/><text x="27.5239%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (23,695,980 samples, 0.06%)</title><rect x="27.2739%" y="1029" width="0.0640%" height="15" fill="rgb(240,218,32)" fg:x="10095611002" fg:w="23695980"/><text x="27.5239%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (23,695,980 samples, 0.06%)</title><rect x="27.2739%" y="1013" width="0.0640%" height="15" fill="rgb(252,5,43)" fg:x="10095611002" fg:w="23695980"/><text x="27.5239%" y="1023.50"></text></g><g><title>std::hash::random::RandomState::new::_{{closure}} (23,695,980 samples, 0.06%)</title><rect x="27.2739%" y="997" width="0.0640%" height="15" fill="rgb(252,84,19)" fg:x="10095611002" fg:w="23695980"/><text x="27.5239%" y="1007.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4,369,768 samples, 0.01%)</title><rect x="27.3262%" y="981" width="0.0118%" height="15" fill="rgb(243,152,39)" fg:x="10114937214" fg:w="4369768"/><text x="27.5762%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4,369,768 samples, 0.01%)</title><rect x="27.3262%" y="965" width="0.0118%" height="15" fill="rgb(234,160,15)" fg:x="10114937214" fg:w="4369768"/><text x="27.5762%" y="975.50"></text></g><g><title>core::mem::replace (4,369,768 samples, 0.01%)</title><rect x="27.3262%" y="949" width="0.0118%" height="15" fill="rgb(237,34,20)" fg:x="10114937214" fg:w="4369768"/><text x="27.5762%" y="959.50"></text></g><g><title>[unknown] (3,131,267,033 samples, 8.46%)</title><rect x="18.8906%" y="1125" width="8.4593%" height="15" fill="rgb(229,97,13)" fg:x="6992452058" fg:w="3131267033"/><text x="19.1406%" y="1135.50">[unknown]</text></g><g><title>mws5::squares::Square::has_double (174,934,644 samples, 0.47%)</title><rect x="26.8773%" y="1109" width="0.4726%" height="15" fill="rgb(234,71,50)" fg:x="9948784447" fg:w="174934644"/><text x="27.1273%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (128,769,687 samples, 0.35%)</title><rect x="27.0020%" y="1093" width="0.3479%" height="15" fill="rgb(253,155,4)" fg:x="9994949404" fg:w="128769687"/><text x="27.2520%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (128,769,687 samples, 0.35%)</title><rect x="27.0020%" y="1077" width="0.3479%" height="15" fill="rgb(222,185,37)" fg:x="9994949404" fg:w="128769687"/><text x="27.2520%" y="1087.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::with_hasher (4,412,109 samples, 0.01%)</title><rect x="27.3380%" y="1061" width="0.0119%" height="15" fill="rgb(251,177,13)" fg:x="10119306982" fg:w="4412109"/><text x="27.5880%" y="1071.50"></text></g><g><title>__GI___libc_free (4,209,978 samples, 0.01%)</title><rect x="27.3499%" y="1125" width="0.0114%" height="15" fill="rgb(250,179,40)" fg:x="10123719091" fg:w="4209978"/><text x="27.5999%" y="1135.50"></text></g><g><title>_int_free (4,209,978 samples, 0.01%)</title><rect x="27.3499%" y="1109" width="0.0114%" height="15" fill="rgb(242,44,2)" fg:x="10123719091" fg:w="4209978"/><text x="27.5999%" y="1119.50"></text></g><g><title>tcache_free (4,209,978 samples, 0.01%)</title><rect x="27.3499%" y="1093" width="0.0114%" height="15" fill="rgb(216,177,13)" fg:x="10123719091" fg:w="4209978"/><text x="27.5999%" y="1103.50"></text></g><g><title>tcache_put (4,209,978 samples, 0.01%)</title><rect x="27.3499%" y="1077" width="0.0114%" height="15" fill="rgb(216,106,43)" fg:x="10123719091" fg:w="4209978"/><text x="27.5999%" y="1087.50"></text></g><g><title>__GI___libc_malloc (4,332,363 samples, 0.01%)</title><rect x="27.3613%" y="1125" width="0.0117%" height="15" fill="rgb(216,183,2)" fg:x="10127929069" fg:w="4332363"/><text x="27.6113%" y="1135.50"></text></g><g><title>tcache_try_malloc (4,287,279 samples, 0.01%)</title><rect x="27.3614%" y="1109" width="0.0116%" height="15" fill="rgb(249,75,3)" fg:x="10127974153" fg:w="4287279"/><text x="27.6114%" y="1119.50"></text></g><g><title>tcache_available (4,287,279 samples, 0.01%)</title><rect x="27.3614%" y="1093" width="0.0116%" height="15" fill="rgb(219,67,39)" fg:x="10127974153" fg:w="4287279"/><text x="27.6114%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,107,627 samples, 0.02%)</title><rect x="27.3730%" y="805" width="0.0219%" height="15" fill="rgb(253,228,2)" fg:x="10132261432" fg:w="8107627"/><text x="27.6230%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (8,107,627 samples, 0.02%)</title><rect x="27.3730%" y="789" width="0.0219%" height="15" fill="rgb(235,138,27)" fg:x="10132261432" fg:w="8107627"/><text x="27.6230%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8,107,627 samples, 0.02%)</title><rect x="27.3730%" y="773" width="0.0219%" height="15" fill="rgb(236,97,51)" fg:x="10132261432" fg:w="8107627"/><text x="27.6230%" y="783.50"></text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (8,107,627 samples, 0.02%)</title><rect x="27.3730%" y="757" width="0.0219%" height="15" fill="rgb(240,80,30)" fg:x="10132261432" fg:w="8107627"/><text x="27.6230%" y="767.50"></text></g><g><title>mws5::words::Word::is_fit (8,107,627 samples, 0.02%)</title><rect x="27.3730%" y="741" width="0.0219%" height="15" fill="rgb(230,178,19)" fg:x="10132261432" fg:w="8107627"/><text x="27.6230%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,019,496 samples, 0.01%)</title><rect x="27.3840%" y="725" width="0.0109%" height="15" fill="rgb(210,190,27)" fg:x="10136349563" fg:w="4019496"/><text x="27.6340%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (4,019,496 samples, 0.01%)</title><rect x="27.3840%" y="709" width="0.0109%" height="15" fill="rgb(222,107,31)" fg:x="10136349563" fg:w="4019496"/><text x="27.6340%" y="719.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,019,496 samples, 0.01%)</title><rect x="27.3840%" y="693" width="0.0109%" height="15" fill="rgb(216,127,34)" fg:x="10136349563" fg:w="4019496"/><text x="27.6340%" y="703.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (4,019,496 samples, 0.01%)</title><rect x="27.3840%" y="677" width="0.0109%" height="15" fill="rgb(234,116,52)" fg:x="10136349563" fg:w="4019496"/><text x="27.6340%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (66,388,597 samples, 0.18%)</title><rect x="27.3949%" y="757" width="0.1794%" height="15" fill="rgb(222,124,15)" fg:x="10140369059" fg:w="66388597"/><text x="27.6449%" y="767.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (41,434,544 samples, 0.11%)</title><rect x="27.4623%" y="741" width="0.1119%" height="15" fill="rgb(231,179,28)" fg:x="10165323112" fg:w="41434544"/><text x="27.7123%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (327,512,735 samples, 0.88%)</title><rect x="27.3949%" y="789" width="0.8848%" height="15" fill="rgb(226,93,45)" fg:x="10140369059" fg:w="327512735"/><text x="27.6449%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (327,512,735 samples, 0.88%)</title><rect x="27.3949%" y="773" width="0.8848%" height="15" fill="rgb(215,8,51)" fg:x="10140369059" fg:w="327512735"/><text x="27.6449%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (261,124,138 samples, 0.71%)</title><rect x="27.5742%" y="757" width="0.7054%" height="15" fill="rgb(223,106,5)" fg:x="10206757656" fg:w="261124138"/><text x="27.8242%" y="767.50"></text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (261,124,138 samples, 0.71%)</title><rect x="27.5742%" y="741" width="0.7054%" height="15" fill="rgb(250,191,5)" fg:x="10206757656" fg:w="261124138"/><text x="27.8242%" y="751.50"></text></g><g><title>mws5::words::Word::is_fit (222,384,235 samples, 0.60%)</title><rect x="27.6789%" y="725" width="0.6008%" height="15" fill="rgb(242,132,44)" fg:x="10245497559" fg:w="222384235"/><text x="27.9289%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (63,290,165 samples, 0.17%)</title><rect x="28.1087%" y="709" width="0.1710%" height="15" fill="rgb(251,152,29)" fg:x="10404591629" fg:w="63290165"/><text x="28.3587%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (63,290,165 samples, 0.17%)</title><rect x="28.1087%" y="693" width="0.1710%" height="15" fill="rgb(218,179,5)" fg:x="10404591629" fg:w="63290165"/><text x="28.3587%" y="703.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (63,290,165 samples, 0.17%)</title><rect x="28.1087%" y="677" width="0.1710%" height="15" fill="rgb(227,67,19)" fg:x="10404591629" fg:w="63290165"/><text x="28.3587%" y="687.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (63,290,165 samples, 0.17%)</title><rect x="28.1087%" y="661" width="0.1710%" height="15" fill="rgb(233,119,31)" fg:x="10404591629" fg:w="63290165"/><text x="28.3587%" y="671.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (253,444,768 samples, 0.68%)</title><rect x="28.9788%" y="725" width="0.6847%" height="15" fill="rgb(241,120,22)" fg:x="10726689122" fg:w="253444768"/><text x="29.2288%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (511,580,383 samples, 1.38%)</title><rect x="28.2914%" y="741" width="1.3821%" height="15" fill="rgb(224,102,30)" fg:x="10472219535" fg:w="511580383"/><text x="28.5414%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (563,267,936 samples, 1.52%)</title><rect x="34.8495%" y="693" width="1.5217%" height="15" fill="rgb(210,164,37)" fg:x="12899761303" fg:w="563267936"/><text x="35.0995%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (563,267,936 samples, 1.52%)</title><rect x="34.8495%" y="677" width="1.5217%" height="15" fill="rgb(226,191,16)" fg:x="12899761303" fg:w="563267936"/><text x="35.0995%" y="687.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (563,267,936 samples, 1.52%)</title><rect x="34.8495%" y="661" width="1.5217%" height="15" fill="rgb(214,40,45)" fg:x="12899761303" fg:w="563267936"/><text x="35.0995%" y="671.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (563,267,936 samples, 1.52%)</title><rect x="34.8495%" y="645" width="1.5217%" height="15" fill="rgb(244,29,26)" fg:x="12899761303" fg:w="563267936"/><text x="35.0995%" y="655.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4,318,993 samples, 0.01%)</title><rect x="36.3712%" y="693" width="0.0117%" height="15" fill="rgb(216,16,5)" fg:x="13463029239" fg:w="4318993"/><text x="36.6212%" y="703.50"></text></g><g><title>sysvec_apic_timer_interrupt (4,318,993 samples, 0.01%)</title><rect x="36.3712%" y="677" width="0.0117%" height="15" fill="rgb(249,76,35)" fg:x="13463029239" fg:w="4318993"/><text x="36.6212%" y="687.50"></text></g><g><title>__sysvec_apic_timer_interrupt (4,318,993 samples, 0.01%)</title><rect x="36.3712%" y="661" width="0.0117%" height="15" fill="rgb(207,11,44)" fg:x="13463029239" fg:w="4318993"/><text x="36.6212%" y="671.50"></text></g><g><title>hrtimer_interrupt (4,318,993 samples, 0.01%)</title><rect x="36.3712%" y="645" width="0.0117%" height="15" fill="rgb(228,190,49)" fg:x="13463029239" fg:w="4318993"/><text x="36.6212%" y="655.50"></text></g><g><title>__hrtimer_run_queues (4,318,993 samples, 0.01%)</title><rect x="36.3712%" y="629" width="0.0117%" height="15" fill="rgb(214,173,12)" fg:x="13463029239" fg:w="4318993"/><text x="36.6212%" y="639.50"></text></g><g><title>tick_nohz_handler (4,318,993 samples, 0.01%)</title><rect x="36.3712%" y="613" width="0.0117%" height="15" fill="rgb(218,26,35)" fg:x="13463029239" fg:w="4318993"/><text x="36.6212%" y="623.50"></text></g><g><title>update_wall_time (4,318,993 samples, 0.01%)</title><rect x="36.3712%" y="597" width="0.0117%" height="15" fill="rgb(220,200,19)" fg:x="13463029239" fg:w="4318993"/><text x="36.6212%" y="607.50"></text></g><g><title>timekeeping_advance (4,318,993 samples, 0.01%)</title><rect x="36.3712%" y="581" width="0.0117%" height="15" fill="rgb(239,95,49)" fg:x="13463029239" fg:w="4318993"/><text x="36.6212%" y="591.50"></text></g><g><title>timekeeping_update (4,318,993 samples, 0.01%)</title><rect x="36.3712%" y="565" width="0.0117%" height="15" fill="rgb(235,85,53)" fg:x="13463029239" fg:w="4318993"/><text x="36.6212%" y="575.50"></text></g><g><title>notifier_call_chain (4,318,993 samples, 0.01%)</title><rect x="36.3712%" y="549" width="0.0117%" height="15" fill="rgb(233,133,31)" fg:x="13463029239" fg:w="4318993"/><text x="36.6212%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,995,161,179 samples, 8.09%)</title><rect x="28.2914%" y="773" width="8.0916%" height="15" fill="rgb(218,25,20)" fg:x="10472219535" fg:w="2995161179"/><text x="28.5414%" y="783.50">&lt;core::iter..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2,995,161,179 samples, 8.09%)</title><rect x="28.2914%" y="757" width="8.0916%" height="15" fill="rgb(252,210,38)" fg:x="10472219535" fg:w="2995161179"/><text x="28.5414%" y="767.50">&lt;core::slic..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,483,580,796 samples, 6.71%)</title><rect x="29.6734%" y="741" width="6.7096%" height="15" fill="rgb(242,134,21)" fg:x="10983799918" fg:w="2483580796"/><text x="29.9234%" y="751.50">core::ops..</text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (2,483,580,796 samples, 6.71%)</title><rect x="29.6734%" y="725" width="6.7096%" height="15" fill="rgb(213,28,48)" fg:x="10983799918" fg:w="2483580796"/><text x="29.9234%" y="735.50">mws5::sea..</text></g><g><title>mws5::words::Word::is_fit (2,233,653,484 samples, 6.03%)</title><rect x="30.3486%" y="709" width="6.0344%" height="15" fill="rgb(250,196,2)" fg:x="11233727230" fg:w="2233653484"/><text x="30.5986%" y="719.50">mws5::wo..</text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (698,133,185 samples, 1.89%)</title><rect x="38.6222%" y="709" width="1.8861%" height="15" fill="rgb(227,5,17)" fg:x="14296221047" fg:w="698133185"/><text x="38.8722%" y="719.50">&lt;..</text></g><g><title>asm_sysvec_apic_timer_interrupt (4,189,364 samples, 0.01%)</title><rect x="40.5082%" y="709" width="0.0113%" height="15" fill="rgb(221,226,24)" fg:x="14994354232" fg:w="4189364"/><text x="40.7582%" y="719.50"></text></g><g><title>sysvec_apic_timer_interrupt (4,189,364 samples, 0.01%)</title><rect x="40.5082%" y="693" width="0.0113%" height="15" fill="rgb(211,5,48)" fg:x="14994354232" fg:w="4189364"/><text x="40.7582%" y="703.50"></text></g><g><title>__sysvec_apic_timer_interrupt (4,189,364 samples, 0.01%)</title><rect x="40.5082%" y="677" width="0.0113%" height="15" fill="rgb(219,150,6)" fg:x="14994354232" fg:w="4189364"/><text x="40.7582%" y="687.50"></text></g><g><title>hrtimer_interrupt (4,189,364 samples, 0.01%)</title><rect x="40.5082%" y="661" width="0.0113%" height="15" fill="rgb(251,46,16)" fg:x="14994354232" fg:w="4189364"/><text x="40.7582%" y="671.50"></text></g><g><title>__hrtimer_run_queues (4,189,364 samples, 0.01%)</title><rect x="40.5082%" y="645" width="0.0113%" height="15" fill="rgb(220,204,40)" fg:x="14994354232" fg:w="4189364"/><text x="40.7582%" y="655.50"></text></g><g><title>tick_nohz_handler (4,189,364 samples, 0.01%)</title><rect x="40.5082%" y="629" width="0.0113%" height="15" fill="rgb(211,85,2)" fg:x="14994354232" fg:w="4189364"/><text x="40.7582%" y="639.50"></text></g><g><title>update_process_times (4,189,364 samples, 0.01%)</title><rect x="40.5082%" y="613" width="0.0113%" height="15" fill="rgb(229,17,7)" fg:x="14994354232" fg:w="4189364"/><text x="40.7582%" y="623.50"></text></g><g><title>sched_tick (4,189,364 samples, 0.01%)</title><rect x="40.5082%" y="597" width="0.0113%" height="15" fill="rgb(239,72,28)" fg:x="14994354232" fg:w="4189364"/><text x="40.7582%" y="607.50"></text></g><g><title>task_tick_fair (4,189,364 samples, 0.01%)</title><rect x="40.5082%" y="581" width="0.0113%" height="15" fill="rgb(230,47,54)" fg:x="14994354232" fg:w="4189364"/><text x="40.7582%" y="591.50"></text></g><g><title>update_load_avg (4,189,364 samples, 0.01%)</title><rect x="40.5082%" y="565" width="0.0113%" height="15" fill="rgb(214,50,8)" fg:x="14994354232" fg:w="4189364"/><text x="40.7582%" y="575.50"></text></g><g><title>__update_load_avg_se (4,189,364 samples, 0.01%)</title><rect x="40.5082%" y="549" width="0.0113%" height="15" fill="rgb(216,198,43)" fg:x="14994354232" fg:w="4189364"/><text x="40.7582%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,457,281,710 samples, 3.94%)</title><rect x="36.5826%" y="725" width="3.9369%" height="15" fill="rgb(234,20,35)" fg:x="13541266951" fg:w="1457281710"/><text x="36.8326%" y="735.50">&lt;cor..</text></g><g><title>__hrtimer_run_queues (4,019,591 samples, 0.01%)</title><rect x="62.7815%" y="549" width="0.0109%" height="15" fill="rgb(254,45,19)" fg:x="23238950030" fg:w="4019591"/><text x="63.0315%" y="559.50"></text></g><g><title>tick_nohz_handler (4,019,591 samples, 0.01%)</title><rect x="62.7815%" y="533" width="0.0109%" height="15" fill="rgb(219,14,44)" fg:x="23238950030" fg:w="4019591"/><text x="63.0315%" y="543.50"></text></g><g><title>update_process_times (4,019,591 samples, 0.01%)</title><rect x="62.7815%" y="517" width="0.0109%" height="15" fill="rgb(217,220,26)" fg:x="23238950030" fg:w="4019591"/><text x="63.0315%" y="527.50"></text></g><g><title>sched_tick (4,019,591 samples, 0.01%)</title><rect x="62.7815%" y="501" width="0.0109%" height="15" fill="rgb(213,158,28)" fg:x="23238950030" fg:w="4019591"/><text x="63.0315%" y="511.50"></text></g><g><title>task_tick_fair (4,019,591 samples, 0.01%)</title><rect x="62.7815%" y="485" width="0.0109%" height="15" fill="rgb(252,51,52)" fg:x="23238950030" fg:w="4019591"/><text x="63.0315%" y="495.50"></text></g><g><title>update_curr (4,019,591 samples, 0.01%)</title><rect x="62.7815%" y="469" width="0.0109%" height="15" fill="rgb(246,89,16)" fg:x="23238950030" fg:w="4019591"/><text x="63.0315%" y="479.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (8,077,883 samples, 0.02%)</title><rect x="62.7815%" y="613" width="0.0218%" height="15" fill="rgb(216,158,49)" fg:x="23238950030" fg:w="8077883"/><text x="63.0315%" y="623.50"></text></g><g><title>sysvec_apic_timer_interrupt (8,077,883 samples, 0.02%)</title><rect x="62.7815%" y="597" width="0.0218%" height="15" fill="rgb(236,107,19)" fg:x="23238950030" fg:w="8077883"/><text x="63.0315%" y="607.50"></text></g><g><title>__sysvec_apic_timer_interrupt (8,077,883 samples, 0.02%)</title><rect x="62.7815%" y="581" width="0.0218%" height="15" fill="rgb(228,185,30)" fg:x="23238950030" fg:w="8077883"/><text x="63.0315%" y="591.50"></text></g><g><title>hrtimer_interrupt (8,077,883 samples, 0.02%)</title><rect x="62.7815%" y="565" width="0.0218%" height="15" fill="rgb(246,134,8)" fg:x="23238950030" fg:w="8077883"/><text x="63.0315%" y="575.50"></text></g><g><title>hrtimer_update_next_event (4,058,292 samples, 0.01%)</title><rect x="62.7924%" y="549" width="0.0110%" height="15" fill="rgb(214,143,50)" fg:x="23242969621" fg:w="4058292"/><text x="63.0424%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,705,928,242 samples, 4.61%)</title><rect x="58.1947%" y="677" width="4.6087%" height="15" fill="rgb(228,75,8)" fg:x="21541100996" fg:w="1705928242"/><text x="58.4447%" y="687.50">&lt;core..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1,705,928,242 samples, 4.61%)</title><rect x="58.1947%" y="661" width="4.6087%" height="15" fill="rgb(207,175,4)" fg:x="21541100996" fg:w="1705928242"/><text x="58.4447%" y="671.50">&lt;core..</text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,705,928,242 samples, 4.61%)</title><rect x="58.1947%" y="645" width="4.6087%" height="15" fill="rgb(205,108,24)" fg:x="21541100996" fg:w="1705928242"/><text x="58.4447%" y="655.50">&lt;core..</text></g><g><title>mws5::words::Word::bits::_{{closure}} (1,705,928,242 samples, 4.61%)</title><rect x="58.1947%" y="629" width="4.6087%" height="15" fill="rgb(244,120,49)" fg:x="21541100996" fg:w="1705928242"/><text x="58.4447%" y="639.50">mws5:..</text></g><g><title>asm_sysvec_apic_timer_interrupt (4,043,499 samples, 0.01%)</title><rect x="62.8034%" y="677" width="0.0109%" height="15" fill="rgb(223,47,38)" fg:x="23247029238" fg:w="4043499"/><text x="63.0534%" y="687.50"></text></g><g><title>sysvec_apic_timer_interrupt (4,043,499 samples, 0.01%)</title><rect x="62.8034%" y="661" width="0.0109%" height="15" fill="rgb(229,179,11)" fg:x="23247029238" fg:w="4043499"/><text x="63.0534%" y="671.50"></text></g><g><title>irq_exit_rcu (4,043,499 samples, 0.01%)</title><rect x="62.8034%" y="645" width="0.0109%" height="15" fill="rgb(231,122,1)" fg:x="23247029238" fg:w="4043499"/><text x="63.0534%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,714,172,116 samples, 26.24%)</title><rect x="36.5709%" y="757" width="26.2435%" height="15" fill="rgb(245,119,9)" fg:x="13536915152" fg:w="9714172116"/><text x="36.8209%" y="767.50">&lt;core::iter::adapters::filter::Filter&lt;I,P&gt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (9,714,172,116 samples, 26.24%)</title><rect x="36.5709%" y="741" width="26.2435%" height="15" fill="rgb(241,163,25)" fg:x="13536915152" fg:w="9714172116"/><text x="36.8209%" y="751.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8,252,538,607 samples, 22.29%)</title><rect x="40.5196%" y="725" width="22.2948%" height="15" fill="rgb(217,214,3)" fg:x="14998548661" fg:w="8252538607"/><text x="40.7696%" y="735.50">core::ops::function::impls::&lt;impl c..</text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (8,252,538,607 samples, 22.29%)</title><rect x="40.5196%" y="709" width="22.2948%" height="15" fill="rgb(240,86,28)" fg:x="14998548661" fg:w="8252538607"/><text x="40.7696%" y="719.50">mws5::search::_&lt;impl mws5::appstate..</text></g><g><title>mws5::words::Word::is_fit (7,608,320,746 samples, 20.55%)</title><rect x="42.2600%" y="693" width="20.5544%" height="15" fill="rgb(215,47,9)" fg:x="15642766522" fg:w="7608320746"/><text x="42.5100%" y="703.50">mws5::words::Word::is_fit</text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (503,078,135 samples, 1.36%)</title><rect x="64.1759%" y="693" width="1.3591%" height="15" fill="rgb(252,25,45)" fg:x="23755077544" fg:w="503078135"/><text x="64.4259%" y="703.50"></text></g><g><title>account_user_time (4,388,453 samples, 0.01%)</title><rect x="65.5350%" y="581" width="0.0119%" height="15" fill="rgb(251,164,9)" fg:x="24258155679" fg:w="4388453"/><text x="65.7850%" y="591.50"></text></g><g><title>sched_balance_trigger (4,248,159 samples, 0.01%)</title><rect x="65.5468%" y="581" width="0.0115%" height="15" fill="rgb(233,194,0)" fg:x="24262544132" fg:w="4248159"/><text x="65.7968%" y="591.50"></text></g><g><title>sched_use_asym_prio (4,248,159 samples, 0.01%)</title><rect x="65.5468%" y="565" width="0.0115%" height="15" fill="rgb(249,111,24)" fg:x="24262544132" fg:w="4248159"/><text x="65.7968%" y="575.50"></text></g><g><title>idle_cpu (4,248,159 samples, 0.01%)</title><rect x="65.5468%" y="549" width="0.0115%" height="15" fill="rgb(250,223,3)" fg:x="24262544132" fg:w="4248159"/><text x="65.7968%" y="559.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (12,856,932 samples, 0.03%)</title><rect x="65.5350%" y="693" width="0.0347%" height="15" fill="rgb(236,178,37)" fg:x="24258155679" fg:w="12856932"/><text x="65.7850%" y="703.50"></text></g><g><title>sysvec_apic_timer_interrupt (12,856,932 samples, 0.03%)</title><rect x="65.5350%" y="677" width="0.0347%" height="15" fill="rgb(241,158,50)" fg:x="24258155679" fg:w="12856932"/><text x="65.7850%" y="687.50"></text></g><g><title>__sysvec_apic_timer_interrupt (12,856,932 samples, 0.03%)</title><rect x="65.5350%" y="661" width="0.0347%" height="15" fill="rgb(213,121,41)" fg:x="24258155679" fg:w="12856932"/><text x="65.7850%" y="671.50"></text></g><g><title>hrtimer_interrupt (12,856,932 samples, 0.03%)</title><rect x="65.5350%" y="645" width="0.0347%" height="15" fill="rgb(240,92,3)" fg:x="24258155679" fg:w="12856932"/><text x="65.7850%" y="655.50"></text></g><g><title>__hrtimer_run_queues (12,856,932 samples, 0.03%)</title><rect x="65.5350%" y="629" width="0.0347%" height="15" fill="rgb(205,123,3)" fg:x="24258155679" fg:w="12856932"/><text x="65.7850%" y="639.50"></text></g><g><title>tick_nohz_handler (12,856,932 samples, 0.03%)</title><rect x="65.5350%" y="613" width="0.0347%" height="15" fill="rgb(205,97,47)" fg:x="24258155679" fg:w="12856932"/><text x="65.7850%" y="623.50"></text></g><g><title>update_process_times (12,856,932 samples, 0.03%)</title><rect x="65.5350%" y="597" width="0.0347%" height="15" fill="rgb(247,152,14)" fg:x="24258155679" fg:w="12856932"/><text x="65.7850%" y="607.50"></text></g><g><title>sched_tick (4,220,320 samples, 0.01%)</title><rect x="65.5583%" y="581" width="0.0114%" height="15" fill="rgb(248,195,53)" fg:x="24266792291" fg:w="4220320"/><text x="65.8083%" y="591.50"></text></g><g><title>task_tick_fair (4,220,320 samples, 0.01%)</title><rect x="65.5583%" y="565" width="0.0114%" height="15" fill="rgb(226,201,16)" fg:x="24266792291" fg:w="4220320"/><text x="65.8083%" y="575.50"></text></g><g><title>update_load_avg (4,220,320 samples, 0.01%)</title><rect x="65.5583%" y="549" width="0.0114%" height="15" fill="rgb(205,98,0)" fg:x="24266792291" fg:w="4220320"/><text x="65.8083%" y="559.50"></text></g><g><title>__update_load_avg_se (4,220,320 samples, 0.01%)</title><rect x="65.5583%" y="533" width="0.0114%" height="15" fill="rgb(214,191,48)" fg:x="24266792291" fg:w="4220320"/><text x="65.8083%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (962,666,856 samples, 2.60%)</title><rect x="62.9690%" y="709" width="2.6007%" height="15" fill="rgb(237,112,39)" fg:x="23308345984" fg:w="962666856"/><text x="63.2190%" y="719.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,551,529,213 samples, 4.19%)</title><rect x="76.7563%" y="661" width="4.1916%" height="15" fill="rgb(247,203,27)" fg:x="28411802268" fg:w="1551529213"/><text x="77.0063%" y="671.50">&lt;core..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1,551,529,213 samples, 4.19%)</title><rect x="76.7563%" y="645" width="4.1916%" height="15" fill="rgb(235,124,28)" fg:x="28411802268" fg:w="1551529213"/><text x="77.0063%" y="655.50">&lt;core..</text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,551,529,213 samples, 4.19%)</title><rect x="76.7563%" y="629" width="4.1916%" height="15" fill="rgb(208,207,46)" fg:x="28411802268" fg:w="1551529213"/><text x="77.0063%" y="639.50">&lt;core..</text></g><g><title>mws5::words::Word::bits::_{{closure}} (1,551,529,213 samples, 4.19%)</title><rect x="76.7563%" y="613" width="4.1916%" height="15" fill="rgb(234,176,4)" fg:x="28411802268" fg:w="1551529213"/><text x="77.0063%" y="623.50">mws5:..</text></g><g><title>asm_sysvec_apic_timer_interrupt (8,389,956 samples, 0.02%)</title><rect x="80.9479%" y="661" width="0.0227%" height="15" fill="rgb(230,133,28)" fg:x="29963331513" fg:w="8389956"/><text x="81.1979%" y="671.50"></text></g><g><title>sysvec_apic_timer_interrupt (8,389,956 samples, 0.02%)</title><rect x="80.9479%" y="645" width="0.0227%" height="15" fill="rgb(211,137,40)" fg:x="29963331513" fg:w="8389956"/><text x="81.1979%" y="655.50"></text></g><g><title>__sysvec_apic_timer_interrupt (8,389,956 samples, 0.02%)</title><rect x="80.9479%" y="629" width="0.0227%" height="15" fill="rgb(254,35,13)" fg:x="29963331513" fg:w="8389956"/><text x="81.1979%" y="639.50"></text></g><g><title>hrtimer_interrupt (8,389,956 samples, 0.02%)</title><rect x="80.9479%" y="613" width="0.0227%" height="15" fill="rgb(225,49,51)" fg:x="29963331513" fg:w="8389956"/><text x="81.1979%" y="623.50"></text></g><g><title>__hrtimer_run_queues (4,100,732 samples, 0.01%)</title><rect x="80.9595%" y="597" width="0.0111%" height="15" fill="rgb(251,10,15)" fg:x="29967620737" fg:w="4100732"/><text x="81.2095%" y="607.50"></text></g><g><title>tick_nohz_handler (4,100,732 samples, 0.01%)</title><rect x="80.9595%" y="581" width="0.0111%" height="15" fill="rgb(228,207,15)" fg:x="29967620737" fg:w="4100732"/><text x="81.2095%" y="591.50"></text></g><g><title>update_wall_time (4,100,732 samples, 0.01%)</title><rect x="80.9595%" y="565" width="0.0111%" height="15" fill="rgb(241,99,19)" fg:x="29967620737" fg:w="4100732"/><text x="81.2095%" y="575.50"></text></g><g><title>timekeeping_advance (4,100,732 samples, 0.01%)</title><rect x="80.9595%" y="549" width="0.0111%" height="15" fill="rgb(207,104,49)" fg:x="29967620737" fg:w="4100732"/><text x="81.2095%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,679,857,190 samples, 18.05%)</title><rect x="62.9245%" y="741" width="18.0461%" height="15" fill="rgb(234,99,18)" fg:x="23291875288" fg:w="6679857190"/><text x="63.1745%" y="751.50">&lt;core::iter::adapters::filte..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (6,679,857,190 samples, 18.05%)</title><rect x="62.9245%" y="725" width="18.0461%" height="15" fill="rgb(213,191,49)" fg:x="23291875288" fg:w="6679857190"/><text x="63.1745%" y="735.50">&lt;core::slice::iter::Iter&lt;T&gt; ..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5,700,719,638 samples, 15.40%)</title><rect x="65.5697%" y="709" width="15.4009%" height="15" fill="rgb(210,226,19)" fg:x="24271012840" fg:w="5700719638"/><text x="65.8197%" y="719.50">core::ops::function::imp..</text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (5,700,719,638 samples, 15.40%)</title><rect x="65.5697%" y="693" width="15.4009%" height="15" fill="rgb(229,97,18)" fg:x="24271012840" fg:w="5700719638"/><text x="65.8197%" y="703.50">mws5::search::_&lt;impl mws..</text></g><g><title>mws5::words::Word::is_fit (5,228,098,774 samples, 14.12%)</title><rect x="66.8465%" y="677" width="14.1240%" height="15" fill="rgb(211,167,15)" fg:x="24743633704" fg:w="5228098774"/><text x="67.0965%" y="687.50">mws5::words::Word::is..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (366,665,058 samples, 0.99%)</title><rect x="81.0178%" y="693" width="0.9906%" height="15" fill="rgb(210,169,34)" fg:x="29989217185" fg:w="366665058"/><text x="81.2678%" y="703.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (197,441,338 samples, 0.53%)</title><rect x="81.4750%" y="677" width="0.5334%" height="15" fill="rgb(241,121,31)" fg:x="30158440905" fg:w="197441338"/><text x="81.7250%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,129,219,050 samples, 5.75%)</title><rect x="81.0178%" y="725" width="5.7522%" height="15" fill="rgb(232,40,11)" fg:x="29989217185" fg:w="2129219050"/><text x="81.2678%" y="735.50">&lt;core::..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2,129,219,050 samples, 5.75%)</title><rect x="81.0178%" y="709" width="5.7522%" height="15" fill="rgb(205,86,26)" fg:x="29989217185" fg:w="2129219050"/><text x="81.2678%" y="719.50">&lt;core::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,762,553,992 samples, 4.76%)</title><rect x="82.0084%" y="693" width="4.7617%" height="15" fill="rgb(231,126,28)" fg:x="30355882243" fg:w="1762553992"/><text x="82.2584%" y="703.50">core::..</text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (1,762,553,992 samples, 4.76%)</title><rect x="82.0084%" y="677" width="4.7617%" height="15" fill="rgb(219,221,18)" fg:x="30355882243" fg:w="1762553992"/><text x="82.2584%" y="687.50">mws5::..</text></g><g><title>mws5::words::Word::is_fit (1,582,111,913 samples, 4.27%)</title><rect x="82.4959%" y="661" width="4.2742%" height="15" fill="rgb(211,40,0)" fg:x="30536324322" fg:w="1582111913"/><text x="82.7459%" y="671.50">mws5:..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (457,236,156 samples, 1.24%)</title><rect x="85.5348%" y="645" width="1.2353%" height="15" fill="rgb(239,85,43)" fg:x="31661200079" fg:w="457236156"/><text x="85.7848%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (457,236,156 samples, 1.24%)</title><rect x="85.5348%" y="629" width="1.2353%" height="15" fill="rgb(231,55,21)" fg:x="31661200079" fg:w="457236156"/><text x="85.7848%" y="639.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (457,236,156 samples, 1.24%)</title><rect x="85.5348%" y="613" width="1.2353%" height="15" fill="rgb(225,184,43)" fg:x="31661200079" fg:w="457236156"/><text x="85.7848%" y="623.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (457,236,156 samples, 1.24%)</title><rect x="85.5348%" y="597" width="1.2353%" height="15" fill="rgb(251,158,41)" fg:x="31661200079" fg:w="457236156"/><text x="85.7848%" y="607.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4,290,250 samples, 0.01%)</title><rect x="86.7585%" y="581" width="0.0116%" height="15" fill="rgb(234,159,37)" fg:x="32114145985" fg:w="4290250"/><text x="87.0085%" y="591.50"></text></g><g><title>sysvec_apic_timer_interrupt (4,290,250 samples, 0.01%)</title><rect x="86.7585%" y="565" width="0.0116%" height="15" fill="rgb(216,204,22)" fg:x="32114145985" fg:w="4290250"/><text x="87.0085%" y="575.50"></text></g><g><title>__sysvec_apic_timer_interrupt (4,290,250 samples, 0.01%)</title><rect x="86.7585%" y="549" width="0.0116%" height="15" fill="rgb(214,17,3)" fg:x="32114145985" fg:w="4290250"/><text x="87.0085%" y="559.50"></text></g><g><title>hrtimer_interrupt (4,290,250 samples, 0.01%)</title><rect x="86.7585%" y="533" width="0.0116%" height="15" fill="rgb(212,111,17)" fg:x="32114145985" fg:w="4290250"/><text x="87.0085%" y="543.50"></text></g><g><title>__hrtimer_run_queues (4,290,250 samples, 0.01%)</title><rect x="86.7585%" y="517" width="0.0116%" height="15" fill="rgb(221,157,24)" fg:x="32114145985" fg:w="4290250"/><text x="87.0085%" y="527.50"></text></g><g><title>hrtimer_wakeup (4,290,250 samples, 0.01%)</title><rect x="86.7585%" y="501" width="0.0116%" height="15" fill="rgb(252,16,13)" fg:x="32114145985" fg:w="4290250"/><text x="87.0085%" y="511.50"></text></g><g><title>try_to_wake_up (4,290,250 samples, 0.01%)</title><rect x="86.7585%" y="485" width="0.0116%" height="15" fill="rgb(221,62,2)" fg:x="32114145985" fg:w="4290250"/><text x="87.0085%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16,505,213 samples, 0.04%)</title><rect x="86.7700%" y="677" width="0.0446%" height="15" fill="rgb(247,87,22)" fg:x="32118436235" fg:w="16505213"/><text x="87.0200%" y="687.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (8,365,195 samples, 0.02%)</title><rect x="86.7920%" y="661" width="0.0226%" height="15" fill="rgb(215,73,9)" fg:x="32126576253" fg:w="8365195"/><text x="87.0420%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (181,578,087 samples, 0.49%)</title><rect x="86.7700%" y="709" width="0.4905%" height="15" fill="rgb(207,175,33)" fg:x="32118436235" fg:w="181578087"/><text x="87.0200%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (181,578,087 samples, 0.49%)</title><rect x="86.7700%" y="693" width="0.4905%" height="15" fill="rgb(243,129,54)" fg:x="32118436235" fg:w="181578087"/><text x="87.0200%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (165,072,874 samples, 0.45%)</title><rect x="86.8146%" y="677" width="0.4460%" height="15" fill="rgb(227,119,45)" fg:x="32134941448" fg:w="165072874"/><text x="87.0646%" y="687.50"></text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (165,072,874 samples, 0.45%)</title><rect x="86.8146%" y="661" width="0.4460%" height="15" fill="rgb(205,109,36)" fg:x="32134941448" fg:w="165072874"/><text x="87.0646%" y="671.50"></text></g><g><title>mws5::words::Word::is_fit (148,855,247 samples, 0.40%)</title><rect x="86.8584%" y="645" width="0.4021%" height="15" fill="rgb(205,6,39)" fg:x="32151159075" fg:w="148855247"/><text x="87.1084%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (59,899,228 samples, 0.16%)</title><rect x="87.0988%" y="629" width="0.1618%" height="15" fill="rgb(221,32,16)" fg:x="32240115094" fg:w="59899228"/><text x="87.3488%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (59,899,228 samples, 0.16%)</title><rect x="87.0988%" y="613" width="0.1618%" height="15" fill="rgb(228,144,50)" fg:x="32240115094" fg:w="59899228"/><text x="87.3488%" y="623.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (59,899,228 samples, 0.16%)</title><rect x="87.0988%" y="597" width="0.1618%" height="15" fill="rgb(229,201,53)" fg:x="32240115094" fg:w="59899228"/><text x="87.3488%" y="607.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (59,899,228 samples, 0.16%)</title><rect x="87.0988%" y="581" width="0.1618%" height="15" fill="rgb(249,153,27)" fg:x="32240115094" fg:w="59899228"/><text x="87.3488%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,596,753 samples, 0.02%)</title><rect x="87.2721%" y="661" width="0.0232%" height="15" fill="rgb(227,106,25)" fg:x="32304282555" fg:w="8596753"/><text x="87.5221%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (63,373,456 samples, 0.17%)</title><rect x="87.2606%" y="693" width="0.1712%" height="15" fill="rgb(230,65,29)" fg:x="32300014322" fg:w="63373456"/><text x="87.5106%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (63,373,456 samples, 0.17%)</title><rect x="87.2606%" y="677" width="0.1712%" height="15" fill="rgb(221,57,46)" fg:x="32300014322" fg:w="63373456"/><text x="87.5106%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (50,508,470 samples, 0.14%)</title><rect x="87.2953%" y="661" width="0.1365%" height="15" fill="rgb(229,161,17)" fg:x="32312879308" fg:w="50508470"/><text x="87.5453%" y="671.50"></text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (50,508,470 samples, 0.14%)</title><rect x="87.2953%" y="645" width="0.1365%" height="15" fill="rgb(222,213,11)" fg:x="32312879308" fg:w="50508470"/><text x="87.5453%" y="655.50"></text></g><g><title>mws5::words::Word::is_fit (41,879,654 samples, 0.11%)</title><rect x="87.3187%" y="629" width="0.1131%" height="15" fill="rgb(235,35,13)" fg:x="32321508124" fg:w="41879654"/><text x="87.5687%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,646,986 samples, 0.02%)</title><rect x="87.4084%" y="613" width="0.0234%" height="15" fill="rgb(233,158,34)" fg:x="32354740792" fg:w="8646986"/><text x="87.6584%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (8,646,986 samples, 0.02%)</title><rect x="87.4084%" y="597" width="0.0234%" height="15" fill="rgb(215,151,48)" fg:x="32354740792" fg:w="8646986"/><text x="87.6584%" y="607.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,646,986 samples, 0.02%)</title><rect x="87.4084%" y="581" width="0.0234%" height="15" fill="rgb(229,84,14)" fg:x="32354740792" fg:w="8646986"/><text x="87.6584%" y="591.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (8,646,986 samples, 0.02%)</title><rect x="87.4084%" y="565" width="0.0234%" height="15" fill="rgb(229,68,14)" fg:x="32354740792" fg:w="8646986"/><text x="87.6584%" y="575.50"></text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (67,740,333 samples, 0.18%)</title><rect x="87.2606%" y="709" width="0.1830%" height="15" fill="rgb(243,106,26)" fg:x="32300014322" fg:w="67740333"/><text x="87.5106%" y="719.50"></text></g><g><title>mws5::search::cross_fit (4,366,877 samples, 0.01%)</title><rect x="87.4318%" y="693" width="0.0118%" height="15" fill="rgb(206,45,38)" fg:x="32363387778" fg:w="4366877"/><text x="87.6818%" y="703.50"></text></g><g><title>mws5::dict::Dict::is_fit (4,366,877 samples, 0.01%)</title><rect x="87.4318%" y="677" width="0.0118%" height="15" fill="rgb(226,6,15)" fg:x="32363387778" fg:w="4366877"/><text x="87.6818%" y="687.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (4,366,877 samples, 0.01%)</title><rect x="87.4318%" y="661" width="0.0118%" height="15" fill="rgb(232,22,54)" fg:x="32363387778" fg:w="4366877"/><text x="87.6818%" y="671.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (4,366,877 samples, 0.01%)</title><rect x="87.4318%" y="645" width="0.0118%" height="15" fill="rgb(229,222,32)" fg:x="32363387778" fg:w="4366877"/><text x="87.6818%" y="655.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (4,366,877 samples, 0.01%)</title><rect x="87.4318%" y="629" width="0.0118%" height="15" fill="rgb(228,62,29)" fg:x="32363387778" fg:w="4366877"/><text x="87.6818%" y="639.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::detach (4,366,877 samples, 0.01%)</title><rect x="87.4318%" y="613" width="0.0118%" height="15" fill="rgb(251,103,34)" fg:x="32363387778" fg:w="4366877"/><text x="87.6818%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4,409,279 samples, 0.01%)</title><rect x="87.4436%" y="693" width="0.0119%" height="15" fill="rgb(233,12,30)" fg:x="32367754655" fg:w="4409279"/><text x="87.6936%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,409,279 samples, 0.01%)</title><rect x="87.4436%" y="677" width="0.0119%" height="15" fill="rgb(238,52,0)" fg:x="32367754655" fg:w="4409279"/><text x="87.6936%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,409,279 samples, 0.01%)</title><rect x="87.4436%" y="661" width="0.0119%" height="15" fill="rgb(223,98,5)" fg:x="32367754655" fg:w="4409279"/><text x="87.6936%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,409,279 samples, 0.01%)</title><rect x="87.4436%" y="645" width="0.0119%" height="15" fill="rgb(228,75,37)" fg:x="32367754655" fg:w="4409279"/><text x="87.6936%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,409,279 samples, 0.01%)</title><rect x="87.4436%" y="629" width="0.0119%" height="15" fill="rgb(205,115,49)" fg:x="32367754655" fg:w="4409279"/><text x="87.6936%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,409,279 samples, 0.01%)</title><rect x="87.4436%" y="613" width="0.0119%" height="15" fill="rgb(250,154,43)" fg:x="32367754655" fg:w="4409279"/><text x="87.6936%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,409,279 samples, 0.01%)</title><rect x="87.4436%" y="597" width="0.0119%" height="15" fill="rgb(226,43,29)" fg:x="32367754655" fg:w="4409279"/><text x="87.6936%" y="607.50"></text></g><g><title>alloc::alloc::alloc (4,409,279 samples, 0.01%)</title><rect x="87.4436%" y="581" width="0.0119%" height="15" fill="rgb(249,228,39)" fg:x="32367754655" fg:w="4409279"/><text x="87.6936%" y="591.50"></text></g><g><title>__rustc::__rdl_alloc (4,409,279 samples, 0.01%)</title><rect x="87.4436%" y="565" width="0.0119%" height="15" fill="rgb(216,79,43)" fg:x="32367754655" fg:w="4409279"/><text x="87.6936%" y="575.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4,409,279 samples, 0.01%)</title><rect x="87.4436%" y="549" width="0.0119%" height="15" fill="rgb(228,95,12)" fg:x="32367754655" fg:w="4409279"/><text x="87.6936%" y="559.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (4,355,523 samples, 0.01%)</title><rect x="87.4555%" y="661" width="0.0118%" height="15" fill="rgb(249,221,15)" fg:x="32372163934" fg:w="4355523"/><text x="87.7055%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (4,355,523 samples, 0.01%)</title><rect x="87.4555%" y="645" width="0.0118%" height="15" fill="rgb(233,34,13)" fg:x="32372163934" fg:w="4355523"/><text x="87.7055%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (4,355,523 samples, 0.01%)</title><rect x="87.4555%" y="629" width="0.0118%" height="15" fill="rgb(214,103,39)" fg:x="32372163934" fg:w="4355523"/><text x="87.7055%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (4,355,523 samples, 0.01%)</title><rect x="87.4555%" y="613" width="0.0118%" height="15" fill="rgb(251,126,39)" fg:x="32372163934" fg:w="4355523"/><text x="87.7055%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,355,523 samples, 0.01%)</title><rect x="87.4555%" y="597" width="0.0118%" height="15" fill="rgb(214,216,36)" fg:x="32372163934" fg:w="4355523"/><text x="87.7055%" y="607.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (4,355,523 samples, 0.01%)</title><rect x="87.4555%" y="581" width="0.0118%" height="15" fill="rgb(220,221,8)" fg:x="32372163934" fg:w="4355523"/><text x="87.7055%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4,355,523 samples, 0.01%)</title><rect x="87.4555%" y="565" width="0.0118%" height="15" fill="rgb(240,216,3)" fg:x="32372163934" fg:w="4355523"/><text x="87.7055%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4,355,523 samples, 0.01%)</title><rect x="87.4555%" y="549" width="0.0118%" height="15" fill="rgb(232,218,17)" fg:x="32372163934" fg:w="4355523"/><text x="87.7055%" y="559.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (4,270,702 samples, 0.01%)</title><rect x="87.4673%" y="661" width="0.0115%" height="15" fill="rgb(229,163,45)" fg:x="32376519457" fg:w="4270702"/><text x="87.7173%" y="671.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains_or_add (4,270,702 samples, 0.01%)</title><rect x="87.4673%" y="645" width="0.0115%" height="15" fill="rgb(231,110,42)" fg:x="32376519457" fg:w="4270702"/><text x="87.7173%" y="655.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains (4,270,702 samples, 0.01%)</title><rect x="87.4673%" y="629" width="0.0115%" height="15" fill="rgb(208,170,48)" fg:x="32376519457" fg:w="4270702"/><text x="87.7173%" y="639.50"></text></g><g><title>mws5::search::best_pos (21,311,126 samples, 0.06%)</title><rect x="87.4436%" y="709" width="0.0576%" height="15" fill="rgb(239,116,25)" fg:x="32367754655" fg:w="21311126"/><text x="87.6936%" y="719.50"></text></g><g><title>mws5::dict::Dict::match_count (16,901,847 samples, 0.05%)</title><rect x="87.4555%" y="693" width="0.0457%" height="15" fill="rgb(219,200,50)" fg:x="32372163934" fg:w="16901847"/><text x="87.7055%" y="703.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (16,901,847 samples, 0.05%)</title><rect x="87.4555%" y="677" width="0.0457%" height="15" fill="rgb(245,200,0)" fg:x="32372163934" fg:w="16901847"/><text x="87.7055%" y="687.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::increment (8,275,622 samples, 0.02%)</title><rect x="87.4788%" y="661" width="0.0224%" height="15" fill="rgb(245,119,33)" fg:x="32380790159" fg:w="8275622"/><text x="87.7288%" y="671.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::try_reset (3,972,456 samples, 0.01%)</title><rect x="87.4904%" y="645" width="0.0107%" height="15" fill="rgb(231,125,12)" fg:x="32385093325" fg:w="3972456"/><text x="87.7404%" y="655.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::reset (3,972,456 samples, 0.01%)</title><rect x="87.4904%" y="629" width="0.0107%" height="15" fill="rgb(216,96,41)" fg:x="32385093325" fg:w="3972456"/><text x="87.7404%" y="639.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset (3,972,456 samples, 0.01%)</title><rect x="87.4904%" y="613" width="0.0107%" height="15" fill="rgb(248,43,45)" fg:x="32385093325" fg:w="3972456"/><text x="87.7404%" y="623.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (3,972,456 samples, 0.01%)</title><rect x="87.4904%" y="597" width="0.0107%" height="15" fill="rgb(217,222,7)" fg:x="32385093325" fg:w="3972456"/><text x="87.7404%" y="607.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset::_{{closure}} (3,972,456 samples, 0.01%)</title><rect x="87.4904%" y="581" width="0.0107%" height="15" fill="rgb(233,28,6)" fg:x="32385093325" fg:w="3972456"/><text x="87.7404%" y="591.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset (3,972,456 samples, 0.01%)</title><rect x="87.4904%" y="565" width="0.0107%" height="15" fill="rgb(231,218,15)" fg:x="32385093325" fg:w="3972456"/><text x="87.7404%" y="575.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (3,972,456 samples, 0.01%)</title><rect x="87.4904%" y="549" width="0.0107%" height="15" fill="rgb(226,171,48)" fg:x="32385093325" fg:w="3972456"/><text x="87.7404%" y="559.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset::_{{closure}} (3,972,456 samples, 0.01%)</title><rect x="87.4904%" y="533" width="0.0107%" height="15" fill="rgb(235,201,9)" fg:x="32385093325" fg:w="3972456"/><text x="87.7404%" y="543.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (4,319,180 samples, 0.01%)</title><rect x="87.5012%" y="661" width="0.0117%" height="15" fill="rgb(217,80,15)" fg:x="32389065781" fg:w="4319180"/><text x="87.7512%" y="671.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (4,319,180 samples, 0.01%)</title><rect x="87.5012%" y="645" width="0.0117%" height="15" fill="rgb(219,152,8)" fg:x="32389065781" fg:w="4319180"/><text x="87.7512%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (4,319,180 samples, 0.01%)</title><rect x="87.5012%" y="629" width="0.0117%" height="15" fill="rgb(243,107,38)" fg:x="32389065781" fg:w="4319180"/><text x="87.7512%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (4,319,180 samples, 0.01%)</title><rect x="87.5012%" y="613" width="0.0117%" height="15" fill="rgb(231,17,5)" fg:x="32389065781" fg:w="4319180"/><text x="87.7512%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (4,319,180 samples, 0.01%)</title><rect x="87.5012%" y="597" width="0.0117%" height="15" fill="rgb(209,25,54)" fg:x="32389065781" fg:w="4319180"/><text x="87.7512%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (4,319,180 samples, 0.01%)</title><rect x="87.5012%" y="581" width="0.0117%" height="15" fill="rgb(219,0,2)" fg:x="32389065781" fg:w="4319180"/><text x="87.7512%" y="591.50"></text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (283,526,664 samples, 0.77%)</title><rect x="86.7700%" y="725" width="0.7660%" height="15" fill="rgb(246,9,5)" fg:x="32118436235" fg:w="283526664"/><text x="87.0200%" y="735.50"></text></g><g><title>mws5::search::cross_fit (12,897,118 samples, 0.03%)</title><rect x="87.5012%" y="709" width="0.0348%" height="15" fill="rgb(226,159,4)" fg:x="32389065781" fg:w="12897118"/><text x="87.7512%" y="719.50"></text></g><g><title>mws5::dict::Dict::is_fit (12,897,118 samples, 0.03%)</title><rect x="87.5012%" y="693" width="0.0348%" height="15" fill="rgb(219,175,34)" fg:x="32389065781" fg:w="12897118"/><text x="87.7512%" y="703.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (12,897,118 samples, 0.03%)</title><rect x="87.5012%" y="677" width="0.0348%" height="15" fill="rgb(236,10,46)" fg:x="32389065781" fg:w="12897118"/><text x="87.7512%" y="687.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::increment (8,577,938 samples, 0.02%)</title><rect x="87.5128%" y="661" width="0.0232%" height="15" fill="rgb(240,211,16)" fg:x="32393384961" fg:w="8577938"/><text x="87.7628%" y="671.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::hash_key (8,577,938 samples, 0.02%)</title><rect x="87.5128%" y="645" width="0.0232%" height="15" fill="rgb(205,3,43)" fg:x="32393384961" fg:w="8577938"/><text x="87.7628%" y="655.50"></text></g><g><title>&lt;caches::lfu::DefaultKeyHasher&lt;K&gt; as caches::lfu::KeyHasher&lt;K&gt;&gt;::hash_key (4,387,338 samples, 0.01%)</title><rect x="87.5242%" y="629" width="0.0119%" height="15" fill="rgb(245,7,22)" fg:x="32397575561" fg:w="4387338"/><text x="87.7742%" y="639.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (4,387,338 samples, 0.01%)</title><rect x="87.5242%" y="613" width="0.0119%" height="15" fill="rgb(239,132,32)" fg:x="32397575561" fg:w="4387338"/><text x="87.7742%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4,387,338 samples, 0.01%)</title><rect x="87.5242%" y="597" width="0.0119%" height="15" fill="rgb(228,202,34)" fg:x="32397575561" fg:w="4387338"/><text x="87.7742%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4,387,338 samples, 0.01%)</title><rect x="87.5242%" y="581" width="0.0119%" height="15" fill="rgb(254,200,22)" fg:x="32397575561" fg:w="4387338"/><text x="87.7742%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4,387,338 samples, 0.01%)</title><rect x="87.5242%" y="565" width="0.0119%" height="15" fill="rgb(219,10,39)" fg:x="32397575561" fg:w="4387338"/><text x="87.7742%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16,790,330 samples, 0.05%)</title><rect x="87.5360%" y="709" width="0.0454%" height="15" fill="rgb(226,210,39)" fg:x="32401962899" fg:w="16790330"/><text x="87.7860%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (12,536,260 samples, 0.03%)</title><rect x="87.5475%" y="693" width="0.0339%" height="15" fill="rgb(208,219,16)" fg:x="32406216969" fg:w="12536260"/><text x="87.7975%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (12,370,165 samples, 0.03%)</title><rect x="87.5814%" y="709" width="0.0334%" height="15" fill="rgb(216,158,51)" fg:x="32418753229" fg:w="12370165"/><text x="87.8314%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12,370,165 samples, 0.03%)</title><rect x="87.5814%" y="693" width="0.0334%" height="15" fill="rgb(233,14,44)" fg:x="32418753229" fg:w="12370165"/><text x="87.8314%" y="703.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4,162,376 samples, 0.01%)</title><rect x="87.6148%" y="709" width="0.0112%" height="15" fill="rgb(237,97,39)" fg:x="32431123394" fg:w="4162376"/><text x="87.8648%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4,162,376 samples, 0.01%)</title><rect x="87.6148%" y="693" width="0.0112%" height="15" fill="rgb(218,198,43)" fg:x="32431123394" fg:w="4162376"/><text x="87.8648%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (4,162,376 samples, 0.01%)</title><rect x="87.6148%" y="677" width="0.0112%" height="15" fill="rgb(231,104,20)" fg:x="32431123394" fg:w="4162376"/><text x="87.8648%" y="687.50"></text></g><g><title>core::cmp::PartialEq::ne (4,199,590 samples, 0.01%)</title><rect x="87.6260%" y="645" width="0.0113%" height="15" fill="rgb(254,36,13)" fg:x="32435285770" fg:w="4199590"/><text x="87.8760%" y="655.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4,199,590 samples, 0.01%)</title><rect x="87.6260%" y="629" width="0.0113%" height="15" fill="rgb(248,14,50)" fg:x="32435285770" fg:w="4199590"/><text x="87.8760%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (8,352,566 samples, 0.02%)</title><rect x="87.6260%" y="709" width="0.0226%" height="15" fill="rgb(217,107,29)" fg:x="32435285770" fg:w="8352566"/><text x="87.8760%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (8,352,566 samples, 0.02%)</title><rect x="87.6260%" y="693" width="0.0226%" height="15" fill="rgb(251,169,33)" fg:x="32435285770" fg:w="8352566"/><text x="87.8760%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (8,352,566 samples, 0.02%)</title><rect x="87.6260%" y="677" width="0.0226%" height="15" fill="rgb(217,108,32)" fg:x="32435285770" fg:w="8352566"/><text x="87.8760%" y="687.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,352,566 samples, 0.02%)</title><rect x="87.6260%" y="661" width="0.0226%" height="15" fill="rgb(219,66,42)" fg:x="32435285770" fg:w="8352566"/><text x="87.8760%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt; (4,152,976 samples, 0.01%)</title><rect x="87.6374%" y="645" width="0.0112%" height="15" fill="rgb(206,180,7)" fg:x="32439485360" fg:w="4152976"/><text x="87.8874%" y="655.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,152,976 samples, 0.01%)</title><rect x="87.6374%" y="629" width="0.0112%" height="15" fill="rgb(208,226,31)" fg:x="32439485360" fg:w="4152976"/><text x="87.8874%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(usize,usize),alloc::alloc::Global&gt;&gt; (4,152,976 samples, 0.01%)</title><rect x="87.6374%" y="613" width="0.0112%" height="15" fill="rgb(218,26,49)" fg:x="32439485360" fg:w="4152976"/><text x="87.8874%" y="623.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,152,976 samples, 0.01%)</title><rect x="87.6374%" y="597" width="0.0112%" height="15" fill="rgb(233,197,48)" fg:x="32439485360" fg:w="4152976"/><text x="87.8874%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (4,152,976 samples, 0.01%)</title><rect x="87.6374%" y="581" width="0.0112%" height="15" fill="rgb(252,181,51)" fg:x="32439485360" fg:w="4152976"/><text x="87.8874%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,152,976 samples, 0.01%)</title><rect x="87.6374%" y="565" width="0.0112%" height="15" fill="rgb(253,90,19)" fg:x="32439485360" fg:w="4152976"/><text x="87.8874%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,152,976 samples, 0.01%)</title><rect x="87.6374%" y="549" width="0.0112%" height="15" fill="rgb(215,171,30)" fg:x="32439485360" fg:w="4152976"/><text x="87.8874%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,152,976 samples, 0.01%)</title><rect x="87.6374%" y="533" width="0.0112%" height="15" fill="rgb(214,222,9)" fg:x="32439485360" fg:w="4152976"/><text x="87.8874%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (4,152,976 samples, 0.01%)</title><rect x="87.6374%" y="517" width="0.0112%" height="15" fill="rgb(223,3,22)" fg:x="32439485360" fg:w="4152976"/><text x="87.8874%" y="527.50"></text></g><g><title>__rustc::__rdl_dealloc (4,152,976 samples, 0.01%)</title><rect x="87.6374%" y="501" width="0.0112%" height="15" fill="rgb(225,196,46)" fg:x="32439485360" fg:w="4152976"/><text x="87.8874%" y="511.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4,152,976 samples, 0.01%)</title><rect x="87.6374%" y="485" width="0.0112%" height="15" fill="rgb(209,110,37)" fg:x="32439485360" fg:w="4152976"/><text x="87.8874%" y="495.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains_or_add (4,151,687 samples, 0.01%)</title><rect x="87.6598%" y="661" width="0.0112%" height="15" fill="rgb(249,89,12)" fg:x="32447799776" fg:w="4151687"/><text x="87.9098%" y="671.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains (4,151,687 samples, 0.01%)</title><rect x="87.6598%" y="645" width="0.0112%" height="15" fill="rgb(226,27,33)" fg:x="32447799776" fg:w="4151687"/><text x="87.9098%" y="655.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4,151,687 samples, 0.01%)</title><rect x="87.6598%" y="629" width="0.0112%" height="15" fill="rgb(213,82,22)" fg:x="32447799776" fg:w="4151687"/><text x="87.9098%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4,151,687 samples, 0.01%)</title><rect x="87.6598%" y="613" width="0.0112%" height="15" fill="rgb(248,140,0)" fg:x="32447799776" fg:w="4151687"/><text x="87.9098%" y="623.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (8,026,457 samples, 0.02%)</title><rect x="87.6598%" y="677" width="0.0217%" height="15" fill="rgb(228,106,3)" fg:x="32447799776" fg:w="8026457"/><text x="87.9098%" y="687.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (3,874,770 samples, 0.01%)</title><rect x="87.6711%" y="661" width="0.0105%" height="15" fill="rgb(209,23,37)" fg:x="32451951463" fg:w="3874770"/><text x="87.9211%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (3,874,770 samples, 0.01%)</title><rect x="87.6711%" y="645" width="0.0105%" height="15" fill="rgb(241,93,50)" fg:x="32451951463" fg:w="3874770"/><text x="87.9211%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (3,874,770 samples, 0.01%)</title><rect x="87.6711%" y="629" width="0.0105%" height="15" fill="rgb(253,46,43)" fg:x="32451951463" fg:w="3874770"/><text x="87.9211%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (3,874,770 samples, 0.01%)</title><rect x="87.6711%" y="613" width="0.0105%" height="15" fill="rgb(226,206,43)" fg:x="32451951463" fg:w="3874770"/><text x="87.9211%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (3,874,770 samples, 0.01%)</title><rect x="87.6711%" y="597" width="0.0105%" height="15" fill="rgb(217,54,7)" fg:x="32451951463" fg:w="3874770"/><text x="87.9211%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3,874,770 samples, 0.01%)</title><rect x="87.6711%" y="581" width="0.0105%" height="15" fill="rgb(223,5,52)" fg:x="32451951463" fg:w="3874770"/><text x="87.9211%" y="591.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (3,874,770 samples, 0.01%)</title><rect x="87.6711%" y="565" width="0.0105%" height="15" fill="rgb(206,52,46)" fg:x="32451951463" fg:w="3874770"/><text x="87.9211%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3,874,770 samples, 0.01%)</title><rect x="87.6711%" y="549" width="0.0105%" height="15" fill="rgb(253,136,11)" fg:x="32451951463" fg:w="3874770"/><text x="87.9211%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3,874,770 samples, 0.01%)</title><rect x="87.6711%" y="533" width="0.0105%" height="15" fill="rgb(208,106,33)" fg:x="32451951463" fg:w="3874770"/><text x="87.9211%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3,874,770 samples, 0.01%)</title><rect x="87.6711%" y="517" width="0.0105%" height="15" fill="rgb(206,54,4)" fg:x="32451951463" fg:w="3874770"/><text x="87.9211%" y="527.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::add (4,380,895 samples, 0.01%)</title><rect x="87.6934%" y="645" width="0.0118%" height="15" fill="rgb(213,3,15)" fg:x="32460209301" fg:w="4380895"/><text x="87.9434%" y="655.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains_or_add (13,102,036 samples, 0.04%)</title><rect x="87.6815%" y="661" width="0.0354%" height="15" fill="rgb(252,211,39)" fg:x="32455826233" fg:w="13102036"/><text x="87.9315%" y="671.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains (4,338,073 samples, 0.01%)</title><rect x="87.7052%" y="645" width="0.0117%" height="15" fill="rgb(223,6,36)" fg:x="32464590196" fg:w="4338073"/><text x="87.9552%" y="655.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::is_set (4,338,073 samples, 0.01%)</title><rect x="87.7052%" y="629" width="0.0117%" height="15" fill="rgb(252,169,45)" fg:x="32464590196" fg:w="4338073"/><text x="87.9552%" y="639.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (17,360,156 samples, 0.05%)</title><rect x="87.6815%" y="677" width="0.0469%" height="15" fill="rgb(212,48,26)" fg:x="32455826233" fg:w="17360156"/><text x="87.9315%" y="687.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (4,258,120 samples, 0.01%)</title><rect x="87.7169%" y="661" width="0.0115%" height="15" fill="rgb(251,102,48)" fg:x="32468928269" fg:w="4258120"/><text x="87.9669%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (4,258,120 samples, 0.01%)</title><rect x="87.7169%" y="645" width="0.0115%" height="15" fill="rgb(243,208,16)" fg:x="32468928269" fg:w="4258120"/><text x="87.9669%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (4,258,120 samples, 0.01%)</title><rect x="87.7169%" y="629" width="0.0115%" height="15" fill="rgb(219,96,24)" fg:x="32468928269" fg:w="4258120"/><text x="87.9669%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (4,258,120 samples, 0.01%)</title><rect x="87.7169%" y="613" width="0.0115%" height="15" fill="rgb(219,33,29)" fg:x="32468928269" fg:w="4258120"/><text x="87.9669%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (4,258,120 samples, 0.01%)</title><rect x="87.7169%" y="597" width="0.0115%" height="15" fill="rgb(223,176,5)" fg:x="32468928269" fg:w="4258120"/><text x="87.9669%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,258,120 samples, 0.01%)</title><rect x="87.7169%" y="581" width="0.0115%" height="15" fill="rgb(228,140,14)" fg:x="32468928269" fg:w="4258120"/><text x="87.9669%" y="591.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (4,258,120 samples, 0.01%)</title><rect x="87.7169%" y="565" width="0.0115%" height="15" fill="rgb(217,179,31)" fg:x="32468928269" fg:w="4258120"/><text x="87.9669%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4,258,120 samples, 0.01%)</title><rect x="87.7169%" y="549" width="0.0115%" height="15" fill="rgb(230,9,30)" fg:x="32468928269" fg:w="4258120"/><text x="87.9669%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4,258,120 samples, 0.01%)</title><rect x="87.7169%" y="533" width="0.0115%" height="15" fill="rgb(230,136,20)" fg:x="32468928269" fg:w="4258120"/><text x="87.9669%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4,258,120 samples, 0.01%)</title><rect x="87.7169%" y="517" width="0.0115%" height="15" fill="rgb(215,210,22)" fg:x="32468928269" fg:w="4258120"/><text x="87.9669%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4,258,120 samples, 0.01%)</title><rect x="87.7169%" y="501" width="0.0115%" height="15" fill="rgb(218,43,5)" fg:x="32468928269" fg:w="4258120"/><text x="87.9669%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,197,649 samples, 0.01%)</title><rect x="87.8412%" y="565" width="0.0113%" height="15" fill="rgb(216,11,5)" fg:x="32514948476" fg:w="4197649"/><text x="88.0912%" y="575.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (29,198,412 samples, 0.08%)</title><rect x="87.7973%" y="629" width="0.0789%" height="15" fill="rgb(209,82,29)" fg:x="32498691569" fg:w="29198412"/><text x="88.0473%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (29,198,412 samples, 0.08%)</title><rect x="87.7973%" y="613" width="0.0789%" height="15" fill="rgb(244,115,12)" fg:x="32498691569" fg:w="29198412"/><text x="88.0473%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (29,198,412 samples, 0.08%)</title><rect x="87.7973%" y="597" width="0.0789%" height="15" fill="rgb(222,82,18)" fg:x="32498691569" fg:w="29198412"/><text x="88.0473%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20,618,594 samples, 0.06%)</title><rect x="87.8205%" y="581" width="0.0557%" height="15" fill="rgb(249,227,8)" fg:x="32507271387" fg:w="20618594"/><text x="88.0705%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8,743,856 samples, 0.02%)</title><rect x="87.8526%" y="565" width="0.0236%" height="15" fill="rgb(253,141,45)" fg:x="32519146125" fg:w="8743856"/><text x="88.1026%" y="575.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::hash_key (38,660,172 samples, 0.10%)</title><rect x="87.7855%" y="661" width="0.1044%" height="15" fill="rgb(234,184,4)" fg:x="32494331091" fg:w="38660172"/><text x="88.0355%" y="671.50"></text></g><g><title>&lt;caches::lfu::DefaultKeyHasher&lt;K&gt; as caches::lfu::KeyHasher&lt;K&gt;&gt;::hash_key (34,299,694 samples, 0.09%)</title><rect x="87.7973%" y="645" width="0.0927%" height="15" fill="rgb(218,194,23)" fg:x="32498691569" fg:w="34299694"/><text x="88.0473%" y="655.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (5,101,282 samples, 0.01%)</title><rect x="87.8762%" y="629" width="0.0138%" height="15" fill="rgb(235,66,41)" fg:x="32527889981" fg:w="5101282"/><text x="88.1262%" y="639.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5,101,282 samples, 0.01%)</title><rect x="87.8762%" y="613" width="0.0138%" height="15" fill="rgb(245,217,1)" fg:x="32527889981" fg:w="5101282"/><text x="88.1262%" y="623.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (5,101,282 samples, 0.01%)</title><rect x="87.8762%" y="597" width="0.0138%" height="15" fill="rgb(229,91,1)" fg:x="32527889981" fg:w="5101282"/><text x="88.1262%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (5,101,282 samples, 0.01%)</title><rect x="87.8762%" y="581" width="0.0138%" height="15" fill="rgb(207,101,30)" fg:x="32527889981" fg:w="5101282"/><text x="88.1262%" y="591.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::try_reset (8,156,637 samples, 0.02%)</title><rect x="87.8900%" y="661" width="0.0220%" height="15" fill="rgb(223,82,49)" fg:x="32532991263" fg:w="8156637"/><text x="88.1400%" y="671.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::set (4,357,176 samples, 0.01%)</title><rect x="87.9120%" y="629" width="0.0118%" height="15" fill="rgb(218,167,17)" fg:x="32541147900" fg:w="4357176"/><text x="88.1620%" y="639.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (106,077,686 samples, 0.29%)</title><rect x="87.6486%" y="693" width="0.2866%" height="15" fill="rgb(208,103,14)" fg:x="32443638336" fg:w="106077686"/><text x="87.8986%" y="703.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::increment (76,529,633 samples, 0.21%)</title><rect x="87.7284%" y="677" width="0.2067%" height="15" fill="rgb(238,20,8)" fg:x="32473186389" fg:w="76529633"/><text x="87.9784%" y="687.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains_or_add (8,568,122 samples, 0.02%)</title><rect x="87.9120%" y="661" width="0.0231%" height="15" fill="rgb(218,80,54)" fg:x="32541147900" fg:w="8568122"/><text x="88.1620%" y="671.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::add (8,568,122 samples, 0.02%)</title><rect x="87.9120%" y="645" width="0.0231%" height="15" fill="rgb(240,144,17)" fg:x="32541147900" fg:w="8568122"/><text x="88.1620%" y="655.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4,210,946 samples, 0.01%)</title><rect x="87.9238%" y="629" width="0.0114%" height="15" fill="rgb(245,27,50)" fg:x="32545505076" fg:w="4210946"/><text x="88.1738%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4,210,946 samples, 0.01%)</title><rect x="87.9238%" y="613" width="0.0114%" height="15" fill="rgb(251,51,7)" fg:x="32545505076" fg:w="4210946"/><text x="88.1738%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (12,327,772 samples, 0.03%)</title><rect x="87.9352%" y="693" width="0.0333%" height="15" fill="rgb(245,217,29)" fg:x="32549716022" fg:w="12327772"/><text x="88.1852%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (12,327,772 samples, 0.03%)</title><rect x="87.9352%" y="677" width="0.0333%" height="15" fill="rgb(221,176,29)" fg:x="32549716022" fg:w="12327772"/><text x="88.1852%" y="687.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (12,327,772 samples, 0.03%)</title><rect x="87.9352%" y="661" width="0.0333%" height="15" fill="rgb(212,180,24)" fg:x="32549716022" fg:w="12327772"/><text x="88.1852%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,327,772 samples, 0.03%)</title><rect x="87.9352%" y="645" width="0.0333%" height="15" fill="rgb(254,24,2)" fg:x="32549716022" fg:w="12327772"/><text x="88.1852%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,327,772 samples, 0.03%)</title><rect x="87.9352%" y="629" width="0.0333%" height="15" fill="rgb(230,100,2)" fg:x="32549716022" fg:w="12327772"/><text x="88.1852%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,327,772 samples, 0.03%)</title><rect x="87.9352%" y="613" width="0.0333%" height="15" fill="rgb(219,142,25)" fg:x="32549716022" fg:w="12327772"/><text x="88.1852%" y="623.50"></text></g><g><title>core::iter::adapters::copied::copy_fold::_{{closure}} (4,235,512 samples, 0.01%)</title><rect x="87.9570%" y="597" width="0.0114%" height="15" fill="rgb(240,73,43)" fg:x="32557808282" fg:w="4235512"/><text x="88.2070%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (4,235,512 samples, 0.01%)</title><rect x="87.9570%" y="581" width="0.0114%" height="15" fill="rgb(214,114,15)" fg:x="32557808282" fg:w="4235512"/><text x="88.2070%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::_{{closure}} (4,235,512 samples, 0.01%)</title><rect x="87.9570%" y="565" width="0.0114%" height="15" fill="rgb(207,130,4)" fg:x="32557808282" fg:w="4235512"/><text x="88.2070%" y="575.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (4,235,512 samples, 0.01%)</title><rect x="87.9570%" y="549" width="0.0114%" height="15" fill="rgb(221,25,40)" fg:x="32557808282" fg:w="4235512"/><text x="88.2070%" y="559.50"></text></g><g><title>mws5::words::Word::is_fit (4,235,512 samples, 0.01%)</title><rect x="87.9570%" y="533" width="0.0114%" height="15" fill="rgb(241,184,7)" fg:x="32557808282" fg:w="4235512"/><text x="88.2070%" y="543.50"></text></g><g><title>mws5::dict::Dict::match_count (122,674,627 samples, 0.33%)</title><rect x="87.6486%" y="709" width="0.3314%" height="15" fill="rgb(235,159,4)" fg:x="32443638336" fg:w="122674627"/><text x="87.8986%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;mws5::words::Word,usize&gt;&gt;&gt; (4,269,169 samples, 0.01%)</title><rect x="87.9685%" y="693" width="0.0115%" height="15" fill="rgb(214,87,48)" fg:x="32562043794" fg:w="4269169"/><text x="88.2185%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (4,269,169 samples, 0.01%)</title><rect x="87.9685%" y="677" width="0.0115%" height="15" fill="rgb(246,198,24)" fg:x="32562043794" fg:w="4269169"/><text x="88.2185%" y="687.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (4,269,169 samples, 0.01%)</title><rect x="87.9685%" y="661" width="0.0115%" height="15" fill="rgb(209,66,40)" fg:x="32562043794" fg:w="4269169"/><text x="88.2185%" y="671.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4,269,169 samples, 0.01%)</title><rect x="87.9685%" y="645" width="0.0115%" height="15" fill="rgb(233,147,39)" fg:x="32562043794" fg:w="4269169"/><text x="88.2185%" y="655.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4,269,169 samples, 0.01%)</title><rect x="87.9685%" y="629" width="0.0115%" height="15" fill="rgb(231,145,52)" fg:x="32562043794" fg:w="4269169"/><text x="88.2185%" y="639.50"></text></g><g><title>core::mem::replace (4,269,169 samples, 0.01%)</title><rect x="87.9685%" y="613" width="0.0115%" height="15" fill="rgb(206,20,26)" fg:x="32562043794" fg:w="4269169"/><text x="88.2185%" y="623.50"></text></g><g><title>mws5::search::best_pos (173,126,844 samples, 0.47%)</title><rect x="87.5360%" y="725" width="0.4677%" height="15" fill="rgb(238,220,4)" fg:x="32401962899" fg:w="173126844"/><text x="87.7860%" y="735.50"></text></g><g><title>mws5::squares::Square::get_pos (8,776,780 samples, 0.02%)</title><rect x="87.9800%" y="709" width="0.0237%" height="15" fill="rgb(252,195,42)" fg:x="32566312963" fg:w="8776780"/><text x="88.2300%" y="719.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::detach (4,190,382 samples, 0.01%)</title><rect x="88.1483%" y="645" width="0.0113%" height="15" fill="rgb(209,10,6)" fg:x="32628600727" fg:w="4190382"/><text x="88.3983%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4,313,118 samples, 0.01%)</title><rect x="88.1811%" y="517" width="0.0117%" height="15" fill="rgb(229,3,52)" fg:x="32640754884" fg:w="4313118"/><text x="88.4311%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,313,118 samples, 0.01%)</title><rect x="88.1811%" y="501" width="0.0117%" height="15" fill="rgb(253,49,37)" fg:x="32640754884" fg:w="4313118"/><text x="88.4311%" y="511.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (20,669,810 samples, 0.06%)</title><rect x="88.1596%" y="565" width="0.0558%" height="15" fill="rgb(240,103,49)" fg:x="32632791109" fg:w="20669810"/><text x="88.4096%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (20,669,810 samples, 0.06%)</title><rect x="88.1596%" y="549" width="0.0558%" height="15" fill="rgb(250,182,30)" fg:x="32632791109" fg:w="20669810"/><text x="88.4096%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (20,669,810 samples, 0.06%)</title><rect x="88.1596%" y="533" width="0.0558%" height="15" fill="rgb(248,8,30)" fg:x="32632791109" fg:w="20669810"/><text x="88.4096%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8,392,917 samples, 0.02%)</title><rect x="88.1928%" y="517" width="0.0227%" height="15" fill="rgb(237,120,30)" fg:x="32645068002" fg:w="8392917"/><text x="88.4428%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,322,433 samples, 0.01%)</title><rect x="88.2038%" y="501" width="0.0117%" height="15" fill="rgb(221,146,34)" fg:x="32649138486" fg:w="4322433"/><text x="88.4538%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (25,046,499 samples, 0.07%)</title><rect x="88.1596%" y="597" width="0.0677%" height="15" fill="rgb(242,55,13)" fg:x="32632791109" fg:w="25046499"/><text x="88.4096%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (25,046,499 samples, 0.07%)</title><rect x="88.1596%" y="581" width="0.0677%" height="15" fill="rgb(242,112,31)" fg:x="32632791109" fg:w="25046499"/><text x="88.4096%" y="591.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (4,376,689 samples, 0.01%)</title><rect x="88.2154%" y="565" width="0.0118%" height="15" fill="rgb(249,192,27)" fg:x="32653460919" fg:w="4376689"/><text x="88.4654%" y="575.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4,376,689 samples, 0.01%)</title><rect x="88.2154%" y="549" width="0.0118%" height="15" fill="rgb(208,204,44)" fg:x="32653460919" fg:w="4376689"/><text x="88.4654%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4,376,689 samples, 0.01%)</title><rect x="88.2154%" y="533" width="0.0118%" height="15" fill="rgb(208,93,54)" fg:x="32653460919" fg:w="4376689"/><text x="88.4654%" y="543.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (4,376,689 samples, 0.01%)</title><rect x="88.2154%" y="517" width="0.0118%" height="15" fill="rgb(242,1,31)" fg:x="32653460919" fg:w="4376689"/><text x="88.4654%" y="527.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4,107,582 samples, 0.01%)</title><rect x="88.2387%" y="549" width="0.0111%" height="15" fill="rgb(241,83,25)" fg:x="32662082761" fg:w="4107582"/><text x="88.4887%" y="559.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (4,107,582 samples, 0.01%)</title><rect x="88.2387%" y="533" width="0.0111%" height="15" fill="rgb(205,169,50)" fg:x="32662082761" fg:w="4107582"/><text x="88.4887%" y="543.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (4,107,582 samples, 0.01%)</title><rect x="88.2387%" y="517" width="0.0111%" height="15" fill="rgb(239,186,37)" fg:x="32662082761" fg:w="4107582"/><text x="88.4887%" y="527.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (4,107,582 samples, 0.01%)</title><rect x="88.2387%" y="501" width="0.0111%" height="15" fill="rgb(205,221,10)" fg:x="32662082761" fg:w="4107582"/><text x="88.4887%" y="511.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load (4,200,234 samples, 0.01%)</title><rect x="88.2498%" y="549" width="0.0113%" height="15" fill="rgb(218,196,15)" fg:x="32666190343" fg:w="4200234"/><text x="88.4998%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (4,200,234 samples, 0.01%)</title><rect x="88.2498%" y="533" width="0.0113%" height="15" fill="rgb(218,196,35)" fg:x="32666190343" fg:w="4200234"/><text x="88.4998%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4,200,234 samples, 0.01%)</title><rect x="88.2498%" y="517" width="0.0113%" height="15" fill="rgb(233,63,24)" fg:x="32666190343" fg:w="4200234"/><text x="88.4998%" y="527.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty (8,778,320 samples, 0.02%)</title><rect x="88.2612%" y="549" width="0.0237%" height="15" fill="rgb(225,8,4)" fg:x="32670390577" fg:w="8778320"/><text x="88.5112%" y="559.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (8,778,320 samples, 0.02%)</title><rect x="88.2612%" y="533" width="0.0237%" height="15" fill="rgb(234,105,35)" fg:x="32670390577" fg:w="8778320"/><text x="88.5112%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (8,778,320 samples, 0.02%)</title><rect x="88.2612%" y="517" width="0.0237%" height="15" fill="rgb(236,21,32)" fg:x="32670390577" fg:w="8778320"/><text x="88.5112%" y="527.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (4,269,003 samples, 0.01%)</title><rect x="88.2849%" y="549" width="0.0115%" height="15" fill="rgb(228,109,6)" fg:x="32679168897" fg:w="4269003"/><text x="88.5349%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (3,895,829 samples, 0.01%)</title><rect x="88.2964%" y="549" width="0.0105%" height="15" fill="rgb(229,215,31)" fg:x="32683437900" fg:w="3895829"/><text x="88.5464%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (3,895,829 samples, 0.01%)</title><rect x="88.2964%" y="533" width="0.0105%" height="15" fill="rgb(221,52,54)" fg:x="32683437900" fg:w="3895829"/><text x="88.5464%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (3,895,829 samples, 0.01%)</title><rect x="88.2964%" y="517" width="0.0105%" height="15" fill="rgb(252,129,43)" fg:x="32683437900" fg:w="3895829"/><text x="88.5464%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3,895,829 samples, 0.01%)</title><rect x="88.2964%" y="501" width="0.0105%" height="15" fill="rgb(248,183,27)" fg:x="32683437900" fg:w="3895829"/><text x="88.5464%" y="511.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (71,402,203 samples, 0.19%)</title><rect x="88.1366%" y="677" width="0.1929%" height="15" fill="rgb(250,0,22)" fg:x="32624260896" fg:w="71402203"/><text x="88.3866%" y="687.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (71,402,203 samples, 0.19%)</title><rect x="88.1366%" y="661" width="0.1929%" height="15" fill="rgb(213,166,10)" fg:x="32624260896" fg:w="71402203"/><text x="88.3866%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (62,871,990 samples, 0.17%)</title><rect x="88.1596%" y="645" width="0.1699%" height="15" fill="rgb(207,163,36)" fg:x="32632791109" fg:w="62871990"/><text x="88.4096%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (62,871,990 samples, 0.17%)</title><rect x="88.1596%" y="629" width="0.1699%" height="15" fill="rgb(208,122,22)" fg:x="32632791109" fg:w="62871990"/><text x="88.4096%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (62,871,990 samples, 0.17%)</title><rect x="88.1596%" y="613" width="0.1699%" height="15" fill="rgb(207,104,49)" fg:x="32632791109" fg:w="62871990"/><text x="88.4096%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (37,825,491 samples, 0.10%)</title><rect x="88.2273%" y="597" width="0.1022%" height="15" fill="rgb(248,211,50)" fg:x="32657837608" fg:w="37825491"/><text x="88.4773%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (37,825,491 samples, 0.10%)</title><rect x="88.2273%" y="581" width="0.1022%" height="15" fill="rgb(217,13,45)" fg:x="32657837608" fg:w="37825491"/><text x="88.4773%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (37,825,491 samples, 0.10%)</title><rect x="88.2273%" y="565" width="0.1022%" height="15" fill="rgb(211,216,49)" fg:x="32657837608" fg:w="37825491"/><text x="88.4773%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (8,329,370 samples, 0.02%)</title><rect x="88.3070%" y="549" width="0.0225%" height="15" fill="rgb(221,58,53)" fg:x="32687333729" fg:w="8329370"/><text x="88.5570%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4,405,671 samples, 0.01%)</title><rect x="88.3295%" y="517" width="0.0119%" height="15" fill="rgb(220,112,41)" fg:x="32695663099" fg:w="4405671"/><text x="88.5795%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4,405,671 samples, 0.01%)</title><rect x="88.3295%" y="501" width="0.0119%" height="15" fill="rgb(236,38,28)" fg:x="32695663099" fg:w="4405671"/><text x="88.5795%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12,518,027 samples, 0.03%)</title><rect x="88.3869%" y="501" width="0.0338%" height="15" fill="rgb(227,195,22)" fg:x="32716915824" fg:w="12518027"/><text x="88.6369%" y="511.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (46,312,711 samples, 0.13%)</title><rect x="88.3295%" y="565" width="0.1251%" height="15" fill="rgb(214,55,33)" fg:x="32695663099" fg:w="46312711"/><text x="88.5795%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (46,312,711 samples, 0.13%)</title><rect x="88.3295%" y="549" width="0.1251%" height="15" fill="rgb(248,80,13)" fg:x="32695663099" fg:w="46312711"/><text x="88.5795%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (46,312,711 samples, 0.13%)</title><rect x="88.3295%" y="533" width="0.1251%" height="15" fill="rgb(238,52,6)" fg:x="32695663099" fg:w="46312711"/><text x="88.5795%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (41,907,040 samples, 0.11%)</title><rect x="88.3414%" y="517" width="0.1132%" height="15" fill="rgb(224,198,47)" fg:x="32700068770" fg:w="41907040"/><text x="88.5914%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (12,541,959 samples, 0.03%)</title><rect x="88.4207%" y="501" width="0.0339%" height="15" fill="rgb(233,171,20)" fg:x="32729433851" fg:w="12541959"/><text x="88.6707%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (58,760,087 samples, 0.16%)</title><rect x="88.3295%" y="597" width="0.1587%" height="15" fill="rgb(241,30,25)" fg:x="32695663099" fg:w="58760087"/><text x="88.5795%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (58,760,087 samples, 0.16%)</title><rect x="88.3295%" y="581" width="0.1587%" height="15" fill="rgb(207,171,38)" fg:x="32695663099" fg:w="58760087"/><text x="88.5795%" y="591.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (12,447,376 samples, 0.03%)</title><rect x="88.4546%" y="565" width="0.0336%" height="15" fill="rgb(234,70,1)" fg:x="32741975810" fg:w="12447376"/><text x="88.7046%" y="575.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (12,447,376 samples, 0.03%)</title><rect x="88.4546%" y="549" width="0.0336%" height="15" fill="rgb(232,178,18)" fg:x="32741975810" fg:w="12447376"/><text x="88.7046%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (12,447,376 samples, 0.03%)</title><rect x="88.4546%" y="533" width="0.0336%" height="15" fill="rgb(241,78,40)" fg:x="32741975810" fg:w="12447376"/><text x="88.7046%" y="543.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (12,447,376 samples, 0.03%)</title><rect x="88.4546%" y="517" width="0.0336%" height="15" fill="rgb(222,35,25)" fg:x="32741975810" fg:w="12447376"/><text x="88.7046%" y="527.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (12,974,981 samples, 0.04%)</title><rect x="88.4882%" y="549" width="0.0351%" height="15" fill="rgb(207,92,16)" fg:x="32754423186" fg:w="12974981"/><text x="88.7382%" y="559.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (12,974,981 samples, 0.04%)</title><rect x="88.4882%" y="533" width="0.0351%" height="15" fill="rgb(216,59,51)" fg:x="32754423186" fg:w="12974981"/><text x="88.7382%" y="543.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (4,320,375 samples, 0.01%)</title><rect x="88.5116%" y="517" width="0.0117%" height="15" fill="rgb(213,80,28)" fg:x="32763077792" fg:w="4320375"/><text x="88.7616%" y="527.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (4,320,375 samples, 0.01%)</title><rect x="88.5116%" y="501" width="0.0117%" height="15" fill="rgb(220,93,7)" fg:x="32763077792" fg:w="4320375"/><text x="88.7616%" y="511.50"></text></g><g><title>core::num::nonzero::NonZero&lt;T&gt;::get (4,320,375 samples, 0.01%)</title><rect x="88.5116%" y="485" width="0.0117%" height="15" fill="rgb(225,24,44)" fg:x="32763077792" fg:w="4320375"/><text x="88.7616%" y="495.50"></text></g><g><title>core::intrinsics::likely (4,185,755 samples, 0.01%)</title><rect x="88.5233%" y="549" width="0.0113%" height="15" fill="rgb(243,74,40)" fg:x="32767398167" fg:w="4185755"/><text x="88.7733%" y="559.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty (8,011,278 samples, 0.02%)</title><rect x="88.5346%" y="549" width="0.0216%" height="15" fill="rgb(228,39,7)" fg:x="32771583922" fg:w="8011278"/><text x="88.7846%" y="559.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (8,011,278 samples, 0.02%)</title><rect x="88.5346%" y="533" width="0.0216%" height="15" fill="rgb(227,79,8)" fg:x="32771583922" fg:w="8011278"/><text x="88.7846%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (8,011,278 samples, 0.02%)</title><rect x="88.5346%" y="517" width="0.0216%" height="15" fill="rgb(236,58,11)" fg:x="32771583922" fg:w="8011278"/><text x="88.7846%" y="527.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (91,937,211 samples, 0.25%)</title><rect x="88.3295%" y="661" width="0.2484%" height="15" fill="rgb(249,63,35)" fg:x="32695663099" fg:w="91937211"/><text x="88.5795%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (91,937,211 samples, 0.25%)</title><rect x="88.3295%" y="645" width="0.2484%" height="15" fill="rgb(252,114,16)" fg:x="32695663099" fg:w="91937211"/><text x="88.5795%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (91,937,211 samples, 0.25%)</title><rect x="88.3295%" y="629" width="0.2484%" height="15" fill="rgb(254,151,24)" fg:x="32695663099" fg:w="91937211"/><text x="88.5795%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (91,937,211 samples, 0.25%)</title><rect x="88.3295%" y="613" width="0.2484%" height="15" fill="rgb(253,54,39)" fg:x="32695663099" fg:w="91937211"/><text x="88.5795%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (33,177,124 samples, 0.09%)</title><rect x="88.4882%" y="597" width="0.0896%" height="15" fill="rgb(243,25,45)" fg:x="32754423186" fg:w="33177124"/><text x="88.7382%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (33,177,124 samples, 0.09%)</title><rect x="88.4882%" y="581" width="0.0896%" height="15" fill="rgb(234,134,9)" fg:x="32754423186" fg:w="33177124"/><text x="88.7382%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (33,177,124 samples, 0.09%)</title><rect x="88.4882%" y="565" width="0.0896%" height="15" fill="rgb(227,166,31)" fg:x="32754423186" fg:w="33177124"/><text x="88.7382%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (4,361,302 samples, 0.01%)</title><rect x="88.5661%" y="549" width="0.0118%" height="15" fill="rgb(245,143,41)" fg:x="32783239008" fg:w="4361302"/><text x="88.8161%" y="559.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (96,108,558 samples, 0.26%)</title><rect x="88.3295%" y="677" width="0.2596%" height="15" fill="rgb(238,181,32)" fg:x="32695663099" fg:w="96108558"/><text x="88.5795%" y="687.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::peek_ (4,171,347 samples, 0.01%)</title><rect x="88.5778%" y="661" width="0.0113%" height="15" fill="rgb(224,113,18)" fg:x="32787600310" fg:w="4171347"/><text x="88.8278%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4,171,347 samples, 0.01%)</title><rect x="88.5778%" y="645" width="0.0113%" height="15" fill="rgb(240,229,28)" fg:x="32787600310" fg:w="4171347"/><text x="88.8278%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4,171,347 samples, 0.01%)</title><rect x="88.5778%" y="629" width="0.0113%" height="15" fill="rgb(250,185,3)" fg:x="32787600310" fg:w="4171347"/><text x="88.8278%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4,171,347 samples, 0.01%)</title><rect x="88.5778%" y="613" width="0.0113%" height="15" fill="rgb(212,59,25)" fg:x="32787600310" fg:w="4171347"/><text x="88.8278%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (4,171,347 samples, 0.01%)</title><rect x="88.5778%" y="597" width="0.0113%" height="15" fill="rgb(221,87,20)" fg:x="32787600310" fg:w="4171347"/><text x="88.8278%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,171,347 samples, 0.01%)</title><rect x="88.5778%" y="581" width="0.0113%" height="15" fill="rgb(213,74,28)" fg:x="32787600310" fg:w="4171347"/><text x="88.8278%" y="591.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (4,171,347 samples, 0.01%)</title><rect x="88.5778%" y="565" width="0.0113%" height="15" fill="rgb(224,132,34)" fg:x="32787600310" fg:w="4171347"/><text x="88.8278%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4,171,347 samples, 0.01%)</title><rect x="88.5778%" y="549" width="0.0113%" height="15" fill="rgb(222,101,24)" fg:x="32787600310" fg:w="4171347"/><text x="88.8278%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4,171,347 samples, 0.01%)</title><rect x="88.5778%" y="533" width="0.0113%" height="15" fill="rgb(254,142,4)" fg:x="32787600310" fg:w="4171347"/><text x="88.8278%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8,710,521 samples, 0.02%)</title><rect x="88.5996%" y="581" width="0.0235%" height="15" fill="rgb(230,229,49)" fg:x="32795672270" fg:w="8710521"/><text x="88.8496%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,373,899 samples, 0.01%)</title><rect x="88.6114%" y="565" width="0.0118%" height="15" fill="rgb(238,70,47)" fg:x="32800008892" fg:w="4373899"/><text x="88.8614%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (17,442,338 samples, 0.05%)</title><rect x="88.6232%" y="565" width="0.0471%" height="15" fill="rgb(231,160,17)" fg:x="32804382791" fg:w="17442338"/><text x="88.8732%" y="575.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::hash_key (46,786,854 samples, 0.13%)</title><rect x="88.5996%" y="661" width="0.1264%" height="15" fill="rgb(218,68,53)" fg:x="32795672270" fg:w="46786854"/><text x="88.8496%" y="671.50"></text></g><g><title>&lt;caches::lfu::DefaultKeyHasher&lt;K&gt; as caches::lfu::KeyHasher&lt;K&gt;&gt;::hash_key (46,786,854 samples, 0.13%)</title><rect x="88.5996%" y="645" width="0.1264%" height="15" fill="rgb(236,111,10)" fg:x="32795672270" fg:w="46786854"/><text x="88.8496%" y="655.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (46,786,854 samples, 0.13%)</title><rect x="88.5996%" y="629" width="0.1264%" height="15" fill="rgb(224,34,41)" fg:x="32795672270" fg:w="46786854"/><text x="88.8496%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (46,786,854 samples, 0.13%)</title><rect x="88.5996%" y="613" width="0.1264%" height="15" fill="rgb(241,118,19)" fg:x="32795672270" fg:w="46786854"/><text x="88.8496%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (46,786,854 samples, 0.13%)</title><rect x="88.5996%" y="597" width="0.1264%" height="15" fill="rgb(238,129,25)" fg:x="32795672270" fg:w="46786854"/><text x="88.8496%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (38,076,333 samples, 0.10%)</title><rect x="88.6232%" y="581" width="0.1029%" height="15" fill="rgb(238,22,31)" fg:x="32804382791" fg:w="38076333"/><text x="88.8732%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (20,633,995 samples, 0.06%)</title><rect x="88.6703%" y="565" width="0.0557%" height="15" fill="rgb(222,174,48)" fg:x="32821825129" fg:w="20633995"/><text x="88.9203%" y="575.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,940,384 samples, 0.01%)</title><rect x="88.7260%" y="549" width="0.0106%" height="15" fill="rgb(206,152,40)" fg:x="32842459124" fg:w="3940384"/><text x="88.9760%" y="559.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::try_reset (8,308,362 samples, 0.02%)</title><rect x="88.7260%" y="661" width="0.0224%" height="15" fill="rgb(218,99,54)" fg:x="32842459124" fg:w="8308362"/><text x="88.9760%" y="671.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::reset (8,308,362 samples, 0.02%)</title><rect x="88.7260%" y="645" width="0.0224%" height="15" fill="rgb(220,174,26)" fg:x="32842459124" fg:w="8308362"/><text x="88.9760%" y="655.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset (8,308,362 samples, 0.02%)</title><rect x="88.7260%" y="629" width="0.0224%" height="15" fill="rgb(245,116,9)" fg:x="32842459124" fg:w="8308362"/><text x="88.9760%" y="639.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (8,308,362 samples, 0.02%)</title><rect x="88.7260%" y="613" width="0.0224%" height="15" fill="rgb(209,72,35)" fg:x="32842459124" fg:w="8308362"/><text x="88.9760%" y="623.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset::_{{closure}} (8,308,362 samples, 0.02%)</title><rect x="88.7260%" y="597" width="0.0224%" height="15" fill="rgb(226,126,21)" fg:x="32842459124" fg:w="8308362"/><text x="88.9760%" y="607.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset (8,308,362 samples, 0.02%)</title><rect x="88.7260%" y="581" width="0.0224%" height="15" fill="rgb(227,192,1)" fg:x="32842459124" fg:w="8308362"/><text x="88.9760%" y="591.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (8,308,362 samples, 0.02%)</title><rect x="88.7260%" y="565" width="0.0224%" height="15" fill="rgb(237,180,29)" fg:x="32842459124" fg:w="8308362"/><text x="88.9760%" y="575.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset::_{{closure}} (4,367,978 samples, 0.01%)</title><rect x="88.7367%" y="549" width="0.0118%" height="15" fill="rgb(230,197,35)" fg:x="32846399508" fg:w="4367978"/><text x="88.9867%" y="559.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::increment (63,343,463 samples, 0.17%)</title><rect x="88.5891%" y="677" width="0.1711%" height="15" fill="rgb(246,193,31)" fg:x="32791771657" fg:w="63343463"/><text x="88.8391%" y="687.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains_or_add (4,347,634 samples, 0.01%)</title><rect x="88.7485%" y="661" width="0.0117%" height="15" fill="rgb(241,36,4)" fg:x="32850767486" fg:w="4347634"/><text x="88.9985%" y="671.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::add (4,347,634 samples, 0.01%)</title><rect x="88.7485%" y="645" width="0.0117%" height="15" fill="rgb(241,130,17)" fg:x="32850767486" fg:w="4347634"/><text x="88.9985%" y="655.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::set (4,347,634 samples, 0.01%)</title><rect x="88.7485%" y="629" width="0.0117%" height="15" fill="rgb(206,137,32)" fg:x="32850767486" fg:w="4347634"/><text x="88.9985%" y="639.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (238,757,975 samples, 0.65%)</title><rect x="88.1264%" y="693" width="0.6450%" height="15" fill="rgb(237,228,51)" fg:x="32620511645" fg:w="238757975"/><text x="88.3764%" y="703.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::try_reset (4,154,500 samples, 0.01%)</title><rect x="88.7602%" y="677" width="0.0112%" height="15" fill="rgb(243,6,42)" fg:x="32855115120" fg:w="4154500"/><text x="89.0102%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16,871,001 samples, 0.05%)</title><rect x="88.8174%" y="629" width="0.0456%" height="15" fill="rgb(251,74,28)" fg:x="32876289281" fg:w="16871001"/><text x="89.0674%" y="639.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4,385,314 samples, 0.01%)</title><rect x="88.8512%" y="613" width="0.0118%" height="15" fill="rgb(218,20,49)" fg:x="32888774968" fg:w="4385314"/><text x="89.1012%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (73,585,699 samples, 0.20%)</title><rect x="88.7715%" y="693" width="0.1988%" height="15" fill="rgb(238,28,14)" fg:x="32859269620" fg:w="73585699"/><text x="89.0215%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (73,585,699 samples, 0.20%)</title><rect x="88.7715%" y="677" width="0.1988%" height="15" fill="rgb(229,40,46)" fg:x="32859269620" fg:w="73585699"/><text x="89.0215%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (73,585,699 samples, 0.20%)</title><rect x="88.7715%" y="661" width="0.1988%" height="15" fill="rgb(244,195,20)" fg:x="32859269620" fg:w="73585699"/><text x="89.0215%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (73,585,699 samples, 0.20%)</title><rect x="88.7715%" y="645" width="0.1988%" height="15" fill="rgb(253,56,35)" fg:x="32859269620" fg:w="73585699"/><text x="89.0215%" y="655.50"></text></g><g><title>core::iter::adapters::copied::copy_try_fold::_{{closure}} (39,695,037 samples, 0.11%)</title><rect x="88.8630%" y="629" width="0.1072%" height="15" fill="rgb(210,149,44)" fg:x="32893160282" fg:w="39695037"/><text x="89.1130%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (39,695,037 samples, 0.11%)</title><rect x="88.8630%" y="613" width="0.1072%" height="15" fill="rgb(240,135,12)" fg:x="32893160282" fg:w="39695037"/><text x="89.1130%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (39,695,037 samples, 0.11%)</title><rect x="88.8630%" y="597" width="0.1072%" height="15" fill="rgb(251,24,50)" fg:x="32893160282" fg:w="39695037"/><text x="89.1130%" y="607.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (39,695,037 samples, 0.11%)</title><rect x="88.8630%" y="581" width="0.1072%" height="15" fill="rgb(243,200,47)" fg:x="32893160282" fg:w="39695037"/><text x="89.1130%" y="591.50"></text></g><g><title>mws5::words::Word::is_fit (39,695,037 samples, 0.11%)</title><rect x="88.8630%" y="565" width="0.1072%" height="15" fill="rgb(224,166,26)" fg:x="32893160282" fg:w="39695037"/><text x="89.1130%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (12,687,654 samples, 0.03%)</title><rect x="88.9360%" y="549" width="0.0343%" height="15" fill="rgb(233,0,47)" fg:x="32920167665" fg:w="12687654"/><text x="89.1860%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (12,687,654 samples, 0.03%)</title><rect x="88.9360%" y="533" width="0.0343%" height="15" fill="rgb(253,80,5)" fg:x="32920167665" fg:w="12687654"/><text x="89.1860%" y="543.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12,687,654 samples, 0.03%)</title><rect x="88.9360%" y="517" width="0.0343%" height="15" fill="rgb(214,133,25)" fg:x="32920167665" fg:w="12687654"/><text x="89.1860%" y="527.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (12,687,654 samples, 0.03%)</title><rect x="88.9360%" y="501" width="0.0343%" height="15" fill="rgb(209,27,14)" fg:x="32920167665" fg:w="12687654"/><text x="89.1860%" y="511.50"></text></g><g><title>mws5::dict::Dict::is_fit (362,056,978 samples, 0.98%)</title><rect x="88.0154%" y="709" width="0.9781%" height="15" fill="rgb(219,102,51)" fg:x="32579425579" fg:w="362056978"/><text x="88.2654%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,627,238 samples, 0.02%)</title><rect x="88.9702%" y="693" width="0.0233%" height="15" fill="rgb(237,18,16)" fg:x="32932855319" fg:w="8627238"/><text x="89.2202%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8,627,238 samples, 0.02%)</title><rect x="88.9702%" y="677" width="0.0233%" height="15" fill="rgb(241,85,17)" fg:x="32932855319" fg:w="8627238"/><text x="89.2202%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (8,627,238 samples, 0.02%)</title><rect x="88.9702%" y="661" width="0.0233%" height="15" fill="rgb(236,90,42)" fg:x="32932855319" fg:w="8627238"/><text x="89.2202%" y="671.50"></text></g><g><title>mws5::search::cross_fit::_{{closure}} (8,627,238 samples, 0.02%)</title><rect x="88.9702%" y="645" width="0.0233%" height="15" fill="rgb(249,57,21)" fg:x="32932855319" fg:w="8627238"/><text x="89.2202%" y="655.50"></text></g><g><title>mws5::squares::Square::get_pos (8,627,238 samples, 0.02%)</title><rect x="88.9702%" y="629" width="0.0233%" height="15" fill="rgb(243,12,36)" fg:x="32932855319" fg:w="8627238"/><text x="89.2202%" y="639.50"></text></g><g><title>mws5::search::cross_fit (370,663,829 samples, 1.00%)</title><rect x="88.0037%" y="725" width="1.0014%" height="15" fill="rgb(253,128,47)" fg:x="32575089743" fg:w="370663829"/><text x="88.2537%" y="735.50"></text></g><g><title>mws5::squares::Square::is_transposed (4,271,015 samples, 0.01%)</title><rect x="88.9936%" y="709" width="0.0115%" height="15" fill="rgb(207,33,20)" fg:x="32941482557" fg:w="4271015"/><text x="89.2436%" y="719.50"></text></g><g><title>mws5::words::Word::is_transposed (4,271,015 samples, 0.01%)</title><rect x="88.9936%" y="693" width="0.0115%" height="15" fill="rgb(233,215,35)" fg:x="32941482557" fg:w="4271015"/><text x="89.2436%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,271,015 samples, 0.01%)</title><rect x="88.9936%" y="677" width="0.0115%" height="15" fill="rgb(249,188,52)" fg:x="32941482557" fg:w="4271015"/><text x="89.2436%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (4,271,015 samples, 0.01%)</title><rect x="88.9936%" y="661" width="0.0115%" height="15" fill="rgb(225,12,32)" fg:x="32941482557" fg:w="4271015"/><text x="89.2436%" y="671.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,271,015 samples, 0.01%)</title><rect x="88.9936%" y="645" width="0.0115%" height="15" fill="rgb(247,98,14)" fg:x="32941482557" fg:w="4271015"/><text x="89.2436%" y="655.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (4,271,015 samples, 0.01%)</title><rect x="88.9936%" y="629" width="0.0115%" height="15" fill="rgb(247,219,48)" fg:x="32941482557" fg:w="4271015"/><text x="89.2436%" y="639.50"></text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (2,985,682,184 samples, 8.07%)</title><rect x="80.9706%" y="741" width="8.0660%" height="15" fill="rgb(253,60,48)" fg:x="29971732478" fg:w="2985682184"/><text x="81.2206%" y="751.50">mws5::searc..</text></g><g><title>mws5::squares::Square::set_pos (11,661,090 samples, 0.03%)</title><rect x="89.0051%" y="725" width="0.0315%" height="15" fill="rgb(245,15,52)" fg:x="32945753572" fg:w="11661090"/><text x="89.2551%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4,079,855 samples, 0.01%)</title><rect x="89.1892%" y="709" width="0.0110%" height="15" fill="rgb(220,133,28)" fg:x="33013914904" fg:w="4079855"/><text x="89.4392%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (39,257,578 samples, 0.11%)</title><rect x="89.1060%" y="725" width="0.1061%" height="15" fill="rgb(217,180,4)" fg:x="32983092099" fg:w="39257578"/><text x="89.3560%" y="735.50"></text></g><g><title>core::ptr::write (4,354,918 samples, 0.01%)</title><rect x="89.2003%" y="709" width="0.0118%" height="15" fill="rgb(251,24,1)" fg:x="33017994759" fg:w="4354918"/><text x="89.4503%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (33,321,079 samples, 0.09%)</title><rect x="89.2120%" y="725" width="0.0900%" height="15" fill="rgb(212,185,49)" fg:x="33022349677" fg:w="33321079"/><text x="89.4620%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (33,321,079 samples, 0.09%)</title><rect x="89.2120%" y="709" width="0.0900%" height="15" fill="rgb(215,175,22)" fg:x="33022349677" fg:w="33321079"/><text x="89.4620%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,001,473 samples, 0.01%)</title><rect x="89.2912%" y="693" width="0.0108%" height="15" fill="rgb(250,205,14)" fg:x="33051669283" fg:w="4001473"/><text x="89.5412%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,001,473 samples, 0.01%)</title><rect x="89.2912%" y="677" width="0.0108%" height="15" fill="rgb(225,211,22)" fg:x="33051669283" fg:w="4001473"/><text x="89.5412%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,001,473 samples, 0.01%)</title><rect x="89.2912%" y="661" width="0.0108%" height="15" fill="rgb(251,179,42)" fg:x="33051669283" fg:w="4001473"/><text x="89.5412%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,001,473 samples, 0.01%)</title><rect x="89.2912%" y="645" width="0.0108%" height="15" fill="rgb(208,216,51)" fg:x="33051669283" fg:w="4001473"/><text x="89.5412%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,001,473 samples, 0.01%)</title><rect x="89.2912%" y="629" width="0.0108%" height="15" fill="rgb(235,36,11)" fg:x="33051669283" fg:w="4001473"/><text x="89.5412%" y="639.50"></text></g><g><title>alloc::alloc::alloc (4,001,473 samples, 0.01%)</title><rect x="89.2912%" y="613" width="0.0108%" height="15" fill="rgb(213,189,28)" fg:x="33051669283" fg:w="4001473"/><text x="89.5412%" y="623.50"></text></g><g><title>__rustc::__rdl_alloc (4,001,473 samples, 0.01%)</title><rect x="89.2912%" y="597" width="0.0108%" height="15" fill="rgb(227,203,42)" fg:x="33051669283" fg:w="4001473"/><text x="89.5412%" y="607.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4,001,473 samples, 0.01%)</title><rect x="89.2912%" y="581" width="0.0108%" height="15" fill="rgb(244,72,36)" fg:x="33051669283" fg:w="4001473"/><text x="89.5412%" y="591.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (12,073,132 samples, 0.03%)</title><rect x="89.3020%" y="725" width="0.0326%" height="15" fill="rgb(213,53,17)" fg:x="33055670756" fg:w="12073132"/><text x="89.5520%" y="735.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (12,073,132 samples, 0.03%)</title><rect x="89.3020%" y="709" width="0.0326%" height="15" fill="rgb(207,167,3)" fg:x="33055670756" fg:w="12073132"/><text x="89.5520%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (12,073,132 samples, 0.03%)</title><rect x="89.3020%" y="693" width="0.0326%" height="15" fill="rgb(216,98,30)" fg:x="33055670756" fg:w="12073132"/><text x="89.5520%" y="703.50"></text></g><g><title>core::cmp::PartialEq::ne (12,227,915 samples, 0.03%)</title><rect x="89.3347%" y="661" width="0.0330%" height="15" fill="rgb(236,123,15)" fg:x="33067743888" fg:w="12227915"/><text x="89.5847%" y="671.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (12,227,915 samples, 0.03%)</title><rect x="89.3347%" y="645" width="0.0330%" height="15" fill="rgb(248,81,50)" fg:x="33067743888" fg:w="12227915"/><text x="89.5847%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by::fold::_{{closure}} (12,670,492 samples, 0.03%)</title><rect x="89.3677%" y="661" width="0.0342%" height="15" fill="rgb(214,120,4)" fg:x="33079971803" fg:w="12670492"/><text x="89.6177%" y="671.50"></text></g><g><title>core::cmp::min_by (12,670,492 samples, 0.03%)</title><rect x="89.3677%" y="645" width="0.0342%" height="15" fill="rgb(208,179,34)" fg:x="33079971803" fg:w="12670492"/><text x="89.6177%" y="655.50"></text></g><g><title>core::cmp::Ordering::is_lt (8,297,227 samples, 0.02%)</title><rect x="89.3795%" y="629" width="0.0224%" height="15" fill="rgb(227,140,7)" fg:x="33084345068" fg:w="8297227"/><text x="89.6295%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,324,402 samples, 0.01%)</title><rect x="89.4019%" y="549" width="0.0117%" height="15" fill="rgb(214,22,6)" fg:x="33092642295" fg:w="4324402"/><text x="89.6519%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (4,324,402 samples, 0.01%)</title><rect x="89.4019%" y="533" width="0.0117%" height="15" fill="rgb(207,137,27)" fg:x="33092642295" fg:w="4324402"/><text x="89.6519%" y="543.50"></text></g><g><title>__rustc::__rdl_dealloc (4,324,402 samples, 0.01%)</title><rect x="89.4019%" y="517" width="0.0117%" height="15" fill="rgb(210,8,46)" fg:x="33092642295" fg:w="4324402"/><text x="89.6519%" y="527.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4,324,402 samples, 0.01%)</title><rect x="89.4019%" y="501" width="0.0117%" height="15" fill="rgb(240,16,54)" fg:x="33092642295" fg:w="4324402"/><text x="89.6519%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (37,512,277 samples, 0.10%)</title><rect x="89.3347%" y="725" width="0.1013%" height="15" fill="rgb(211,209,29)" fg:x="33067743888" fg:w="37512277"/><text x="89.5847%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (37,512,277 samples, 0.10%)</title><rect x="89.3347%" y="709" width="0.1013%" height="15" fill="rgb(226,228,24)" fg:x="33067743888" fg:w="37512277"/><text x="89.5847%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (37,512,277 samples, 0.10%)</title><rect x="89.3347%" y="693" width="0.1013%" height="15" fill="rgb(222,84,9)" fg:x="33067743888" fg:w="37512277"/><text x="89.5847%" y="703.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37,512,277 samples, 0.10%)</title><rect x="89.3347%" y="677" width="0.1013%" height="15" fill="rgb(234,203,30)" fg:x="33067743888" fg:w="37512277"/><text x="89.5847%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt; (12,613,870 samples, 0.03%)</title><rect x="89.4019%" y="661" width="0.0341%" height="15" fill="rgb(238,109,14)" fg:x="33092642295" fg:w="12613870"/><text x="89.6519%" y="671.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,613,870 samples, 0.03%)</title><rect x="89.4019%" y="645" width="0.0341%" height="15" fill="rgb(233,206,34)" fg:x="33092642295" fg:w="12613870"/><text x="89.6519%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(usize,usize),alloc::alloc::Global&gt;&gt; (12,613,870 samples, 0.03%)</title><rect x="89.4019%" y="629" width="0.0341%" height="15" fill="rgb(220,167,47)" fg:x="33092642295" fg:w="12613870"/><text x="89.6519%" y="639.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,613,870 samples, 0.03%)</title><rect x="89.4019%" y="613" width="0.0341%" height="15" fill="rgb(238,105,10)" fg:x="33092642295" fg:w="12613870"/><text x="89.6519%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (12,613,870 samples, 0.03%)</title><rect x="89.4019%" y="597" width="0.0341%" height="15" fill="rgb(213,227,17)" fg:x="33092642295" fg:w="12613870"/><text x="89.6519%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,613,870 samples, 0.03%)</title><rect x="89.4019%" y="581" width="0.0341%" height="15" fill="rgb(217,132,38)" fg:x="33092642295" fg:w="12613870"/><text x="89.6519%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (12,613,870 samples, 0.03%)</title><rect x="89.4019%" y="565" width="0.0341%" height="15" fill="rgb(242,146,4)" fg:x="33092642295" fg:w="12613870"/><text x="89.6519%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (8,289,468 samples, 0.02%)</title><rect x="89.4136%" y="549" width="0.0224%" height="15" fill="rgb(212,61,9)" fg:x="33096966697" fg:w="8289468"/><text x="89.6636%" y="559.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::add (4,418,362 samples, 0.01%)</title><rect x="89.4587%" y="661" width="0.0119%" height="15" fill="rgb(247,126,22)" fg:x="33113674668" fg:w="4418362"/><text x="89.7087%" y="671.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4,418,362 samples, 0.01%)</title><rect x="89.4587%" y="645" width="0.0119%" height="15" fill="rgb(220,196,2)" fg:x="33113674668" fg:w="4418362"/><text x="89.7087%" y="655.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4,418,362 samples, 0.01%)</title><rect x="89.4587%" y="629" width="0.0119%" height="15" fill="rgb(208,46,4)" fg:x="33113674668" fg:w="4418362"/><text x="89.7087%" y="639.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains_or_add (12,708,435 samples, 0.03%)</title><rect x="89.4587%" y="677" width="0.0343%" height="15" fill="rgb(252,104,46)" fg:x="33113674668" fg:w="12708435"/><text x="89.7087%" y="687.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains (8,290,073 samples, 0.02%)</title><rect x="89.4707%" y="661" width="0.0224%" height="15" fill="rgb(237,152,48)" fg:x="33118093030" fg:w="8290073"/><text x="89.7207%" y="671.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::is_set (3,968,949 samples, 0.01%)</title><rect x="89.4824%" y="645" width="0.0107%" height="15" fill="rgb(221,59,37)" fg:x="33122414154" fg:w="3968949"/><text x="89.7324%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3,968,949 samples, 0.01%)</title><rect x="89.4824%" y="629" width="0.0107%" height="15" fill="rgb(209,202,51)" fg:x="33122414154" fg:w="3968949"/><text x="89.7324%" y="639.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3,968,949 samples, 0.01%)</title><rect x="89.4824%" y="613" width="0.0107%" height="15" fill="rgb(228,81,30)" fg:x="33122414154" fg:w="3968949"/><text x="89.7324%" y="623.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3,968,949 samples, 0.01%)</title><rect x="89.4824%" y="597" width="0.0107%" height="15" fill="rgb(227,42,39)" fg:x="33122414154" fg:w="3968949"/><text x="89.7324%" y="607.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (17,008,982 samples, 0.05%)</title><rect x="89.4587%" y="693" width="0.0460%" height="15" fill="rgb(221,26,2)" fg:x="33113674668" fg:w="17008982"/><text x="89.7087%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4,300,547 samples, 0.01%)</title><rect x="89.4931%" y="677" width="0.0116%" height="15" fill="rgb(254,61,31)" fg:x="33126383103" fg:w="4300547"/><text x="89.7431%" y="687.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::add (16,867,572 samples, 0.05%)</title><rect x="89.5047%" y="661" width="0.0456%" height="15" fill="rgb(222,173,38)" fg:x="33130683650" fg:w="16867572"/><text x="89.7547%" y="671.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::set (12,585,262 samples, 0.03%)</title><rect x="89.5163%" y="645" width="0.0340%" height="15" fill="rgb(218,50,12)" fg:x="33134965960" fg:w="12585262"/><text x="89.7663%" y="655.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::is_set (16,374,261 samples, 0.04%)</title><rect x="89.6073%" y="645" width="0.0442%" height="15" fill="rgb(223,88,40)" fg:x="33168652772" fg:w="16374261"/><text x="89.8573%" y="655.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains_or_add (71,334,898 samples, 0.19%)</title><rect x="89.5047%" y="677" width="0.1927%" height="15" fill="rgb(237,54,19)" fg:x="33130683650" fg:w="71334898"/><text x="89.7547%" y="687.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains (54,467,326 samples, 0.15%)</title><rect x="89.5503%" y="661" width="0.1471%" height="15" fill="rgb(251,129,25)" fg:x="33147551222" fg:w="54467326"/><text x="89.8003%" y="671.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (16,991,515 samples, 0.05%)</title><rect x="89.6515%" y="645" width="0.0459%" height="15" fill="rgb(238,97,19)" fg:x="33185027033" fg:w="16991515"/><text x="89.9015%" y="655.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (16,991,515 samples, 0.05%)</title><rect x="89.6515%" y="629" width="0.0459%" height="15" fill="rgb(240,169,18)" fg:x="33185027033" fg:w="16991515"/><text x="89.9015%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::lt (4,257,085 samples, 0.01%)</title><rect x="89.6859%" y="613" width="0.0115%" height="15" fill="rgb(230,187,49)" fg:x="33197761463" fg:w="4257085"/><text x="89.9359%" y="623.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::put_or_evict_nonnull (4,331,747 samples, 0.01%)</title><rect x="89.6974%" y="661" width="0.0117%" height="15" fill="rgb(209,44,26)" fg:x="33202018548" fg:w="4331747"/><text x="89.9474%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (4,331,747 samples, 0.01%)</title><rect x="89.6974%" y="645" width="0.0117%" height="15" fill="rgb(244,0,6)" fg:x="33202018548" fg:w="4331747"/><text x="89.9474%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4,331,747 samples, 0.01%)</title><rect x="89.6974%" y="629" width="0.0117%" height="15" fill="rgb(248,18,21)" fg:x="33202018548" fg:w="4331747"/><text x="89.9474%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (4,331,747 samples, 0.01%)</title><rect x="89.6974%" y="613" width="0.0117%" height="15" fill="rgb(245,180,19)" fg:x="33202018548" fg:w="4331747"/><text x="89.9474%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (4,331,747 samples, 0.01%)</title><rect x="89.6974%" y="597" width="0.0117%" height="15" fill="rgb(252,118,36)" fg:x="33202018548" fg:w="4331747"/><text x="89.9474%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (4,331,747 samples, 0.01%)</title><rect x="89.6974%" y="581" width="0.0117%" height="15" fill="rgb(210,224,19)" fg:x="33202018548" fg:w="4331747"/><text x="89.9474%" y="591.50"></text></g><g><title>core::ptr::write (4,331,747 samples, 0.01%)</title><rect x="89.6974%" y="565" width="0.0117%" height="15" fill="rgb(218,30,24)" fg:x="33202018548" fg:w="4331747"/><text x="89.9474%" y="575.50"></text></g><g><title>asm_exc_page_fault (4,331,747 samples, 0.01%)</title><rect x="89.6974%" y="549" width="0.0117%" height="15" fill="rgb(219,75,50)" fg:x="33202018548" fg:w="4331747"/><text x="89.9474%" y="559.50"></text></g><g><title>exc_page_fault (4,331,747 samples, 0.01%)</title><rect x="89.6974%" y="533" width="0.0117%" height="15" fill="rgb(234,72,50)" fg:x="33202018548" fg:w="4331747"/><text x="89.9474%" y="543.50"></text></g><g><title>do_user_addr_fault (4,331,747 samples, 0.01%)</title><rect x="89.6974%" y="517" width="0.0117%" height="15" fill="rgb(219,100,48)" fg:x="33202018548" fg:w="4331747"/><text x="89.9474%" y="527.50"></text></g><g><title>handle_mm_fault (4,331,747 samples, 0.01%)</title><rect x="89.6974%" y="501" width="0.0117%" height="15" fill="rgb(253,5,41)" fg:x="33202018548" fg:w="4331747"/><text x="89.9474%" y="511.50"></text></g><g><title>__handle_mm_fault (4,331,747 samples, 0.01%)</title><rect x="89.6974%" y="485" width="0.0117%" height="15" fill="rgb(247,181,11)" fg:x="33202018548" fg:w="4331747"/><text x="89.9474%" y="495.50"></text></g><g><title>do_anonymous_page (4,331,747 samples, 0.01%)</title><rect x="89.6974%" y="469" width="0.0117%" height="15" fill="rgb(222,223,25)" fg:x="33202018548" fg:w="4331747"/><text x="89.9474%" y="479.50"></text></g><g><title>__mem_cgroup_charge (4,331,747 samples, 0.01%)</title><rect x="89.6974%" y="453" width="0.0117%" height="15" fill="rgb(214,198,28)" fg:x="33202018548" fg:w="4331747"/><text x="89.9474%" y="463.50"></text></g><g><title>get_mem_cgroup_from_mm (4,331,747 samples, 0.01%)</title><rect x="89.6974%" y="437" width="0.0117%" height="15" fill="rgb(230,46,43)" fg:x="33202018548" fg:w="4331747"/><text x="89.9474%" y="447.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (79,964,308 samples, 0.22%)</title><rect x="89.5047%" y="693" width="0.2160%" height="15" fill="rgb(233,65,53)" fg:x="33130683650" fg:w="79964308"/><text x="89.7547%" y="703.50"></text></g><g><title>caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt;::move_to_protected (8,629,410 samples, 0.02%)</title><rect x="89.6974%" y="677" width="0.0233%" height="15" fill="rgb(221,121,27)" fg:x="33202018548" fg:w="8629410"/><text x="89.9474%" y="687.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::remove_and_return_ent (4,297,663 samples, 0.01%)</title><rect x="89.7091%" y="661" width="0.0116%" height="15" fill="rgb(247,70,47)" fg:x="33206350295" fg:w="4297663"/><text x="89.9591%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8,157,116 samples, 0.02%)</title><rect x="89.8442%" y="581" width="0.0220%" height="15" fill="rgb(228,85,35)" fg:x="33256341797" fg:w="8157116"/><text x="90.0942%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12,408,052 samples, 0.03%)</title><rect x="89.8442%" y="597" width="0.0335%" height="15" fill="rgb(209,50,18)" fg:x="33256341797" fg:w="12408052"/><text x="90.0942%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4,250,936 samples, 0.01%)</title><rect x="89.8662%" y="581" width="0.0115%" height="15" fill="rgb(250,19,35)" fg:x="33264498913" fg:w="4250936"/><text x="90.1162%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (29,111,435 samples, 0.08%)</title><rect x="89.9225%" y="581" width="0.0786%" height="15" fill="rgb(253,107,29)" fg:x="33285339710" fg:w="29111435"/><text x="90.1725%" y="591.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (108,067,861 samples, 0.29%)</title><rect x="89.7649%" y="645" width="0.2920%" height="15" fill="rgb(252,179,29)" fg:x="33226998340" fg:w="108067861"/><text x="90.0149%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (108,067,861 samples, 0.29%)</title><rect x="89.7649%" y="629" width="0.2920%" height="15" fill="rgb(238,194,6)" fg:x="33226998340" fg:w="108067861"/><text x="90.0149%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (108,067,861 samples, 0.29%)</title><rect x="89.7649%" y="613" width="0.2920%" height="15" fill="rgb(238,164,29)" fg:x="33226998340" fg:w="108067861"/><text x="90.0149%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (66,316,352 samples, 0.18%)</title><rect x="89.8777%" y="597" width="0.1792%" height="15" fill="rgb(224,25,9)" fg:x="33268749849" fg:w="66316352"/><text x="90.1277%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (20,615,056 samples, 0.06%)</title><rect x="90.0012%" y="581" width="0.0557%" height="15" fill="rgb(244,153,23)" fg:x="33314451145" fg:w="20615056"/><text x="90.2512%" y="591.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::hash_key (116,261,397 samples, 0.31%)</title><rect x="89.7536%" y="677" width="0.3141%" height="15" fill="rgb(212,203,14)" fg:x="33222816659" fg:w="116261397"/><text x="90.0036%" y="687.50"></text></g><g><title>&lt;caches::lfu::DefaultKeyHasher&lt;K&gt; as caches::lfu::KeyHasher&lt;K&gt;&gt;::hash_key (112,079,716 samples, 0.30%)</title><rect x="89.7649%" y="661" width="0.3028%" height="15" fill="rgb(220,164,20)" fg:x="33226998340" fg:w="112079716"/><text x="90.0149%" y="671.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (4,011,855 samples, 0.01%)</title><rect x="90.0568%" y="645" width="0.0108%" height="15" fill="rgb(222,203,48)" fg:x="33335066201" fg:w="4011855"/><text x="90.3068%" y="655.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4,011,855 samples, 0.01%)</title><rect x="90.0568%" y="629" width="0.0108%" height="15" fill="rgb(215,159,22)" fg:x="33335066201" fg:w="4011855"/><text x="90.3068%" y="639.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4,011,855 samples, 0.01%)</title><rect x="90.0568%" y="613" width="0.0108%" height="15" fill="rgb(216,183,47)" fg:x="33335066201" fg:w="4011855"/><text x="90.3068%" y="623.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (4,011,855 samples, 0.01%)</title><rect x="90.0568%" y="597" width="0.0108%" height="15" fill="rgb(229,195,25)" fg:x="33335066201" fg:w="4011855"/><text x="90.3068%" y="607.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,368,033 samples, 0.01%)</title><rect x="90.0677%" y="565" width="0.0118%" height="15" fill="rgb(224,132,51)" fg:x="33339078056" fg:w="4368033"/><text x="90.3177%" y="575.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::try_reset (33,518,634 samples, 0.09%)</title><rect x="90.0677%" y="677" width="0.0906%" height="15" fill="rgb(240,63,7)" fg:x="33339078056" fg:w="33518634"/><text x="90.3177%" y="687.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::reset (33,518,634 samples, 0.09%)</title><rect x="90.0677%" y="661" width="0.0906%" height="15" fill="rgb(249,182,41)" fg:x="33339078056" fg:w="33518634"/><text x="90.3177%" y="671.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset (33,518,634 samples, 0.09%)</title><rect x="90.0677%" y="645" width="0.0906%" height="15" fill="rgb(243,47,26)" fg:x="33339078056" fg:w="33518634"/><text x="90.3177%" y="655.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (33,518,634 samples, 0.09%)</title><rect x="90.0677%" y="629" width="0.0906%" height="15" fill="rgb(233,48,2)" fg:x="33339078056" fg:w="33518634"/><text x="90.3177%" y="639.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset::_{{closure}} (33,518,634 samples, 0.09%)</title><rect x="90.0677%" y="613" width="0.0906%" height="15" fill="rgb(244,165,34)" fg:x="33339078056" fg:w="33518634"/><text x="90.3177%" y="623.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset (33,518,634 samples, 0.09%)</title><rect x="90.0677%" y="597" width="0.0906%" height="15" fill="rgb(207,89,7)" fg:x="33339078056" fg:w="33518634"/><text x="90.3177%" y="607.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (33,518,634 samples, 0.09%)</title><rect x="90.0677%" y="581" width="0.0906%" height="15" fill="rgb(244,117,36)" fg:x="33339078056" fg:w="33518634"/><text x="90.3177%" y="591.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset::_{{closure}} (29,150,601 samples, 0.08%)</title><rect x="90.0795%" y="565" width="0.0788%" height="15" fill="rgb(226,144,34)" fg:x="33343446089" fg:w="29150601"/><text x="90.3295%" y="575.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::set (4,355,730 samples, 0.01%)</title><rect x="90.1582%" y="645" width="0.0118%" height="15" fill="rgb(213,23,19)" fg:x="33372596690" fg:w="4355730"/><text x="90.4082%" y="655.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::add (8,720,020 samples, 0.02%)</title><rect x="90.1582%" y="661" width="0.0236%" height="15" fill="rgb(217,75,12)" fg:x="33372596690" fg:w="8720020"/><text x="90.4082%" y="671.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4,364,290 samples, 0.01%)</title><rect x="90.1700%" y="645" width="0.0118%" height="15" fill="rgb(224,159,17)" fg:x="33376952420" fg:w="4364290"/><text x="90.4200%" y="655.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4,364,290 samples, 0.01%)</title><rect x="90.1700%" y="629" width="0.0118%" height="15" fill="rgb(217,118,1)" fg:x="33376952420" fg:w="4364290"/><text x="90.4200%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::lt (4,364,290 samples, 0.01%)</title><rect x="90.1700%" y="613" width="0.0118%" height="15" fill="rgb(232,180,48)" fg:x="33376952420" fg:w="4364290"/><text x="90.4200%" y="623.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains_or_add (21,036,034 samples, 0.06%)</title><rect x="90.1582%" y="677" width="0.0568%" height="15" fill="rgb(230,27,33)" fg:x="33372596690" fg:w="21036034"/><text x="90.4082%" y="687.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains (12,316,014 samples, 0.03%)</title><rect x="90.1818%" y="661" width="0.0333%" height="15" fill="rgb(205,31,21)" fg:x="33381316710" fg:w="12316014"/><text x="90.4318%" y="671.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3,898,290 samples, 0.01%)</title><rect x="90.2045%" y="645" width="0.0105%" height="15" fill="rgb(253,59,4)" fg:x="33389734434" fg:w="3898290"/><text x="90.4545%" y="655.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3,898,290 samples, 0.01%)</title><rect x="90.2045%" y="629" width="0.0105%" height="15" fill="rgb(224,201,9)" fg:x="33389734434" fg:w="3898290"/><text x="90.4545%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::lt (3,898,290 samples, 0.01%)</title><rect x="90.2045%" y="613" width="0.0105%" height="15" fill="rgb(229,206,30)" fg:x="33389734434" fg:w="3898290"/><text x="90.4545%" y="623.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::increment (187,379,415 samples, 0.51%)</title><rect x="89.7207%" y="693" width="0.5062%" height="15" fill="rgb(212,67,47)" fg:x="33210647958" fg:w="187379415"/><text x="89.9707%" y="703.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::increment (4,394,649 samples, 0.01%)</title><rect x="90.2151%" y="677" width="0.0119%" height="15" fill="rgb(211,96,50)" fg:x="33393632724" fg:w="4394649"/><text x="90.4651%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4,394,649 samples, 0.01%)</title><rect x="90.2151%" y="661" width="0.0119%" height="15" fill="rgb(252,114,18)" fg:x="33393632724" fg:w="4394649"/><text x="90.4651%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4,394,649 samples, 0.01%)</title><rect x="90.2151%" y="645" width="0.0119%" height="15" fill="rgb(223,58,37)" fg:x="33393632724" fg:w="4394649"/><text x="90.4651%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4,394,649 samples, 0.01%)</title><rect x="90.2151%" y="629" width="0.0119%" height="15" fill="rgb(237,70,4)" fg:x="33393632724" fg:w="4394649"/><text x="90.4651%" y="639.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::increment::_{{closure}} (4,394,649 samples, 0.01%)</title><rect x="90.2151%" y="613" width="0.0119%" height="15" fill="rgb(244,85,46)" fg:x="33393632724" fg:w="4394649"/><text x="90.4651%" y="623.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (313,871,234 samples, 0.85%)</title><rect x="89.4469%" y="709" width="0.8479%" height="15" fill="rgb(223,39,52)" fg:x="33109308084" fg:w="313871234"/><text x="89.6969%" y="719.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::try_reset (25,151,945 samples, 0.07%)</title><rect x="90.2269%" y="693" width="0.0679%" height="15" fill="rgb(218,200,14)" fg:x="33398027373" fg:w="25151945"/><text x="90.4769%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (8,587,965 samples, 0.02%)</title><rect x="90.2949%" y="709" width="0.0232%" height="15" fill="rgb(208,171,16)" fg:x="33423179318" fg:w="8587965"/><text x="90.5449%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (8,587,965 samples, 0.02%)</title><rect x="90.2949%" y="693" width="0.0232%" height="15" fill="rgb(234,200,18)" fg:x="33423179318" fg:w="8587965"/><text x="90.5449%" y="703.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (8,587,965 samples, 0.02%)</title><rect x="90.2949%" y="677" width="0.0232%" height="15" fill="rgb(228,45,11)" fg:x="33423179318" fg:w="8587965"/><text x="90.5449%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,587,965 samples, 0.02%)</title><rect x="90.2949%" y="661" width="0.0232%" height="15" fill="rgb(237,182,11)" fg:x="33423179318" fg:w="8587965"/><text x="90.5449%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,587,965 samples, 0.02%)</title><rect x="90.2949%" y="645" width="0.0232%" height="15" fill="rgb(241,175,49)" fg:x="33423179318" fg:w="8587965"/><text x="90.5449%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,587,965 samples, 0.02%)</title><rect x="90.2949%" y="629" width="0.0232%" height="15" fill="rgb(247,38,35)" fg:x="33423179318" fg:w="8587965"/><text x="90.5449%" y="639.50"></text></g><g><title>core::iter::adapters::copied::copy_fold::_{{closure}} (8,587,965 samples, 0.02%)</title><rect x="90.2949%" y="613" width="0.0232%" height="15" fill="rgb(228,39,49)" fg:x="33423179318" fg:w="8587965"/><text x="90.5449%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (8,587,965 samples, 0.02%)</title><rect x="90.2949%" y="597" width="0.0232%" height="15" fill="rgb(226,101,26)" fg:x="33423179318" fg:w="8587965"/><text x="90.5449%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::_{{closure}} (8,587,965 samples, 0.02%)</title><rect x="90.2949%" y="581" width="0.0232%" height="15" fill="rgb(206,141,19)" fg:x="33423179318" fg:w="8587965"/><text x="90.5449%" y="591.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (8,587,965 samples, 0.02%)</title><rect x="90.2949%" y="565" width="0.0232%" height="15" fill="rgb(211,200,13)" fg:x="33423179318" fg:w="8587965"/><text x="90.5449%" y="575.50"></text></g><g><title>mws5::words::Word::is_fit (8,587,965 samples, 0.02%)</title><rect x="90.2949%" y="549" width="0.0232%" height="15" fill="rgb(241,121,6)" fg:x="33423179318" fg:w="8587965"/><text x="90.5449%" y="559.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (27,783,326 samples, 0.08%)</title><rect x="90.3181%" y="709" width="0.0751%" height="15" fill="rgb(234,221,29)" fg:x="33431767283" fg:w="27783326"/><text x="90.5681%" y="719.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (27,783,326 samples, 0.08%)</title><rect x="90.3181%" y="693" width="0.0751%" height="15" fill="rgb(229,136,5)" fg:x="33431767283" fg:w="27783326"/><text x="90.5681%" y="703.50"></text></g><g><title>core::cell::BorrowRefMut::new (27,783,326 samples, 0.08%)</title><rect x="90.3181%" y="677" width="0.0751%" height="15" fill="rgb(238,36,11)" fg:x="33431767283" fg:w="27783326"/><text x="90.5681%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (12,900,752 samples, 0.03%)</title><rect x="90.3583%" y="661" width="0.0349%" height="15" fill="rgb(251,55,41)" fg:x="33446649857" fg:w="12900752"/><text x="90.6083%" y="671.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (12,900,752 samples, 0.03%)</title><rect x="90.3583%" y="645" width="0.0349%" height="15" fill="rgb(242,34,40)" fg:x="33446649857" fg:w="12900752"/><text x="90.6083%" y="655.50"></text></g><g><title>core::mem::replace (12,900,752 samples, 0.03%)</title><rect x="90.3583%" y="629" width="0.0349%" height="15" fill="rgb(215,42,17)" fg:x="33446649857" fg:w="12900752"/><text x="90.6083%" y="639.50"></text></g><g><title>mws5::dict::Dict::match_count (358,640,861 samples, 0.97%)</title><rect x="89.4360%" y="725" width="0.9689%" height="15" fill="rgb(207,44,46)" fg:x="33105256165" fg:w="358640861"/><text x="89.6860%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;mws5::words::Word,usize&gt;&gt;&gt; (4,346,417 samples, 0.01%)</title><rect x="90.3932%" y="709" width="0.0117%" height="15" fill="rgb(211,206,28)" fg:x="33459550609" fg:w="4346417"/><text x="90.6432%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (4,346,417 samples, 0.01%)</title><rect x="90.3932%" y="693" width="0.0117%" height="15" fill="rgb(237,167,16)" fg:x="33459550609" fg:w="4346417"/><text x="90.6432%" y="703.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (4,346,417 samples, 0.01%)</title><rect x="90.3932%" y="677" width="0.0117%" height="15" fill="rgb(233,66,6)" fg:x="33459550609" fg:w="4346417"/><text x="90.6432%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4,346,417 samples, 0.01%)</title><rect x="90.3932%" y="661" width="0.0117%" height="15" fill="rgb(246,123,29)" fg:x="33459550609" fg:w="4346417"/><text x="90.6432%" y="671.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4,346,417 samples, 0.01%)</title><rect x="90.3932%" y="645" width="0.0117%" height="15" fill="rgb(209,62,40)" fg:x="33459550609" fg:w="4346417"/><text x="90.6432%" y="655.50"></text></g><g><title>core::mem::replace (4,346,417 samples, 0.01%)</title><rect x="90.3932%" y="629" width="0.0117%" height="15" fill="rgb(218,4,25)" fg:x="33459550609" fg:w="4346417"/><text x="90.6432%" y="639.50"></text></g><g><title>mws5::search::best_pos (532,239,152 samples, 1.44%)</title><rect x="89.0366%" y="741" width="1.4379%" height="15" fill="rgb(253,91,49)" fg:x="32957414662" fg:w="532239152"/><text x="89.2866%" y="751.50"></text></g><g><title>mws5::squares::Square::get_pos (25,756,788 samples, 0.07%)</title><rect x="90.4049%" y="725" width="0.0696%" height="15" fill="rgb(228,155,29)" fg:x="33463897026" fg:w="25756788"/><text x="90.6549%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12,940,285 samples, 0.03%)</title><rect x="90.6040%" y="533" width="0.0350%" height="15" fill="rgb(243,57,37)" fg:x="33537600272" fg:w="12940285"/><text x="90.8540%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12,940,285 samples, 0.03%)</title><rect x="90.6040%" y="517" width="0.0350%" height="15" fill="rgb(244,167,17)" fg:x="33537600272" fg:w="12940285"/><text x="90.8540%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (50,620,858 samples, 0.14%)</title><rect x="90.7176%" y="517" width="0.1368%" height="15" fill="rgb(207,181,38)" fg:x="33579650044" fg:w="50620858"/><text x="90.9676%" y="527.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (113,281,824 samples, 0.31%)</title><rect x="90.6040%" y="581" width="0.3060%" height="15" fill="rgb(211,8,23)" fg:x="33537600272" fg:w="113281824"/><text x="90.8540%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (113,281,824 samples, 0.31%)</title><rect x="90.6040%" y="565" width="0.3060%" height="15" fill="rgb(235,11,44)" fg:x="33537600272" fg:w="113281824"/><text x="90.8540%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (113,281,824 samples, 0.31%)</title><rect x="90.6040%" y="549" width="0.3060%" height="15" fill="rgb(248,18,52)" fg:x="33537600272" fg:w="113281824"/><text x="90.8540%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (100,341,539 samples, 0.27%)</title><rect x="90.6390%" y="533" width="0.2711%" height="15" fill="rgb(208,4,7)" fg:x="33550540557" fg:w="100341539"/><text x="90.8890%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (20,611,194 samples, 0.06%)</title><rect x="90.8544%" y="517" width="0.0557%" height="15" fill="rgb(240,17,39)" fg:x="33630270902" fg:w="20611194"/><text x="91.1044%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (125,959,703 samples, 0.34%)</title><rect x="90.6040%" y="613" width="0.3403%" height="15" fill="rgb(207,170,3)" fg:x="33537600272" fg:w="125959703"/><text x="90.8540%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (125,959,703 samples, 0.34%)</title><rect x="90.6040%" y="597" width="0.3403%" height="15" fill="rgb(236,100,52)" fg:x="33537600272" fg:w="125959703"/><text x="90.8540%" y="607.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (12,677,879 samples, 0.03%)</title><rect x="90.9100%" y="581" width="0.0343%" height="15" fill="rgb(246,78,51)" fg:x="33650882096" fg:w="12677879"/><text x="91.1600%" y="591.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (12,677,879 samples, 0.03%)</title><rect x="90.9100%" y="565" width="0.0343%" height="15" fill="rgb(211,17,15)" fg:x="33650882096" fg:w="12677879"/><text x="91.1600%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (12,677,879 samples, 0.03%)</title><rect x="90.9100%" y="549" width="0.0343%" height="15" fill="rgb(209,59,46)" fg:x="33650882096" fg:w="12677879"/><text x="91.1600%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (12,677,879 samples, 0.03%)</title><rect x="90.9100%" y="533" width="0.0343%" height="15" fill="rgb(210,92,25)" fg:x="33650882096" fg:w="12677879"/><text x="91.1600%" y="543.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4,365,586 samples, 0.01%)</title><rect x="90.9443%" y="565" width="0.0118%" height="15" fill="rgb(238,174,52)" fg:x="33663559975" fg:w="4365586"/><text x="91.1943%" y="575.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (4,365,586 samples, 0.01%)</title><rect x="90.9443%" y="549" width="0.0118%" height="15" fill="rgb(230,73,7)" fg:x="33663559975" fg:w="4365586"/><text x="91.1943%" y="559.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (4,365,586 samples, 0.01%)</title><rect x="90.9443%" y="533" width="0.0118%" height="15" fill="rgb(243,124,40)" fg:x="33663559975" fg:w="4365586"/><text x="91.1943%" y="543.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (4,365,586 samples, 0.01%)</title><rect x="90.9443%" y="517" width="0.0118%" height="15" fill="rgb(244,170,11)" fg:x="33663559975" fg:w="4365586"/><text x="91.1943%" y="527.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load (4,362,101 samples, 0.01%)</title><rect x="90.9561%" y="565" width="0.0118%" height="15" fill="rgb(207,114,54)" fg:x="33667925561" fg:w="4362101"/><text x="91.2061%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (4,362,101 samples, 0.01%)</title><rect x="90.9561%" y="549" width="0.0118%" height="15" fill="rgb(205,42,20)" fg:x="33667925561" fg:w="4362101"/><text x="91.2061%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4,362,101 samples, 0.01%)</title><rect x="90.9561%" y="533" width="0.0118%" height="15" fill="rgb(230,30,28)" fg:x="33667925561" fg:w="4362101"/><text x="91.2061%" y="543.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty (4,370,378 samples, 0.01%)</title><rect x="90.9679%" y="565" width="0.0118%" height="15" fill="rgb(205,73,54)" fg:x="33672287662" fg:w="4370378"/><text x="91.2179%" y="575.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (4,370,378 samples, 0.01%)</title><rect x="90.9679%" y="549" width="0.0118%" height="15" fill="rgb(254,227,23)" fg:x="33672287662" fg:w="4370378"/><text x="91.2179%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4,370,378 samples, 0.01%)</title><rect x="90.9679%" y="533" width="0.0118%" height="15" fill="rgb(228,202,34)" fg:x="33672287662" fg:w="4370378"/><text x="91.2179%" y="543.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (4,200,427 samples, 0.01%)</title><rect x="90.9797%" y="565" width="0.0113%" height="15" fill="rgb(222,225,37)" fg:x="33676658040" fg:w="4200427"/><text x="91.2297%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4,200,427 samples, 0.01%)</title><rect x="90.9797%" y="549" width="0.0113%" height="15" fill="rgb(221,14,54)" fg:x="33676658040" fg:w="4200427"/><text x="91.2297%" y="559.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (167,454,275 samples, 0.45%)</title><rect x="90.5812%" y="693" width="0.4524%" height="15" fill="rgb(254,102,2)" fg:x="33529166542" fg:w="167454275"/><text x="90.8312%" y="703.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (167,454,275 samples, 0.45%)</title><rect x="90.5812%" y="677" width="0.4524%" height="15" fill="rgb(232,104,17)" fg:x="33529166542" fg:w="167454275"/><text x="90.8312%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (167,454,275 samples, 0.45%)</title><rect x="90.5812%" y="661" width="0.4524%" height="15" fill="rgb(250,220,14)" fg:x="33529166542" fg:w="167454275"/><text x="90.8312%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (167,454,275 samples, 0.45%)</title><rect x="90.5812%" y="645" width="0.4524%" height="15" fill="rgb(241,158,9)" fg:x="33529166542" fg:w="167454275"/><text x="90.8312%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (167,454,275 samples, 0.45%)</title><rect x="90.5812%" y="629" width="0.4524%" height="15" fill="rgb(246,9,43)" fg:x="33529166542" fg:w="167454275"/><text x="90.8312%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (33,060,842 samples, 0.09%)</title><rect x="90.9443%" y="613" width="0.0893%" height="15" fill="rgb(206,73,33)" fg:x="33663559975" fg:w="33060842"/><text x="91.1943%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (33,060,842 samples, 0.09%)</title><rect x="90.9443%" y="597" width="0.0893%" height="15" fill="rgb(222,79,8)" fg:x="33663559975" fg:w="33060842"/><text x="91.1943%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (33,060,842 samples, 0.09%)</title><rect x="90.9443%" y="581" width="0.0893%" height="15" fill="rgb(234,8,54)" fg:x="33663559975" fg:w="33060842"/><text x="91.1943%" y="591.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (15,762,350 samples, 0.04%)</title><rect x="90.9910%" y="565" width="0.0426%" height="15" fill="rgb(209,134,38)" fg:x="33680858467" fg:w="15762350"/><text x="91.2410%" y="575.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::detach (11,875,879 samples, 0.03%)</title><rect x="91.0336%" y="661" width="0.0321%" height="15" fill="rgb(230,127,29)" fg:x="33696620817" fg:w="11875879"/><text x="91.2836%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (17,209,642 samples, 0.05%)</title><rect x="91.2459%" y="517" width="0.0465%" height="15" fill="rgb(242,44,41)" fg:x="33775204417" fg:w="17209642"/><text x="91.4959%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (21,426,148 samples, 0.06%)</title><rect x="91.2459%" y="533" width="0.0579%" height="15" fill="rgb(222,56,43)" fg:x="33775204417" fg:w="21426148"/><text x="91.4959%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4,216,506 samples, 0.01%)</title><rect x="91.2924%" y="517" width="0.0114%" height="15" fill="rgb(238,39,47)" fg:x="33792414059" fg:w="4216506"/><text x="91.5424%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (28,967,256 samples, 0.08%)</title><rect x="91.3169%" y="517" width="0.0783%" height="15" fill="rgb(226,79,43)" fg:x="33801465585" fg:w="28967256"/><text x="91.5669%" y="527.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (105,445,682 samples, 0.28%)</title><rect x="91.1442%" y="581" width="0.2849%" height="15" fill="rgb(242,105,53)" fg:x="33737546388" fg:w="105445682"/><text x="91.3942%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (105,445,682 samples, 0.28%)</title><rect x="91.1442%" y="565" width="0.2849%" height="15" fill="rgb(251,132,46)" fg:x="33737546388" fg:w="105445682"/><text x="91.3942%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (105,445,682 samples, 0.28%)</title><rect x="91.1442%" y="549" width="0.2849%" height="15" fill="rgb(231,77,14)" fg:x="33737546388" fg:w="105445682"/><text x="91.3942%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (46,361,505 samples, 0.13%)</title><rect x="91.3038%" y="533" width="0.1252%" height="15" fill="rgb(240,135,9)" fg:x="33796630565" fg:w="46361505"/><text x="91.5538%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (12,559,229 samples, 0.03%)</title><rect x="91.3951%" y="517" width="0.0339%" height="15" fill="rgb(248,109,14)" fg:x="33830432841" fg:w="12559229"/><text x="91.6451%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (151,399,938 samples, 0.41%)</title><rect x="91.0996%" y="613" width="0.4090%" height="15" fill="rgb(227,146,52)" fg:x="33721043921" fg:w="151399938"/><text x="91.3496%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (134,897,471 samples, 0.36%)</title><rect x="91.1442%" y="597" width="0.3644%" height="15" fill="rgb(232,54,3)" fg:x="33737546388" fg:w="134897471"/><text x="91.3942%" y="607.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (29,451,789 samples, 0.08%)</title><rect x="91.4290%" y="581" width="0.0796%" height="15" fill="rgb(229,201,43)" fg:x="33842992070" fg:w="29451789"/><text x="91.6790%" y="591.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (29,451,789 samples, 0.08%)</title><rect x="91.4290%" y="565" width="0.0796%" height="15" fill="rgb(252,161,33)" fg:x="33842992070" fg:w="29451789"/><text x="91.6790%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (29,451,789 samples, 0.08%)</title><rect x="91.4290%" y="549" width="0.0796%" height="15" fill="rgb(226,146,40)" fg:x="33842992070" fg:w="29451789"/><text x="91.6790%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (29,451,789 samples, 0.08%)</title><rect x="91.4290%" y="533" width="0.0796%" height="15" fill="rgb(219,47,25)" fg:x="33842992070" fg:w="29451789"/><text x="91.6790%" y="543.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4,280,118 samples, 0.01%)</title><rect x="91.5321%" y="565" width="0.0116%" height="15" fill="rgb(250,135,13)" fg:x="33881147862" fg:w="4280118"/><text x="91.7821%" y="575.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (4,280,118 samples, 0.01%)</title><rect x="91.5321%" y="549" width="0.0116%" height="15" fill="rgb(219,229,18)" fg:x="33881147862" fg:w="4280118"/><text x="91.7821%" y="559.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (4,280,118 samples, 0.01%)</title><rect x="91.5321%" y="533" width="0.0116%" height="15" fill="rgb(217,152,27)" fg:x="33881147862" fg:w="4280118"/><text x="91.7821%" y="543.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (4,280,118 samples, 0.01%)</title><rect x="91.5321%" y="517" width="0.0116%" height="15" fill="rgb(225,71,47)" fg:x="33881147862" fg:w="4280118"/><text x="91.7821%" y="527.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (4,215,749 samples, 0.01%)</title><rect x="91.5437%" y="565" width="0.0114%" height="15" fill="rgb(220,139,14)" fg:x="33885427980" fg:w="4215749"/><text x="91.7937%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4,215,749 samples, 0.01%)</title><rect x="91.5437%" y="549" width="0.0114%" height="15" fill="rgb(247,54,32)" fg:x="33885427980" fg:w="4215749"/><text x="91.7937%" y="559.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (200,583,682 samples, 0.54%)</title><rect x="91.0336%" y="677" width="0.5419%" height="15" fill="rgb(252,131,39)" fg:x="33696620817" fg:w="200583682"/><text x="91.2836%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (188,707,803 samples, 0.51%)</title><rect x="91.0657%" y="661" width="0.5098%" height="15" fill="rgb(210,108,39)" fg:x="33708496696" fg:w="188707803"/><text x="91.3157%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (188,707,803 samples, 0.51%)</title><rect x="91.0657%" y="645" width="0.5098%" height="15" fill="rgb(205,23,29)" fg:x="33708496696" fg:w="188707803"/><text x="91.3157%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (188,707,803 samples, 0.51%)</title><rect x="91.0657%" y="629" width="0.5098%" height="15" fill="rgb(246,139,46)" fg:x="33708496696" fg:w="188707803"/><text x="91.3157%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (24,760,640 samples, 0.07%)</title><rect x="91.5086%" y="613" width="0.0669%" height="15" fill="rgb(250,81,26)" fg:x="33872443859" fg:w="24760640"/><text x="91.7586%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (24,760,640 samples, 0.07%)</title><rect x="91.5086%" y="597" width="0.0669%" height="15" fill="rgb(214,104,7)" fg:x="33872443859" fg:w="24760640"/><text x="91.7586%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (24,760,640 samples, 0.07%)</title><rect x="91.5086%" y="581" width="0.0669%" height="15" fill="rgb(233,189,8)" fg:x="33872443859" fg:w="24760640"/><text x="91.7586%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (4,289,714 samples, 0.01%)</title><rect x="91.5639%" y="565" width="0.0116%" height="15" fill="rgb(228,141,17)" fg:x="33892914785" fg:w="4289714"/><text x="91.8139%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (4,289,714 samples, 0.01%)</title><rect x="91.5639%" y="549" width="0.0116%" height="15" fill="rgb(247,157,1)" fg:x="33892914785" fg:w="4289714"/><text x="91.8139%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (4,289,714 samples, 0.01%)</title><rect x="91.5639%" y="533" width="0.0116%" height="15" fill="rgb(249,225,5)" fg:x="33892914785" fg:w="4289714"/><text x="91.8139%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4,289,714 samples, 0.01%)</title><rect x="91.5639%" y="517" width="0.0116%" height="15" fill="rgb(242,55,13)" fg:x="33892914785" fg:w="4289714"/><text x="91.8139%" y="527.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (209,185,626 samples, 0.57%)</title><rect x="91.0336%" y="693" width="0.5651%" height="15" fill="rgb(230,49,50)" fg:x="33696620817" fg:w="209185626"/><text x="91.2836%" y="703.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::peek_ (8,601,944 samples, 0.02%)</title><rect x="91.5755%" y="677" width="0.0232%" height="15" fill="rgb(241,111,38)" fg:x="33897204499" fg:w="8601944"/><text x="91.8255%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8,601,944 samples, 0.02%)</title><rect x="91.5755%" y="661" width="0.0232%" height="15" fill="rgb(252,155,4)" fg:x="33897204499" fg:w="8601944"/><text x="91.8255%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8,601,944 samples, 0.02%)</title><rect x="91.5755%" y="645" width="0.0232%" height="15" fill="rgb(212,69,32)" fg:x="33897204499" fg:w="8601944"/><text x="91.8255%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3,865,815 samples, 0.01%)</title><rect x="91.7132%" y="581" width="0.0104%" height="15" fill="rgb(243,107,47)" fg:x="33948190096" fg:w="3865815"/><text x="91.9632%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (25,169,667 samples, 0.07%)</title><rect x="91.6790%" y="597" width="0.0680%" height="15" fill="rgb(247,130,12)" fg:x="33935520583" fg:w="25169667"/><text x="91.9290%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8,634,339 samples, 0.02%)</title><rect x="91.7237%" y="581" width="0.0233%" height="15" fill="rgb(233,74,16)" fg:x="33952055911" fg:w="8634339"/><text x="91.9737%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (43,497,560 samples, 0.12%)</title><rect x="91.8674%" y="581" width="0.1175%" height="15" fill="rgb(208,58,18)" fg:x="34005243541" fg:w="43497560"/><text x="92.1174%" y="591.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (147,221,100 samples, 0.40%)</title><rect x="91.6438%" y="645" width="0.3977%" height="15" fill="rgb(242,225,1)" fg:x="33922482687" fg:w="147221100"/><text x="91.8938%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (147,221,100 samples, 0.40%)</title><rect x="91.6438%" y="629" width="0.3977%" height="15" fill="rgb(249,39,40)" fg:x="33922482687" fg:w="147221100"/><text x="91.8938%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (147,221,100 samples, 0.40%)</title><rect x="91.6438%" y="613" width="0.3977%" height="15" fill="rgb(207,72,44)" fg:x="33922482687" fg:w="147221100"/><text x="91.8938%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (109,013,537 samples, 0.29%)</title><rect x="91.7470%" y="597" width="0.2945%" height="15" fill="rgb(215,193,12)" fg:x="33960690250" fg:w="109013537"/><text x="91.9970%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (20,962,686 samples, 0.06%)</title><rect x="91.9849%" y="581" width="0.0566%" height="15" fill="rgb(248,41,39)" fg:x="34048741101" fg:w="20962686"/><text x="92.2349%" y="591.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::hash_key (163,870,238 samples, 0.44%)</title><rect x="91.6212%" y="677" width="0.4427%" height="15" fill="rgb(253,85,4)" fg:x="33914125819" fg:w="163870238"/><text x="91.8712%" y="687.50"></text></g><g><title>&lt;caches::lfu::DefaultKeyHasher&lt;K&gt; as caches::lfu::KeyHasher&lt;K&gt;&gt;::hash_key (155,513,370 samples, 0.42%)</title><rect x="91.6438%" y="661" width="0.4201%" height="15" fill="rgb(243,70,31)" fg:x="33922482687" fg:w="155513370"/><text x="91.8938%" y="671.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (8,292,270 samples, 0.02%)</title><rect x="92.0415%" y="645" width="0.0224%" height="15" fill="rgb(253,195,26)" fg:x="34069703787" fg:w="8292270"/><text x="92.2915%" y="655.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (8,292,270 samples, 0.02%)</title><rect x="92.0415%" y="629" width="0.0224%" height="15" fill="rgb(243,42,11)" fg:x="34069703787" fg:w="8292270"/><text x="92.2915%" y="639.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (8,292,270 samples, 0.02%)</title><rect x="92.0415%" y="613" width="0.0224%" height="15" fill="rgb(239,66,17)" fg:x="34069703787" fg:w="8292270"/><text x="92.2915%" y="623.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (8,292,270 samples, 0.02%)</title><rect x="92.0415%" y="597" width="0.0224%" height="15" fill="rgb(217,132,21)" fg:x="34069703787" fg:w="8292270"/><text x="92.2915%" y="607.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::try_reset (46,038,748 samples, 0.12%)</title><rect x="92.0639%" y="677" width="0.1244%" height="15" fill="rgb(252,202,21)" fg:x="34077996057" fg:w="46038748"/><text x="92.3139%" y="687.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::reset (37,807,247 samples, 0.10%)</title><rect x="92.0862%" y="661" width="0.1021%" height="15" fill="rgb(233,98,36)" fg:x="34086227558" fg:w="37807247"/><text x="92.3362%" y="671.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset (37,807,247 samples, 0.10%)</title><rect x="92.0862%" y="645" width="0.1021%" height="15" fill="rgb(216,153,54)" fg:x="34086227558" fg:w="37807247"/><text x="92.3362%" y="655.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (37,807,247 samples, 0.10%)</title><rect x="92.0862%" y="629" width="0.1021%" height="15" fill="rgb(250,99,7)" fg:x="34086227558" fg:w="37807247"/><text x="92.3362%" y="639.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset::_{{closure}} (37,807,247 samples, 0.10%)</title><rect x="92.0862%" y="613" width="0.1021%" height="15" fill="rgb(207,56,50)" fg:x="34086227558" fg:w="37807247"/><text x="92.3362%" y="623.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset (37,807,247 samples, 0.10%)</title><rect x="92.0862%" y="597" width="0.1021%" height="15" fill="rgb(244,61,34)" fg:x="34086227558" fg:w="37807247"/><text x="92.3362%" y="607.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (37,807,247 samples, 0.10%)</title><rect x="92.0862%" y="581" width="0.1021%" height="15" fill="rgb(241,50,38)" fg:x="34086227558" fg:w="37807247"/><text x="92.3362%" y="591.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset::_{{closure}} (37,807,247 samples, 0.10%)</title><rect x="92.0862%" y="565" width="0.1021%" height="15" fill="rgb(212,166,30)" fg:x="34086227558" fg:w="37807247"/><text x="92.3362%" y="575.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::add (4,308,304 samples, 0.01%)</title><rect x="92.1883%" y="661" width="0.0116%" height="15" fill="rgb(249,127,32)" fg:x="34124034805" fg:w="4308304"/><text x="92.4383%" y="671.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4,308,304 samples, 0.01%)</title><rect x="92.1883%" y="645" width="0.0116%" height="15" fill="rgb(209,103,0)" fg:x="34124034805" fg:w="4308304"/><text x="92.4383%" y="655.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4,308,304 samples, 0.01%)</title><rect x="92.1883%" y="629" width="0.0116%" height="15" fill="rgb(238,209,51)" fg:x="34124034805" fg:w="4308304"/><text x="92.4383%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::lt (4,308,304 samples, 0.01%)</title><rect x="92.1883%" y="613" width="0.0116%" height="15" fill="rgb(237,56,23)" fg:x="34124034805" fg:w="4308304"/><text x="92.4383%" y="623.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains_or_add (16,752,822 samples, 0.05%)</title><rect x="92.1883%" y="677" width="0.0453%" height="15" fill="rgb(215,153,46)" fg:x="34124034805" fg:w="16752822"/><text x="92.4383%" y="687.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains (12,444,518 samples, 0.03%)</title><rect x="92.1999%" y="661" width="0.0336%" height="15" fill="rgb(224,49,31)" fg:x="34128343109" fg:w="12444518"/><text x="92.4499%" y="671.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4,123,244 samples, 0.01%)</title><rect x="92.2224%" y="645" width="0.0111%" height="15" fill="rgb(250,18,42)" fg:x="34136664383" fg:w="4123244"/><text x="92.4724%" y="655.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4,123,244 samples, 0.01%)</title><rect x="92.2224%" y="629" width="0.0111%" height="15" fill="rgb(215,176,39)" fg:x="34136664383" fg:w="4123244"/><text x="92.4724%" y="639.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::increment (4,371,900 samples, 0.01%)</title><rect x="92.2336%" y="677" width="0.0118%" height="15" fill="rgb(223,77,29)" fg:x="34140787627" fg:w="4371900"/><text x="92.4836%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4,371,900 samples, 0.01%)</title><rect x="92.2336%" y="661" width="0.0118%" height="15" fill="rgb(234,94,52)" fg:x="34140787627" fg:w="4371900"/><text x="92.4836%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4,371,900 samples, 0.01%)</title><rect x="92.2336%" y="645" width="0.0118%" height="15" fill="rgb(220,154,50)" fg:x="34140787627" fg:w="4371900"/><text x="92.4836%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4,371,900 samples, 0.01%)</title><rect x="92.2336%" y="629" width="0.0118%" height="15" fill="rgb(212,11,10)" fg:x="34140787627" fg:w="4371900"/><text x="92.4836%" y="639.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::increment::_{{closure}} (4,371,900 samples, 0.01%)</title><rect x="92.2336%" y="613" width="0.0118%" height="15" fill="rgb(205,166,19)" fg:x="34140787627" fg:w="4371900"/><text x="92.4836%" y="623.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::increment (4,371,900 samples, 0.01%)</title><rect x="92.2336%" y="597" width="0.0118%" height="15" fill="rgb(244,198,16)" fg:x="34140787627" fg:w="4371900"/><text x="92.4836%" y="607.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::increment (243,523,264 samples, 0.66%)</title><rect x="91.5987%" y="693" width="0.6579%" height="15" fill="rgb(219,69,12)" fg:x="33905806443" fg:w="243523264"/><text x="91.8487%" y="703.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (4,170,180 samples, 0.01%)</title><rect x="92.2454%" y="677" width="0.0113%" height="15" fill="rgb(245,30,7)" fg:x="34145159527" fg:w="4170180"/><text x="92.4954%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (4,170,180 samples, 0.01%)</title><rect x="92.2454%" y="661" width="0.0113%" height="15" fill="rgb(218,221,48)" fg:x="34145159527" fg:w="4170180"/><text x="92.4954%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (4,170,180 samples, 0.01%)</title><rect x="92.2454%" y="645" width="0.0113%" height="15" fill="rgb(216,66,15)" fg:x="34145159527" fg:w="4170180"/><text x="92.4954%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (4,170,180 samples, 0.01%)</title><rect x="92.2454%" y="629" width="0.0113%" height="15" fill="rgb(226,122,50)" fg:x="34145159527" fg:w="4170180"/><text x="92.4954%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (4,170,180 samples, 0.01%)</title><rect x="92.2454%" y="613" width="0.0113%" height="15" fill="rgb(239,156,16)" fg:x="34145159527" fg:w="4170180"/><text x="92.4954%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,170,180 samples, 0.01%)</title><rect x="92.2454%" y="597" width="0.0113%" height="15" fill="rgb(224,27,38)" fg:x="34145159527" fg:w="4170180"/><text x="92.4954%" y="607.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (4,170,180 samples, 0.01%)</title><rect x="92.2454%" y="581" width="0.0113%" height="15" fill="rgb(224,39,27)" fg:x="34145159527" fg:w="4170180"/><text x="92.4954%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4,170,180 samples, 0.01%)</title><rect x="92.2454%" y="565" width="0.0113%" height="15" fill="rgb(215,92,29)" fg:x="34145159527" fg:w="4170180"/><text x="92.4954%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4,170,180 samples, 0.01%)</title><rect x="92.2454%" y="549" width="0.0113%" height="15" fill="rgb(207,159,16)" fg:x="34145159527" fg:w="4170180"/><text x="92.4954%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4,170,180 samples, 0.01%)</title><rect x="92.2454%" y="533" width="0.0113%" height="15" fill="rgb(238,163,47)" fg:x="34145159527" fg:w="4170180"/><text x="92.4954%" y="543.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (624,554,056 samples, 1.69%)</title><rect x="90.5812%" y="709" width="1.6873%" height="15" fill="rgb(219,91,49)" fg:x="33529166542" fg:w="624554056"/><text x="90.8312%" y="719.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::try_reset (4,390,891 samples, 0.01%)</title><rect x="92.2566%" y="693" width="0.0119%" height="15" fill="rgb(227,167,31)" fg:x="34149329707" fg:w="4390891"/><text x="92.5066%" y="703.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::put (4,437,431 samples, 0.01%)</title><rect x="92.2685%" y="709" width="0.0120%" height="15" fill="rgb(234,80,54)" fg:x="34153720598" fg:w="4437431"/><text x="92.5185%" y="719.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::capturing_put (4,437,431 samples, 0.01%)</title><rect x="92.2685%" y="693" width="0.0120%" height="15" fill="rgb(212,114,2)" fg:x="34153720598" fg:w="4437431"/><text x="92.5185%" y="703.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::replace_or_create_node (4,437,431 samples, 0.01%)</title><rect x="92.2685%" y="677" width="0.0120%" height="15" fill="rgb(234,50,24)" fg:x="34153720598" fg:w="4437431"/><text x="92.5185%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (4,437,431 samples, 0.01%)</title><rect x="92.2685%" y="661" width="0.0120%" height="15" fill="rgb(221,68,8)" fg:x="34153720598" fg:w="4437431"/><text x="92.5185%" y="671.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains_or_add (4,437,431 samples, 0.01%)</title><rect x="92.2685%" y="645" width="0.0120%" height="15" fill="rgb(254,180,31)" fg:x="34153720598" fg:w="4437431"/><text x="92.5185%" y="655.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains (4,437,431 samples, 0.01%)</title><rect x="92.2685%" y="629" width="0.0120%" height="15" fill="rgb(247,130,50)" fg:x="34153720598" fg:w="4437431"/><text x="92.5185%" y="639.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4,437,431 samples, 0.01%)</title><rect x="92.2685%" y="613" width="0.0120%" height="15" fill="rgb(211,109,4)" fg:x="34153720598" fg:w="4437431"/><text x="92.5185%" y="623.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4,437,431 samples, 0.01%)</title><rect x="92.2685%" y="597" width="0.0120%" height="15" fill="rgb(238,50,21)" fg:x="34153720598" fg:w="4437431"/><text x="92.5185%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12,558,965 samples, 0.03%)</title><rect x="92.3030%" y="645" width="0.0339%" height="15" fill="rgb(225,57,45)" fg:x="34166485905" fg:w="12558965"/><text x="92.5530%" y="655.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4,146,610 samples, 0.01%)</title><rect x="92.3257%" y="629" width="0.0112%" height="15" fill="rgb(209,196,50)" fg:x="34174898260" fg:w="4146610"/><text x="92.5757%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (37,818,349 samples, 0.10%)</title><rect x="92.2805%" y="709" width="0.1022%" height="15" fill="rgb(242,140,13)" fg:x="34158158029" fg:w="37818349"/><text x="92.5305%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (37,818,349 samples, 0.10%)</title><rect x="92.2805%" y="693" width="0.1022%" height="15" fill="rgb(217,111,7)" fg:x="34158158029" fg:w="37818349"/><text x="92.5305%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (37,818,349 samples, 0.10%)</title><rect x="92.2805%" y="677" width="0.1022%" height="15" fill="rgb(253,193,51)" fg:x="34158158029" fg:w="37818349"/><text x="92.5305%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (37,818,349 samples, 0.10%)</title><rect x="92.2805%" y="661" width="0.1022%" height="15" fill="rgb(252,70,29)" fg:x="34158158029" fg:w="37818349"/><text x="92.5305%" y="671.50"></text></g><g><title>core::iter::adapters::copied::copy_try_fold::_{{closure}} (16,931,508 samples, 0.05%)</title><rect x="92.3369%" y="645" width="0.0457%" height="15" fill="rgb(232,127,12)" fg:x="34179044870" fg:w="16931508"/><text x="92.5869%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (16,931,508 samples, 0.05%)</title><rect x="92.3369%" y="629" width="0.0457%" height="15" fill="rgb(211,180,21)" fg:x="34179044870" fg:w="16931508"/><text x="92.5869%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (16,931,508 samples, 0.05%)</title><rect x="92.3369%" y="613" width="0.0457%" height="15" fill="rgb(229,72,13)" fg:x="34179044870" fg:w="16931508"/><text x="92.5869%" y="623.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (16,931,508 samples, 0.05%)</title><rect x="92.3369%" y="597" width="0.0457%" height="15" fill="rgb(240,211,49)" fg:x="34179044870" fg:w="16931508"/><text x="92.5869%" y="607.50"></text></g><g><title>mws5::words::Word::is_fit (16,931,508 samples, 0.05%)</title><rect x="92.3369%" y="581" width="0.0457%" height="15" fill="rgb(219,149,40)" fg:x="34179044870" fg:w="16931508"/><text x="92.5869%" y="591.50"></text></g><g><title>mws5::dict::Dict::is_fit (702,044,071 samples, 1.90%)</title><rect x="90.4975%" y="725" width="1.8966%" height="15" fill="rgb(210,127,46)" fg:x="33498192313" fg:w="702044071"/><text x="90.7475%" y="735.50">m..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,260,006 samples, 0.01%)</title><rect x="92.3827%" y="709" width="0.0115%" height="15" fill="rgb(220,106,7)" fg:x="34195976378" fg:w="4260006"/><text x="92.6327%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4,260,006 samples, 0.01%)</title><rect x="92.3827%" y="693" width="0.0115%" height="15" fill="rgb(249,31,22)" fg:x="34195976378" fg:w="4260006"/><text x="92.6327%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4,260,006 samples, 0.01%)</title><rect x="92.3827%" y="677" width="0.0115%" height="15" fill="rgb(253,1,49)" fg:x="34195976378" fg:w="4260006"/><text x="92.6327%" y="687.50"></text></g><g><title>mws5::search::cross_fit::_{{closure}} (4,260,006 samples, 0.01%)</title><rect x="92.3827%" y="661" width="0.0115%" height="15" fill="rgb(227,144,33)" fg:x="34195976378" fg:w="4260006"/><text x="92.6327%" y="671.50"></text></g><g><title>mws5::squares::Square::get_pos (4,260,006 samples, 0.01%)</title><rect x="92.3827%" y="645" width="0.0115%" height="15" fill="rgb(249,163,44)" fg:x="34195976378" fg:w="4260006"/><text x="92.6327%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,353,858 samples, 0.01%)</title><rect x="92.4053%" y="693" width="0.0118%" height="15" fill="rgb(234,15,39)" fg:x="34204370166" fg:w="4353858"/><text x="92.6553%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (4,353,858 samples, 0.01%)</title><rect x="92.4053%" y="677" width="0.0118%" height="15" fill="rgb(207,66,16)" fg:x="34204370166" fg:w="4353858"/><text x="92.6553%" y="687.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,353,858 samples, 0.01%)</title><rect x="92.4053%" y="661" width="0.0118%" height="15" fill="rgb(233,112,24)" fg:x="34204370166" fg:w="4353858"/><text x="92.6553%" y="671.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (4,353,858 samples, 0.01%)</title><rect x="92.4053%" y="645" width="0.0118%" height="15" fill="rgb(230,90,22)" fg:x="34204370166" fg:w="4353858"/><text x="92.6553%" y="655.50"></text></g><g><title>mws5::search::cross_fit (727,605,595 samples, 1.97%)</title><rect x="90.4745%" y="741" width="1.9657%" height="15" fill="rgb(229,61,13)" fg:x="33489653814" fg:w="727605595"/><text x="90.7245%" y="751.50">m..</text></g><g><title>mws5::squares::Square::is_transposed (17,023,025 samples, 0.05%)</title><rect x="92.3942%" y="725" width="0.0460%" height="15" fill="rgb(225,57,24)" fg:x="34200236384" fg:w="17023025"/><text x="92.6442%" y="735.50"></text></g><g><title>mws5::words::Word::is_transposed (17,023,025 samples, 0.05%)</title><rect x="92.3942%" y="709" width="0.0460%" height="15" fill="rgb(208,169,48)" fg:x="34200236384" fg:w="17023025"/><text x="92.6442%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u8&gt;::cmp (8,535,385 samples, 0.02%)</title><rect x="92.4171%" y="693" width="0.0231%" height="15" fill="rgb(244,218,51)" fg:x="34208724024" fg:w="8535385"/><text x="92.6671%" y="703.50"></text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (10,987,384,249 samples, 29.68%)</title><rect x="62.8143%" y="757" width="29.6831%" height="15" fill="rgb(214,148,10)" fg:x="23251087268" fg:w="10987384249"/><text x="63.0643%" y="767.50">mws5::search::&lt;impl mws5::appstate::AppState&gt;::f..</text></g><g><title>mws5::squares::Square::set_pos (21,212,108 samples, 0.06%)</title><rect x="92.4401%" y="741" width="0.0573%" height="15" fill="rgb(225,174,27)" fg:x="34217259409" fg:w="21212108"/><text x="92.6901%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4,395,948 samples, 0.01%)</title><rect x="92.6099%" y="725" width="0.0119%" height="15" fill="rgb(230,96,26)" fg:x="34280098377" fg:w="4395948"/><text x="92.8599%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (36,902,915 samples, 0.10%)</title><rect x="92.5539%" y="741" width="0.0997%" height="15" fill="rgb(232,10,30)" fg:x="34259353028" fg:w="36902915"/><text x="92.8039%" y="751.50"></text></g><g><title>core::ptr::write (11,761,618 samples, 0.03%)</title><rect x="92.6218%" y="725" width="0.0318%" height="15" fill="rgb(222,8,50)" fg:x="34284494325" fg:w="11761618"/><text x="92.8718%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (19,507,369 samples, 0.05%)</title><rect x="92.6536%" y="741" width="0.0527%" height="15" fill="rgb(213,81,27)" fg:x="34296255943" fg:w="19507369"/><text x="92.9036%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (19,507,369 samples, 0.05%)</title><rect x="92.6536%" y="725" width="0.0527%" height="15" fill="rgb(245,50,10)" fg:x="34296255943" fg:w="19507369"/><text x="92.9036%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8,093,975 samples, 0.02%)</title><rect x="92.6844%" y="709" width="0.0219%" height="15" fill="rgb(216,100,18)" fg:x="34307669337" fg:w="8093975"/><text x="92.9344%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (8,093,975 samples, 0.02%)</title><rect x="92.6844%" y="693" width="0.0219%" height="15" fill="rgb(236,147,54)" fg:x="34307669337" fg:w="8093975"/><text x="92.9344%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (8,093,975 samples, 0.02%)</title><rect x="92.6844%" y="677" width="0.0219%" height="15" fill="rgb(205,143,26)" fg:x="34307669337" fg:w="8093975"/><text x="92.9344%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8,093,975 samples, 0.02%)</title><rect x="92.6844%" y="661" width="0.0219%" height="15" fill="rgb(236,26,9)" fg:x="34307669337" fg:w="8093975"/><text x="92.9344%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8,093,975 samples, 0.02%)</title><rect x="92.6844%" y="645" width="0.0219%" height="15" fill="rgb(221,165,53)" fg:x="34307669337" fg:w="8093975"/><text x="92.9344%" y="655.50"></text></g><g><title>alloc::alloc::alloc (8,093,975 samples, 0.02%)</title><rect x="92.6844%" y="629" width="0.0219%" height="15" fill="rgb(214,110,17)" fg:x="34307669337" fg:w="8093975"/><text x="92.9344%" y="639.50"></text></g><g><title>__rustc::__rdl_alloc (8,093,975 samples, 0.02%)</title><rect x="92.6844%" y="613" width="0.0219%" height="15" fill="rgb(237,197,12)" fg:x="34307669337" fg:w="8093975"/><text x="92.9344%" y="623.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (8,093,975 samples, 0.02%)</title><rect x="92.6844%" y="597" width="0.0219%" height="15" fill="rgb(205,84,17)" fg:x="34307669337" fg:w="8093975"/><text x="92.9344%" y="607.50"></text></g><g><title>core::cmp::PartialEq::ne (8,453,255 samples, 0.02%)</title><rect x="92.7416%" y="677" width="0.0228%" height="15" fill="rgb(237,18,45)" fg:x="34328847569" fg:w="8453255"/><text x="92.9916%" y="687.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (8,453,255 samples, 0.02%)</title><rect x="92.7416%" y="661" width="0.0228%" height="15" fill="rgb(221,87,14)" fg:x="34328847569" fg:w="8453255"/><text x="92.9916%" y="671.50"></text></g><g><title>core::cmp::Ordering::is_lt (8,121,503 samples, 0.02%)</title><rect x="92.7644%" y="645" width="0.0219%" height="15" fill="rgb(238,186,15)" fg:x="34337300824" fg:w="8121503"/><text x="93.0144%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by::fold::_{{closure}} (12,442,141 samples, 0.03%)</title><rect x="92.7644%" y="677" width="0.0336%" height="15" fill="rgb(208,115,11)" fg:x="34337300824" fg:w="12442141"/><text x="93.0144%" y="687.50"></text></g><g><title>core::cmp::min_by (12,442,141 samples, 0.03%)</title><rect x="92.7644%" y="661" width="0.0336%" height="15" fill="rgb(254,175,0)" fg:x="34337300824" fg:w="12442141"/><text x="93.0144%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4,320,638 samples, 0.01%)</title><rect x="92.7864%" y="645" width="0.0117%" height="15" fill="rgb(227,24,42)" fg:x="34345422327" fg:w="4320638"/><text x="93.0364%" y="655.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4,320,638 samples, 0.01%)</title><rect x="92.7864%" y="629" width="0.0117%" height="15" fill="rgb(223,211,37)" fg:x="34345422327" fg:w="4320638"/><text x="93.0364%" y="639.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (U,T)&gt;::cmp (4,320,638 samples, 0.01%)</title><rect x="92.7864%" y="613" width="0.0117%" height="15" fill="rgb(235,49,27)" fg:x="34345422327" fg:w="4320638"/><text x="93.0364%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (38,195,552 samples, 0.10%)</title><rect x="92.7063%" y="741" width="0.1032%" height="15" fill="rgb(254,97,51)" fg:x="34315763312" fg:w="38195552"/><text x="92.9563%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (38,195,552 samples, 0.10%)</title><rect x="92.7063%" y="725" width="0.1032%" height="15" fill="rgb(249,51,40)" fg:x="34315763312" fg:w="38195552"/><text x="92.9563%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (38,195,552 samples, 0.10%)</title><rect x="92.7063%" y="709" width="0.1032%" height="15" fill="rgb(210,128,45)" fg:x="34315763312" fg:w="38195552"/><text x="92.9563%" y="719.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25,111,295 samples, 0.07%)</title><rect x="92.7416%" y="693" width="0.0678%" height="15" fill="rgb(224,137,50)" fg:x="34328847569" fg:w="25111295"/><text x="92.9916%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize)&gt;&gt; (4,215,899 samples, 0.01%)</title><rect x="92.7981%" y="677" width="0.0114%" height="15" fill="rgb(242,15,9)" fg:x="34349742965" fg:w="4215899"/><text x="93.0481%" y="687.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,215,899 samples, 0.01%)</title><rect x="92.7981%" y="661" width="0.0114%" height="15" fill="rgb(233,187,41)" fg:x="34349742965" fg:w="4215899"/><text x="93.0481%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(usize,usize),alloc::alloc::Global&gt;&gt; (4,215,899 samples, 0.01%)</title><rect x="92.7981%" y="645" width="0.0114%" height="15" fill="rgb(227,2,29)" fg:x="34349742965" fg:w="4215899"/><text x="93.0481%" y="655.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,215,899 samples, 0.01%)</title><rect x="92.7981%" y="629" width="0.0114%" height="15" fill="rgb(222,70,3)" fg:x="34349742965" fg:w="4215899"/><text x="93.0481%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (4,215,899 samples, 0.01%)</title><rect x="92.7981%" y="613" width="0.0114%" height="15" fill="rgb(213,11,42)" fg:x="34349742965" fg:w="4215899"/><text x="93.0481%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,215,899 samples, 0.01%)</title><rect x="92.7981%" y="597" width="0.0114%" height="15" fill="rgb(225,150,9)" fg:x="34349742965" fg:w="4215899"/><text x="93.0481%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,215,899 samples, 0.01%)</title><rect x="92.7981%" y="581" width="0.0114%" height="15" fill="rgb(230,162,45)" fg:x="34349742965" fg:w="4215899"/><text x="93.0481%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,215,899 samples, 0.01%)</title><rect x="92.7981%" y="565" width="0.0114%" height="15" fill="rgb(222,14,52)" fg:x="34349742965" fg:w="4215899"/><text x="93.0481%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (4,215,899 samples, 0.01%)</title><rect x="92.7981%" y="549" width="0.0114%" height="15" fill="rgb(254,198,14)" fg:x="34349742965" fg:w="4215899"/><text x="93.0481%" y="559.50"></text></g><g><title>__rustc::__rdl_dealloc (4,215,899 samples, 0.01%)</title><rect x="92.7981%" y="533" width="0.0114%" height="15" fill="rgb(220,217,30)" fg:x="34349742965" fg:w="4215899"/><text x="93.0481%" y="543.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4,215,899 samples, 0.01%)</title><rect x="92.7981%" y="517" width="0.0114%" height="15" fill="rgb(215,146,41)" fg:x="34349742965" fg:w="4215899"/><text x="93.0481%" y="527.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::add (16,694,482 samples, 0.05%)</title><rect x="92.8421%" y="677" width="0.0451%" height="15" fill="rgb(217,27,36)" fg:x="34366055751" fg:w="16694482"/><text x="93.0921%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4,086,766 samples, 0.01%)</title><rect x="92.8762%" y="661" width="0.0110%" height="15" fill="rgb(219,218,39)" fg:x="34378663467" fg:w="4086766"/><text x="93.1262%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4,086,766 samples, 0.01%)</title><rect x="92.8762%" y="645" width="0.0110%" height="15" fill="rgb(219,4,42)" fg:x="34378663467" fg:w="4086766"/><text x="93.1262%" y="655.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::is_set (16,711,773 samples, 0.05%)</title><rect x="92.9106%" y="661" width="0.0451%" height="15" fill="rgb(249,119,36)" fg:x="34391405119" fg:w="16711773"/><text x="93.1606%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4,350,593 samples, 0.01%)</title><rect x="92.9440%" y="645" width="0.0118%" height="15" fill="rgb(209,23,33)" fg:x="34403766299" fg:w="4350593"/><text x="93.1940%" y="655.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4,350,593 samples, 0.01%)</title><rect x="92.9440%" y="629" width="0.0118%" height="15" fill="rgb(211,10,0)" fg:x="34403766299" fg:w="4350593"/><text x="93.1940%" y="639.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4,350,593 samples, 0.01%)</title><rect x="92.9440%" y="613" width="0.0118%" height="15" fill="rgb(208,99,37)" fg:x="34403766299" fg:w="4350593"/><text x="93.1940%" y="623.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (54,451,364 samples, 0.15%)</title><rect x="92.8205%" y="709" width="0.1471%" height="15" fill="rgb(213,132,31)" fg:x="34358057840" fg:w="54451364"/><text x="93.0705%" y="719.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains_or_add (46,453,453 samples, 0.13%)</title><rect x="92.8421%" y="693" width="0.1255%" height="15" fill="rgb(243,129,40)" fg:x="34366055751" fg:w="46453453"/><text x="93.0921%" y="703.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains (29,758,971 samples, 0.08%)</title><rect x="92.8872%" y="677" width="0.0804%" height="15" fill="rgb(210,66,33)" fg:x="34382750233" fg:w="29758971"/><text x="93.1372%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4,392,312 samples, 0.01%)</title><rect x="92.9558%" y="661" width="0.0119%" height="15" fill="rgb(209,189,4)" fg:x="34408116892" fg:w="4392312"/><text x="93.2058%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4,392,312 samples, 0.01%)</title><rect x="92.9558%" y="645" width="0.0119%" height="15" fill="rgb(214,107,37)" fg:x="34408116892" fg:w="4392312"/><text x="93.2058%" y="655.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::set (4,317,686 samples, 0.01%)</title><rect x="92.9886%" y="661" width="0.0117%" height="15" fill="rgb(245,88,54)" fg:x="34420283149" fg:w="4317686"/><text x="93.2386%" y="671.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::add (9,008,197 samples, 0.02%)</title><rect x="92.9886%" y="677" width="0.0243%" height="15" fill="rgb(205,146,20)" fg:x="34420283149" fg:w="9008197"/><text x="93.2386%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4,690,511 samples, 0.01%)</title><rect x="93.0003%" y="661" width="0.0127%" height="15" fill="rgb(220,161,25)" fg:x="34424600835" fg:w="4690511"/><text x="93.2503%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4,690,511 samples, 0.01%)</title><rect x="93.0003%" y="645" width="0.0127%" height="15" fill="rgb(215,152,15)" fg:x="34424600835" fg:w="4690511"/><text x="93.2503%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::lt (4,690,511 samples, 0.01%)</title><rect x="93.0003%" y="629" width="0.0127%" height="15" fill="rgb(233,192,44)" fg:x="34424600835" fg:w="4690511"/><text x="93.2503%" y="639.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::is_set (33,374,194 samples, 0.09%)</title><rect x="93.0701%" y="661" width="0.0902%" height="15" fill="rgb(240,170,46)" fg:x="34450444511" fg:w="33374194"/><text x="93.3201%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3,989,309 samples, 0.01%)</title><rect x="93.1495%" y="645" width="0.0108%" height="15" fill="rgb(207,104,33)" fg:x="34479829396" fg:w="3989309"/><text x="93.3995%" y="655.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3,989,309 samples, 0.01%)</title><rect x="93.1495%" y="629" width="0.0108%" height="15" fill="rgb(219,21,39)" fg:x="34479829396" fg:w="3989309"/><text x="93.3995%" y="639.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3,989,309 samples, 0.01%)</title><rect x="93.1495%" y="613" width="0.0108%" height="15" fill="rgb(214,133,29)" fg:x="34479829396" fg:w="3989309"/><text x="93.3995%" y="623.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains_or_add (71,951,747 samples, 0.19%)</title><rect x="92.9886%" y="693" width="0.1944%" height="15" fill="rgb(226,93,6)" fg:x="34420283149" fg:w="71951747"/><text x="93.2386%" y="703.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains (62,943,550 samples, 0.17%)</title><rect x="93.0130%" y="677" width="0.1700%" height="15" fill="rgb(252,222,34)" fg:x="34429291346" fg:w="62943550"/><text x="93.2630%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8,416,191 samples, 0.02%)</title><rect x="93.1603%" y="661" width="0.0227%" height="15" fill="rgb(252,92,48)" fg:x="34483818705" fg:w="8416191"/><text x="93.4103%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8,416,191 samples, 0.02%)</title><rect x="93.1603%" y="645" width="0.0227%" height="15" fill="rgb(245,223,24)" fg:x="34483818705" fg:w="8416191"/><text x="93.4103%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::lt (4,371,216 samples, 0.01%)</title><rect x="93.1712%" y="629" width="0.0118%" height="15" fill="rgb(205,176,3)" fg:x="34487863680" fg:w="4371216"/><text x="93.4212%" y="639.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (83,950,283 samples, 0.23%)</title><rect x="92.9676%" y="709" width="0.2268%" height="15" fill="rgb(235,151,15)" fg:x="34412509204" fg:w="83950283"/><text x="93.2176%" y="719.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (4,224,591 samples, 0.01%)</title><rect x="93.1830%" y="693" width="0.0114%" height="15" fill="rgb(237,209,11)" fg:x="34492234896" fg:w="4224591"/><text x="93.4330%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (4,224,591 samples, 0.01%)</title><rect x="93.1830%" y="677" width="0.0114%" height="15" fill="rgb(243,227,24)" fg:x="34492234896" fg:w="4224591"/><text x="93.4330%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (4,224,591 samples, 0.01%)</title><rect x="93.1830%" y="661" width="0.0114%" height="15" fill="rgb(239,193,16)" fg:x="34492234896" fg:w="4224591"/><text x="93.4330%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (4,224,591 samples, 0.01%)</title><rect x="93.1830%" y="645" width="0.0114%" height="15" fill="rgb(231,27,9)" fg:x="34492234896" fg:w="4224591"/><text x="93.4330%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (4,224,591 samples, 0.01%)</title><rect x="93.1830%" y="629" width="0.0114%" height="15" fill="rgb(219,169,10)" fg:x="34492234896" fg:w="4224591"/><text x="93.4330%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4,224,591 samples, 0.01%)</title><rect x="93.1830%" y="613" width="0.0114%" height="15" fill="rgb(244,229,43)" fg:x="34492234896" fg:w="4224591"/><text x="93.4330%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (4,224,591 samples, 0.01%)</title><rect x="93.1830%" y="597" width="0.0114%" height="15" fill="rgb(254,38,20)" fg:x="34492234896" fg:w="4224591"/><text x="93.4330%" y="607.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (4,224,591 samples, 0.01%)</title><rect x="93.1830%" y="581" width="0.0114%" height="15" fill="rgb(250,47,30)" fg:x="34492234896" fg:w="4224591"/><text x="93.4330%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4,224,591 samples, 0.01%)</title><rect x="93.1830%" y="565" width="0.0114%" height="15" fill="rgb(224,124,36)" fg:x="34492234896" fg:w="4224591"/><text x="93.4330%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8,505,148 samples, 0.02%)</title><rect x="93.2864%" y="597" width="0.0230%" height="15" fill="rgb(246,68,51)" fg:x="34530504513" fg:w="8505148"/><text x="93.5364%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16,594,925 samples, 0.04%)</title><rect x="93.2756%" y="613" width="0.0448%" height="15" fill="rgb(253,43,49)" fg:x="34526522668" fg:w="16594925"/><text x="93.5256%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4,107,932 samples, 0.01%)</title><rect x="93.3094%" y="597" width="0.0111%" height="15" fill="rgb(219,54,36)" fg:x="34539009661" fg:w="4107932"/><text x="93.5594%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (39,921,056 samples, 0.11%)</title><rect x="93.3787%" y="597" width="0.1078%" height="15" fill="rgb(227,133,34)" fg:x="34564659724" fg:w="39921056"/><text x="93.6287%" y="607.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (116,191,234 samples, 0.31%)</title><rect x="93.2413%" y="661" width="0.3139%" height="15" fill="rgb(247,227,15)" fg:x="34513793670" fg:w="116191234"/><text x="93.4913%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (116,191,234 samples, 0.31%)</title><rect x="93.2413%" y="645" width="0.3139%" height="15" fill="rgb(229,96,14)" fg:x="34513793670" fg:w="116191234"/><text x="93.4913%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (116,191,234 samples, 0.31%)</title><rect x="93.2413%" y="629" width="0.3139%" height="15" fill="rgb(220,79,17)" fg:x="34513793670" fg:w="116191234"/><text x="93.4913%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (86,867,311 samples, 0.23%)</title><rect x="93.3205%" y="613" width="0.2347%" height="15" fill="rgb(205,131,53)" fg:x="34543117593" fg:w="86867311"/><text x="93.5705%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (25,404,124 samples, 0.07%)</title><rect x="93.4865%" y="597" width="0.0686%" height="15" fill="rgb(209,50,29)" fg:x="34604580780" fg:w="25404124"/><text x="93.7365%" y="607.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::hash_key (133,129,942 samples, 0.36%)</title><rect x="93.2295%" y="693" width="0.3597%" height="15" fill="rgb(245,86,46)" fg:x="34509456778" fg:w="133129942"/><text x="93.4795%" y="703.50"></text></g><g><title>&lt;caches::lfu::DefaultKeyHasher&lt;K&gt; as caches::lfu::KeyHasher&lt;K&gt;&gt;::hash_key (128,793,050 samples, 0.35%)</title><rect x="93.2413%" y="677" width="0.3479%" height="15" fill="rgb(235,66,46)" fg:x="34513793670" fg:w="128793050"/><text x="93.4913%" y="687.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (12,601,816 samples, 0.03%)</title><rect x="93.5552%" y="661" width="0.0340%" height="15" fill="rgb(232,148,31)" fg:x="34629984904" fg:w="12601816"/><text x="93.8052%" y="671.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (12,601,816 samples, 0.03%)</title><rect x="93.5552%" y="645" width="0.0340%" height="15" fill="rgb(217,149,8)" fg:x="34629984904" fg:w="12601816"/><text x="93.8052%" y="655.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (12,601,816 samples, 0.03%)</title><rect x="93.5552%" y="629" width="0.0340%" height="15" fill="rgb(209,183,11)" fg:x="34629984904" fg:w="12601816"/><text x="93.8052%" y="639.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (12,601,816 samples, 0.03%)</title><rect x="93.5552%" y="613" width="0.0340%" height="15" fill="rgb(208,55,20)" fg:x="34629984904" fg:w="12601816"/><text x="93.8052%" y="623.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::try_reset (49,706,787 samples, 0.13%)</title><rect x="93.5892%" y="693" width="0.1343%" height="15" fill="rgb(218,39,14)" fg:x="34642586720" fg:w="49706787"/><text x="93.8392%" y="703.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::reset (41,097,922 samples, 0.11%)</title><rect x="93.6125%" y="677" width="0.1110%" height="15" fill="rgb(216,169,33)" fg:x="34651195585" fg:w="41097922"/><text x="93.8625%" y="687.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset (41,097,922 samples, 0.11%)</title><rect x="93.6125%" y="661" width="0.1110%" height="15" fill="rgb(233,80,24)" fg:x="34651195585" fg:w="41097922"/><text x="93.8625%" y="671.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (41,097,922 samples, 0.11%)</title><rect x="93.6125%" y="645" width="0.1110%" height="15" fill="rgb(213,179,31)" fg:x="34651195585" fg:w="41097922"/><text x="93.8625%" y="655.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset::_{{closure}} (41,097,922 samples, 0.11%)</title><rect x="93.6125%" y="629" width="0.1110%" height="15" fill="rgb(209,19,5)" fg:x="34651195585" fg:w="41097922"/><text x="93.8625%" y="639.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset (41,097,922 samples, 0.11%)</title><rect x="93.6125%" y="613" width="0.1110%" height="15" fill="rgb(219,18,35)" fg:x="34651195585" fg:w="41097922"/><text x="93.8625%" y="623.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (41,097,922 samples, 0.11%)</title><rect x="93.6125%" y="597" width="0.1110%" height="15" fill="rgb(209,169,16)" fg:x="34651195585" fg:w="41097922"/><text x="93.8625%" y="607.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset::_{{closure}} (41,097,922 samples, 0.11%)</title><rect x="93.6125%" y="581" width="0.1110%" height="15" fill="rgb(245,90,51)" fg:x="34651195585" fg:w="41097922"/><text x="93.8625%" y="591.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::is_set (8,193,329 samples, 0.02%)</title><rect x="93.7235%" y="661" width="0.0221%" height="15" fill="rgb(220,99,45)" fg:x="34692293507" fg:w="8193329"/><text x="93.9735%" y="671.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains_or_add (12,562,488 samples, 0.03%)</title><rect x="93.7235%" y="693" width="0.0339%" height="15" fill="rgb(249,89,25)" fg:x="34692293507" fg:w="12562488"/><text x="93.9735%" y="703.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains (12,562,488 samples, 0.03%)</title><rect x="93.7235%" y="677" width="0.0339%" height="15" fill="rgb(239,193,0)" fg:x="34692293507" fg:w="12562488"/><text x="93.9735%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4,369,159 samples, 0.01%)</title><rect x="93.7456%" y="661" width="0.0118%" height="15" fill="rgb(231,126,1)" fg:x="34700486836" fg:w="4369159"/><text x="93.9956%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4,369,159 samples, 0.01%)</title><rect x="93.7456%" y="645" width="0.0118%" height="15" fill="rgb(243,166,3)" fg:x="34700486836" fg:w="4369159"/><text x="93.9956%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::lt (4,369,159 samples, 0.01%)</title><rect x="93.7456%" y="629" width="0.0118%" height="15" fill="rgb(223,22,34)" fg:x="34700486836" fg:w="4369159"/><text x="93.9956%" y="639.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::increment (12,865,764 samples, 0.03%)</title><rect x="93.7574%" y="693" width="0.0348%" height="15" fill="rgb(251,52,51)" fg:x="34704855995" fg:w="12865764"/><text x="94.0074%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12,865,764 samples, 0.03%)</title><rect x="93.7574%" y="677" width="0.0348%" height="15" fill="rgb(221,165,28)" fg:x="34704855995" fg:w="12865764"/><text x="94.0074%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (12,865,764 samples, 0.03%)</title><rect x="93.7574%" y="661" width="0.0348%" height="15" fill="rgb(218,121,47)" fg:x="34704855995" fg:w="12865764"/><text x="94.0074%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (12,865,764 samples, 0.03%)</title><rect x="93.7574%" y="645" width="0.0348%" height="15" fill="rgb(209,120,9)" fg:x="34704855995" fg:w="12865764"/><text x="94.0074%" y="655.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::increment::_{{closure}} (12,865,764 samples, 0.03%)</title><rect x="93.7574%" y="629" width="0.0348%" height="15" fill="rgb(236,68,12)" fg:x="34704855995" fg:w="12865764"/><text x="94.0074%" y="639.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::increment (8,542,866 samples, 0.02%)</title><rect x="93.7691%" y="613" width="0.0231%" height="15" fill="rgb(225,194,26)" fg:x="34709178893" fg:w="8542866"/><text x="94.0191%" y="623.50"></text></g><g><title>&lt;caches::lfu::tinylfu::sketch::count_min_row::CountMinRow as core::ops::index::Index&lt;usize&gt;&gt;::index (4,412,799 samples, 0.01%)</title><rect x="93.7803%" y="597" width="0.0119%" height="15" fill="rgb(231,84,39)" fg:x="34713308960" fg:w="4412799"/><text x="94.0303%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4,412,799 samples, 0.01%)</title><rect x="93.7803%" y="581" width="0.0119%" height="15" fill="rgb(210,11,45)" fg:x="34713308960" fg:w="4412799"/><text x="94.0303%" y="591.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4,412,799 samples, 0.01%)</title><rect x="93.7803%" y="565" width="0.0119%" height="15" fill="rgb(224,54,52)" fg:x="34713308960" fg:w="4412799"/><text x="94.0303%" y="575.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4,412,799 samples, 0.01%)</title><rect x="93.7803%" y="549" width="0.0119%" height="15" fill="rgb(238,102,14)" fg:x="34713308960" fg:w="4412799"/><text x="94.0303%" y="559.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::increment (225,608,869 samples, 0.61%)</title><rect x="93.1944%" y="709" width="0.6095%" height="15" fill="rgb(243,160,52)" fg:x="34496459487" fg:w="225608869"/><text x="93.4444%" y="719.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (4,346,597 samples, 0.01%)</title><rect x="93.7922%" y="693" width="0.0117%" height="15" fill="rgb(216,114,19)" fg:x="34717721759" fg:w="4346597"/><text x="94.0422%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (4,346,597 samples, 0.01%)</title><rect x="93.7922%" y="677" width="0.0117%" height="15" fill="rgb(244,166,37)" fg:x="34717721759" fg:w="4346597"/><text x="94.0422%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (4,346,597 samples, 0.01%)</title><rect x="93.7922%" y="661" width="0.0117%" height="15" fill="rgb(246,29,44)" fg:x="34717721759" fg:w="4346597"/><text x="94.0422%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (4,346,597 samples, 0.01%)</title><rect x="93.7922%" y="645" width="0.0117%" height="15" fill="rgb(215,56,53)" fg:x="34717721759" fg:w="4346597"/><text x="94.0422%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (4,346,597 samples, 0.01%)</title><rect x="93.7922%" y="629" width="0.0117%" height="15" fill="rgb(217,60,2)" fg:x="34717721759" fg:w="4346597"/><text x="94.0422%" y="639.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (377,004,174 samples, 1.02%)</title><rect x="92.8205%" y="725" width="1.0185%" height="15" fill="rgb(207,26,24)" fg:x="34358057840" fg:w="377004174"/><text x="93.0705%" y="735.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::try_reset (12,993,658 samples, 0.04%)</title><rect x="93.8039%" y="709" width="0.0351%" height="15" fill="rgb(252,210,15)" fg:x="34722068356" fg:w="12993658"/><text x="94.0539%" y="719.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (12,681,745 samples, 0.03%)</title><rect x="93.8390%" y="725" width="0.0343%" height="15" fill="rgb(253,209,26)" fg:x="34735062014" fg:w="12681745"/><text x="94.0890%" y="735.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (12,681,745 samples, 0.03%)</title><rect x="93.8390%" y="709" width="0.0343%" height="15" fill="rgb(238,170,14)" fg:x="34735062014" fg:w="12681745"/><text x="94.0890%" y="719.50"></text></g><g><title>core::cell::BorrowRefMut::new (12,681,745 samples, 0.03%)</title><rect x="93.8390%" y="693" width="0.0343%" height="15" fill="rgb(216,178,15)" fg:x="34735062014" fg:w="12681745"/><text x="94.0890%" y="703.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4,186,182 samples, 0.01%)</title><rect x="93.8620%" y="677" width="0.0113%" height="15" fill="rgb(250,197,2)" fg:x="34743557577" fg:w="4186182"/><text x="94.1120%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4,186,182 samples, 0.01%)</title><rect x="93.8620%" y="661" width="0.0113%" height="15" fill="rgb(212,70,42)" fg:x="34743557577" fg:w="4186182"/><text x="94.1120%" y="671.50"></text></g><g><title>core::mem::replace (4,186,182 samples, 0.01%)</title><rect x="93.8620%" y="645" width="0.0113%" height="15" fill="rgb(227,213,9)" fg:x="34743557577" fg:w="4186182"/><text x="94.1120%" y="655.50"></text></g><g><title>mws5::dict::Dict::match_count (410,915,924 samples, 1.11%)</title><rect x="92.8095%" y="741" width="1.1101%" height="15" fill="rgb(245,99,25)" fg:x="34353958864" fg:w="410915924"/><text x="93.0595%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;mws5::words::Word,usize&gt;&gt;&gt; (17,131,029 samples, 0.05%)</title><rect x="93.8733%" y="725" width="0.0463%" height="15" fill="rgb(250,82,29)" fg:x="34747743759" fg:w="17131029"/><text x="94.1233%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (17,131,029 samples, 0.05%)</title><rect x="93.8733%" y="709" width="0.0463%" height="15" fill="rgb(241,226,54)" fg:x="34747743759" fg:w="17131029"/><text x="94.1233%" y="719.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (17,131,029 samples, 0.05%)</title><rect x="93.8733%" y="693" width="0.0463%" height="15" fill="rgb(221,99,41)" fg:x="34747743759" fg:w="17131029"/><text x="94.1233%" y="703.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (17,131,029 samples, 0.05%)</title><rect x="93.8733%" y="677" width="0.0463%" height="15" fill="rgb(213,90,21)" fg:x="34747743759" fg:w="17131029"/><text x="94.1233%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (17,131,029 samples, 0.05%)</title><rect x="93.8733%" y="661" width="0.0463%" height="15" fill="rgb(205,208,24)" fg:x="34747743759" fg:w="17131029"/><text x="94.1233%" y="671.50"></text></g><g><title>core::mem::replace (17,131,029 samples, 0.05%)</title><rect x="93.8733%" y="645" width="0.0463%" height="15" fill="rgb(246,31,12)" fg:x="34747743759" fg:w="17131029"/><text x="94.1233%" y="655.50"></text></g><g><title>mws5::search::best_pos (551,920,920 samples, 1.49%)</title><rect x="92.4975%" y="757" width="1.4911%" height="15" fill="rgb(213,154,6)" fg:x="34238471517" fg:w="551920920"/><text x="92.7475%" y="767.50"></text></g><g><title>mws5::squares::Square::get_pos (25,517,649 samples, 0.07%)</title><rect x="93.9196%" y="741" width="0.0689%" height="15" fill="rgb(222,163,29)" fg:x="34764874788" fg:w="25517649"/><text x="94.1696%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (22,819,936 samples, 0.06%)</title><rect x="94.6328%" y="533" width="0.0616%" height="15" fill="rgb(227,201,8)" fg:x="35028868186" fg:w="22819936"/><text x="94.8828%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (39,501,710 samples, 0.11%)</title><rect x="94.5985%" y="549" width="0.1067%" height="15" fill="rgb(233,9,32)" fg:x="35016185342" fg:w="39501710"/><text x="94.8485%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3,998,930 samples, 0.01%)</title><rect x="94.6944%" y="533" width="0.0108%" height="15" fill="rgb(217,54,24)" fg:x="35051688122" fg:w="3998930"/><text x="94.9444%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (75,182,251 samples, 0.20%)</title><rect x="94.7947%" y="533" width="0.2031%" height="15" fill="rgb(235,192,0)" fg:x="35088799008" fg:w="75182251"/><text x="95.0447%" y="543.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (213,607,049 samples, 0.58%)</title><rect x="94.5226%" y="597" width="0.5771%" height="15" fill="rgb(235,45,9)" fg:x="34988104794" fg:w="213607049"/><text x="94.7726%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (213,607,049 samples, 0.58%)</title><rect x="94.5226%" y="581" width="0.5771%" height="15" fill="rgb(246,42,40)" fg:x="34988104794" fg:w="213607049"/><text x="94.7726%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (213,607,049 samples, 0.58%)</title><rect x="94.5226%" y="565" width="0.5771%" height="15" fill="rgb(248,111,24)" fg:x="34988104794" fg:w="213607049"/><text x="94.7726%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (146,024,791 samples, 0.39%)</title><rect x="94.7052%" y="549" width="0.3945%" height="15" fill="rgb(249,65,22)" fg:x="35055687052" fg:w="146024791"/><text x="94.9552%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (37,730,584 samples, 0.10%)</title><rect x="94.9978%" y="533" width="0.1019%" height="15" fill="rgb(238,111,51)" fg:x="35163981259" fg:w="37730584"/><text x="95.2478%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (258,435,289 samples, 0.70%)</title><rect x="94.4669%" y="629" width="0.6982%" height="15" fill="rgb(250,118,22)" fg:x="34967483574" fg:w="258435289"/><text x="94.7169%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (237,814,069 samples, 0.64%)</title><rect x="94.5226%" y="613" width="0.6425%" height="15" fill="rgb(234,84,26)" fg:x="34988104794" fg:w="237814069"/><text x="94.7726%" y="623.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (24,207,020 samples, 0.07%)</title><rect x="95.0997%" y="597" width="0.0654%" height="15" fill="rgb(243,172,12)" fg:x="35201711843" fg:w="24207020"/><text x="95.3497%" y="607.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (24,207,020 samples, 0.07%)</title><rect x="95.0997%" y="581" width="0.0654%" height="15" fill="rgb(236,150,49)" fg:x="35201711843" fg:w="24207020"/><text x="95.3497%" y="591.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (24,207,020 samples, 0.07%)</title><rect x="95.0997%" y="565" width="0.0654%" height="15" fill="rgb(225,197,26)" fg:x="35201711843" fg:w="24207020"/><text x="95.3497%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (24,207,020 samples, 0.07%)</title><rect x="95.0997%" y="549" width="0.0654%" height="15" fill="rgb(214,17,42)" fg:x="35201711843" fg:w="24207020"/><text x="95.3497%" y="559.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4,258,164 samples, 0.01%)</title><rect x="95.1976%" y="581" width="0.0115%" height="15" fill="rgb(224,165,40)" fg:x="35237948261" fg:w="4258164"/><text x="95.4476%" y="591.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (4,258,164 samples, 0.01%)</title><rect x="95.1976%" y="565" width="0.0115%" height="15" fill="rgb(246,100,4)" fg:x="35237948261" fg:w="4258164"/><text x="95.4476%" y="575.50"></text></g><g><title>core::intrinsics::likely (4,335,549 samples, 0.01%)</title><rect x="95.2091%" y="581" width="0.0117%" height="15" fill="rgb(222,103,0)" fg:x="35242208645" fg:w="4335549"/><text x="95.4591%" y="591.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty (20,463,216 samples, 0.06%)</title><rect x="95.2208%" y="581" width="0.0553%" height="15" fill="rgb(227,189,26)" fg:x="35246544194" fg:w="20463216"/><text x="95.4708%" y="591.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (20,463,216 samples, 0.06%)</title><rect x="95.2208%" y="565" width="0.0553%" height="15" fill="rgb(214,202,17)" fg:x="35246544194" fg:w="20463216"/><text x="95.4708%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (20,463,216 samples, 0.06%)</title><rect x="95.2208%" y="549" width="0.0553%" height="15" fill="rgb(229,111,3)" fg:x="35246544194" fg:w="20463216"/><text x="95.4708%" y="559.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (21,518,677 samples, 0.06%)</title><rect x="95.2761%" y="581" width="0.0581%" height="15" fill="rgb(229,172,15)" fg:x="35267007410" fg:w="21518677"/><text x="95.5261%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (21,518,677 samples, 0.06%)</title><rect x="95.2761%" y="565" width="0.0581%" height="15" fill="rgb(230,224,35)" fg:x="35267007410" fg:w="21518677"/><text x="95.5261%" y="575.50"></text></g><g><title>hashbrown::control::tag::Tag::full (4,055,500 samples, 0.01%)</title><rect x="95.3342%" y="581" width="0.0110%" height="15" fill="rgb(251,141,6)" fg:x="35288526087" fg:w="4055500"/><text x="95.5842%" y="591.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (33,451,242 samples, 0.09%)</title><rect x="95.3452%" y="581" width="0.0904%" height="15" fill="rgb(225,208,6)" fg:x="35292581587" fg:w="33451242"/><text x="95.5952%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (8,401,825 samples, 0.02%)</title><rect x="95.4356%" y="581" width="0.0227%" height="15" fill="rgb(246,181,16)" fg:x="35326032829" fg:w="8401825"/><text x="95.6856%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (8,401,825 samples, 0.02%)</title><rect x="95.4356%" y="565" width="0.0227%" height="15" fill="rgb(227,129,36)" fg:x="35326032829" fg:w="8401825"/><text x="95.6856%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (8,401,825 samples, 0.02%)</title><rect x="95.4356%" y="549" width="0.0227%" height="15" fill="rgb(248,117,24)" fg:x="35326032829" fg:w="8401825"/><text x="95.6856%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (8,401,825 samples, 0.02%)</title><rect x="95.4356%" y="533" width="0.0227%" height="15" fill="rgb(214,185,35)" fg:x="35326032829" fg:w="8401825"/><text x="95.6856%" y="543.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (379,770,809 samples, 1.03%)</title><rect x="94.4440%" y="709" width="1.0260%" height="15" fill="rgb(236,150,34)" fg:x="34959008800" fg:w="379770809"/><text x="94.6940%" y="719.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (379,770,809 samples, 1.03%)</title><rect x="94.4440%" y="693" width="1.0260%" height="15" fill="rgb(243,228,27)" fg:x="34959008800" fg:w="379770809"/><text x="94.6940%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (379,770,809 samples, 1.03%)</title><rect x="94.4440%" y="677" width="1.0260%" height="15" fill="rgb(245,77,44)" fg:x="34959008800" fg:w="379770809"/><text x="94.6940%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (379,770,809 samples, 1.03%)</title><rect x="94.4440%" y="661" width="1.0260%" height="15" fill="rgb(235,214,42)" fg:x="34959008800" fg:w="379770809"/><text x="94.6940%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (379,770,809 samples, 1.03%)</title><rect x="94.4440%" y="645" width="1.0260%" height="15" fill="rgb(221,74,3)" fg:x="34959008800" fg:w="379770809"/><text x="94.6940%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (112,860,746 samples, 0.30%)</title><rect x="95.1651%" y="629" width="0.3049%" height="15" fill="rgb(206,121,29)" fg:x="35225918863" fg:w="112860746"/><text x="95.4151%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (112,860,746 samples, 0.30%)</title><rect x="95.1651%" y="613" width="0.3049%" height="15" fill="rgb(249,131,53)" fg:x="35225918863" fg:w="112860746"/><text x="95.4151%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (108,820,734 samples, 0.29%)</title><rect x="95.1760%" y="597" width="0.2940%" height="15" fill="rgb(236,170,29)" fg:x="35229958875" fg:w="108820734"/><text x="95.4260%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (4,344,955 samples, 0.01%)</title><rect x="95.4583%" y="581" width="0.0117%" height="15" fill="rgb(247,96,15)" fg:x="35334434654" fg:w="4344955"/><text x="95.7083%" y="591.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::attach (7,818,957 samples, 0.02%)</title><rect x="95.4700%" y="677" width="0.0211%" height="15" fill="rgb(211,210,7)" fg:x="35338779609" fg:w="7818957"/><text x="95.7200%" y="687.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::detach (12,646,076 samples, 0.03%)</title><rect x="95.4911%" y="677" width="0.0342%" height="15" fill="rgb(240,88,50)" fg:x="35346598566" fg:w="12646076"/><text x="95.7411%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12,356,119 samples, 0.03%)</title><rect x="95.7126%" y="533" width="0.0334%" height="15" fill="rgb(209,229,26)" fg:x="35428571823" fg:w="12356119"/><text x="95.9626%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (28,383,656 samples, 0.08%)</title><rect x="95.6921%" y="549" width="0.0767%" height="15" fill="rgb(210,68,23)" fg:x="35420995544" fg:w="28383656"/><text x="95.9421%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8,451,258 samples, 0.02%)</title><rect x="95.7460%" y="533" width="0.0228%" height="15" fill="rgb(229,180,13)" fg:x="35440927942" fg:w="8451258"/><text x="95.9960%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (42,649,679 samples, 0.12%)</title><rect x="95.8480%" y="533" width="0.1152%" height="15" fill="rgb(236,53,44)" fg:x="35478697111" fg:w="42649679"/><text x="96.0980%" y="543.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (165,756,108 samples, 0.45%)</title><rect x="95.5939%" y="597" width="0.4478%" height="15" fill="rgb(244,214,29)" fg:x="35384621973" fg:w="165756108"/><text x="95.8439%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (165,756,108 samples, 0.45%)</title><rect x="95.5939%" y="581" width="0.4478%" height="15" fill="rgb(220,75,29)" fg:x="35384621973" fg:w="165756108"/><text x="95.8439%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (165,756,108 samples, 0.45%)</title><rect x="95.5939%" y="565" width="0.4478%" height="15" fill="rgb(214,183,37)" fg:x="35384621973" fg:w="165756108"/><text x="95.8439%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (100,998,881 samples, 0.27%)</title><rect x="95.7688%" y="549" width="0.2729%" height="15" fill="rgb(239,117,29)" fg:x="35449379200" fg:w="100998881"/><text x="96.0188%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (29,031,291 samples, 0.08%)</title><rect x="95.9632%" y="533" width="0.0784%" height="15" fill="rgb(237,171,35)" fg:x="35521346790" fg:w="29031291"/><text x="96.2132%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (194,583,716 samples, 0.53%)</title><rect x="95.5602%" y="629" width="0.5257%" height="15" fill="rgb(229,178,53)" fg:x="35372179826" fg:w="194583716"/><text x="95.8102%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (182,141,569 samples, 0.49%)</title><rect x="95.5939%" y="613" width="0.4921%" height="15" fill="rgb(210,102,19)" fg:x="35384621973" fg:w="182141569"/><text x="95.8439%" y="623.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (16,385,461 samples, 0.04%)</title><rect x="96.0417%" y="597" width="0.0443%" height="15" fill="rgb(235,127,22)" fg:x="35550378081" fg:w="16385461"/><text x="96.2917%" y="607.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (16,385,461 samples, 0.04%)</title><rect x="96.0417%" y="581" width="0.0443%" height="15" fill="rgb(244,31,31)" fg:x="35550378081" fg:w="16385461"/><text x="96.2917%" y="591.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (16,385,461 samples, 0.04%)</title><rect x="96.0417%" y="565" width="0.0443%" height="15" fill="rgb(231,43,21)" fg:x="35550378081" fg:w="16385461"/><text x="96.2917%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (16,385,461 samples, 0.04%)</title><rect x="96.0417%" y="549" width="0.0443%" height="15" fill="rgb(217,131,35)" fg:x="35550378081" fg:w="16385461"/><text x="96.2917%" y="559.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4,387,157 samples, 0.01%)</title><rect x="96.1547%" y="581" width="0.0119%" height="15" fill="rgb(221,149,4)" fg:x="35592203492" fg:w="4387157"/><text x="96.4047%" y="591.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (4,387,157 samples, 0.01%)</title><rect x="96.1547%" y="565" width="0.0119%" height="15" fill="rgb(232,170,28)" fg:x="35592203492" fg:w="4387157"/><text x="96.4047%" y="575.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (4,387,157 samples, 0.01%)</title><rect x="96.1547%" y="549" width="0.0119%" height="15" fill="rgb(238,56,10)" fg:x="35592203492" fg:w="4387157"/><text x="96.4047%" y="559.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (4,387,157 samples, 0.01%)</title><rect x="96.1547%" y="533" width="0.0119%" height="15" fill="rgb(235,196,14)" fg:x="35592203492" fg:w="4387157"/><text x="96.4047%" y="543.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load (4,328,773 samples, 0.01%)</title><rect x="96.1665%" y="581" width="0.0117%" height="15" fill="rgb(216,45,48)" fg:x="35596590649" fg:w="4328773"/><text x="96.4165%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (4,328,773 samples, 0.01%)</title><rect x="96.1665%" y="565" width="0.0117%" height="15" fill="rgb(238,213,17)" fg:x="35596590649" fg:w="4328773"/><text x="96.4165%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4,328,773 samples, 0.01%)</title><rect x="96.1665%" y="549" width="0.0117%" height="15" fill="rgb(212,13,2)" fg:x="35596590649" fg:w="4328773"/><text x="96.4165%" y="559.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty (12,688,067 samples, 0.03%)</title><rect x="96.1782%" y="581" width="0.0343%" height="15" fill="rgb(240,114,20)" fg:x="35600919422" fg:w="12688067"/><text x="96.4282%" y="591.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (12,688,067 samples, 0.03%)</title><rect x="96.1782%" y="565" width="0.0343%" height="15" fill="rgb(228,41,40)" fg:x="35600919422" fg:w="12688067"/><text x="96.4282%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (12,688,067 samples, 0.03%)</title><rect x="96.1782%" y="549" width="0.0343%" height="15" fill="rgb(244,132,35)" fg:x="35600919422" fg:w="12688067"/><text x="96.4282%" y="559.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (4,335,732 samples, 0.01%)</title><rect x="96.2125%" y="581" width="0.0117%" height="15" fill="rgb(253,189,4)" fg:x="35613607489" fg:w="4335732"/><text x="96.4625%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4,335,732 samples, 0.01%)</title><rect x="96.2125%" y="565" width="0.0117%" height="15" fill="rgb(224,37,19)" fg:x="35613607489" fg:w="4335732"/><text x="96.4625%" y="575.50"></text></g><g><title>hashbrown::control::tag::Tag::full (16,578,703 samples, 0.04%)</title><rect x="96.2242%" y="581" width="0.0448%" height="15" fill="rgb(235,223,18)" fg:x="35617943221" fg:w="16578703"/><text x="96.4742%" y="591.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (4,275,701 samples, 0.01%)</title><rect x="96.2798%" y="565" width="0.0116%" height="15" fill="rgb(235,163,25)" fg:x="35638544310" fg:w="4275701"/><text x="96.5298%" y="575.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (4,275,701 samples, 0.01%)</title><rect x="96.2798%" y="549" width="0.0116%" height="15" fill="rgb(217,145,28)" fg:x="35638544310" fg:w="4275701"/><text x="96.5298%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4,275,701 samples, 0.01%)</title><rect x="96.2798%" y="533" width="0.0116%" height="15" fill="rgb(223,223,32)" fg:x="35638544310" fg:w="4275701"/><text x="96.5298%" y="543.50"></text></g><g><title>&lt;caches::lru::raw::KeyWrapper&lt;K&gt; as core::cmp::PartialEq&gt;::eq (4,275,701 samples, 0.01%)</title><rect x="96.2798%" y="517" width="0.0116%" height="15" fill="rgb(227,189,39)" fg:x="35638544310" fg:w="4275701"/><text x="96.5298%" y="527.50"></text></g><g><title>&lt;mws5::words::Word as core::cmp::PartialEq&gt;::eq (4,275,701 samples, 0.01%)</title><rect x="96.2798%" y="501" width="0.0116%" height="15" fill="rgb(248,10,22)" fg:x="35638544310" fg:w="4275701"/><text x="96.5298%" y="511.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4,275,701 samples, 0.01%)</title><rect x="96.2798%" y="485" width="0.0116%" height="15" fill="rgb(248,46,39)" fg:x="35638544310" fg:w="4275701"/><text x="96.5298%" y="495.50"></text></g><g><title>sysvec_apic_timer_interrupt (4,275,701 samples, 0.01%)</title><rect x="96.2798%" y="469" width="0.0116%" height="15" fill="rgb(248,113,48)" fg:x="35638544310" fg:w="4275701"/><text x="96.5298%" y="479.50"></text></g><g><title>__sysvec_apic_timer_interrupt (4,275,701 samples, 0.01%)</title><rect x="96.2798%" y="453" width="0.0116%" height="15" fill="rgb(245,16,25)" fg:x="35638544310" fg:w="4275701"/><text x="96.5298%" y="463.50"></text></g><g><title>hrtimer_interrupt (4,275,701 samples, 0.01%)</title><rect x="96.2798%" y="437" width="0.0116%" height="15" fill="rgb(249,152,16)" fg:x="35638544310" fg:w="4275701"/><text x="96.5298%" y="447.50"></text></g><g><title>__hrtimer_run_queues (4,275,701 samples, 0.01%)</title><rect x="96.2798%" y="421" width="0.0116%" height="15" fill="rgb(250,16,1)" fg:x="35638544310" fg:w="4275701"/><text x="96.5298%" y="431.50"></text></g><g><title>tick_nohz_handler (4,275,701 samples, 0.01%)</title><rect x="96.2798%" y="405" width="0.0116%" height="15" fill="rgb(249,138,3)" fg:x="35638544310" fg:w="4275701"/><text x="96.5298%" y="415.50"></text></g><g><title>update_process_times (4,275,701 samples, 0.01%)</title><rect x="96.2798%" y="389" width="0.0116%" height="15" fill="rgb(227,71,41)" fg:x="35638544310" fg:w="4275701"/><text x="96.5298%" y="399.50"></text></g><g><title>sched_tick (4,275,701 samples, 0.01%)</title><rect x="96.2798%" y="373" width="0.0116%" height="15" fill="rgb(209,184,23)" fg:x="35638544310" fg:w="4275701"/><text x="96.5298%" y="383.50"></text></g><g><title>task_tick_fair (4,275,701 samples, 0.01%)</title><rect x="96.2798%" y="357" width="0.0116%" height="15" fill="rgb(223,215,31)" fg:x="35638544310" fg:w="4275701"/><text x="96.5298%" y="367.50"></text></g><g><title>update_curr (4,275,701 samples, 0.01%)</title><rect x="96.2798%" y="341" width="0.0116%" height="15" fill="rgb(210,146,28)" fg:x="35638544310" fg:w="4275701"/><text x="96.5298%" y="351.50"></text></g><g><title>update_curr_se (4,275,701 samples, 0.01%)</title><rect x="96.2798%" y="325" width="0.0116%" height="15" fill="rgb(209,183,41)" fg:x="35638544310" fg:w="4275701"/><text x="96.5298%" y="335.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (316,045,941 samples, 0.85%)</title><rect x="95.4700%" y="709" width="0.8538%" height="15" fill="rgb(209,224,45)" fg:x="35338779609" fg:w="316045941"/><text x="95.7200%" y="719.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (316,045,941 samples, 0.85%)</title><rect x="95.4700%" y="693" width="0.8538%" height="15" fill="rgb(224,209,51)" fg:x="35338779609" fg:w="316045941"/><text x="95.7200%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (295,580,908 samples, 0.80%)</title><rect x="95.5253%" y="677" width="0.7985%" height="15" fill="rgb(223,17,39)" fg:x="35359244642" fg:w="295580908"/><text x="95.7753%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (295,580,908 samples, 0.80%)</title><rect x="95.5253%" y="661" width="0.7985%" height="15" fill="rgb(234,204,37)" fg:x="35359244642" fg:w="295580908"/><text x="95.7753%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (295,580,908 samples, 0.80%)</title><rect x="95.5253%" y="645" width="0.7985%" height="15" fill="rgb(236,120,5)" fg:x="35359244642" fg:w="295580908"/><text x="95.7753%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (88,062,008 samples, 0.24%)</title><rect x="96.0859%" y="629" width="0.2379%" height="15" fill="rgb(248,97,27)" fg:x="35566763542" fg:w="88062008"/><text x="96.3359%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (88,062,008 samples, 0.24%)</title><rect x="96.0859%" y="613" width="0.2379%" height="15" fill="rgb(240,66,17)" fg:x="35566763542" fg:w="88062008"/><text x="96.3359%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (83,665,595 samples, 0.23%)</title><rect x="96.0978%" y="597" width="0.2260%" height="15" fill="rgb(210,79,3)" fg:x="35571159955" fg:w="83665595"/><text x="96.3478%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (20,303,626 samples, 0.05%)</title><rect x="96.2690%" y="581" width="0.0549%" height="15" fill="rgb(214,176,27)" fg:x="35634521924" fg:w="20303626"/><text x="96.5190%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (12,005,539 samples, 0.03%)</title><rect x="96.2914%" y="565" width="0.0324%" height="15" fill="rgb(235,185,3)" fg:x="35642820011" fg:w="12005539"/><text x="96.5414%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (12,005,539 samples, 0.03%)</title><rect x="96.2914%" y="549" width="0.0324%" height="15" fill="rgb(227,24,12)" fg:x="35642820011" fg:w="12005539"/><text x="96.5414%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (12,005,539 samples, 0.03%)</title><rect x="96.2914%" y="533" width="0.0324%" height="15" fill="rgb(252,169,48)" fg:x="35642820011" fg:w="12005539"/><text x="96.5414%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (20,663,252 samples, 0.06%)</title><rect x="96.5860%" y="597" width="0.0558%" height="15" fill="rgb(212,65,1)" fg:x="35751855225" fg:w="20663252"/><text x="96.8360%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (54,205,559 samples, 0.15%)</title><rect x="96.5177%" y="613" width="0.1464%" height="15" fill="rgb(242,39,24)" fg:x="35726591310" fg:w="54205559"/><text x="96.7677%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8,278,392 samples, 0.02%)</title><rect x="96.6418%" y="597" width="0.0224%" height="15" fill="rgb(249,32,23)" fg:x="35772518477" fg:w="8278392"/><text x="96.8918%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (73,817,850 samples, 0.20%)</title><rect x="96.7109%" y="597" width="0.1994%" height="15" fill="rgb(251,195,23)" fg:x="35798110588" fg:w="73817850"/><text x="96.9609%" y="607.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (258,559,892 samples, 0.70%)</title><rect x="96.3699%" y="661" width="0.6985%" height="15" fill="rgb(236,174,8)" fg:x="35671862716" fg:w="258559892"/><text x="96.6199%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (258,559,892 samples, 0.70%)</title><rect x="96.3699%" y="645" width="0.6985%" height="15" fill="rgb(220,197,8)" fg:x="35671862716" fg:w="258559892"/><text x="96.6199%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (258,559,892 samples, 0.70%)</title><rect x="96.3699%" y="629" width="0.6985%" height="15" fill="rgb(240,108,37)" fg:x="35671862716" fg:w="258559892"/><text x="96.6199%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (149,625,739 samples, 0.40%)</title><rect x="96.6641%" y="613" width="0.4042%" height="15" fill="rgb(232,176,24)" fg:x="35780796869" fg:w="149625739"/><text x="96.9141%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (58,494,170 samples, 0.16%)</title><rect x="96.9103%" y="597" width="0.1580%" height="15" fill="rgb(243,35,29)" fg:x="35871928438" fg:w="58494170"/><text x="97.1603%" y="607.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::hash_key (293,336,120 samples, 0.79%)</title><rect x="96.3699%" y="693" width="0.7925%" height="15" fill="rgb(210,37,18)" fg:x="35671862716" fg:w="293336120"/><text x="96.6199%" y="703.50"></text></g><g><title>&lt;caches::lfu::DefaultKeyHasher&lt;K&gt; as caches::lfu::KeyHasher&lt;K&gt;&gt;::hash_key (293,336,120 samples, 0.79%)</title><rect x="96.3699%" y="677" width="0.7925%" height="15" fill="rgb(224,184,40)" fg:x="35671862716" fg:w="293336120"/><text x="96.6199%" y="687.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (34,776,228 samples, 0.09%)</title><rect x="97.0684%" y="661" width="0.0940%" height="15" fill="rgb(236,39,29)" fg:x="35930422608" fg:w="34776228"/><text x="97.3184%" y="671.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (34,776,228 samples, 0.09%)</title><rect x="97.0684%" y="645" width="0.0940%" height="15" fill="rgb(232,48,39)" fg:x="35930422608" fg:w="34776228"/><text x="97.3184%" y="655.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (34,776,228 samples, 0.09%)</title><rect x="97.0684%" y="629" width="0.0940%" height="15" fill="rgb(236,34,42)" fg:x="35930422608" fg:w="34776228"/><text x="97.3184%" y="639.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (34,776,228 samples, 0.09%)</title><rect x="97.0684%" y="613" width="0.0940%" height="15" fill="rgb(243,106,37)" fg:x="35930422608" fg:w="34776228"/><text x="97.3184%" y="623.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::clear (3,964,269 samples, 0.01%)</title><rect x="97.2193%" y="661" width="0.0107%" height="15" fill="rgb(218,96,6)" fg:x="35986284544" fg:w="3964269"/><text x="97.4693%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::fill (3,964,269 samples, 0.01%)</title><rect x="97.2193%" y="645" width="0.0107%" height="15" fill="rgb(235,130,12)" fg:x="35986284544" fg:w="3964269"/><text x="97.4693%" y="655.50"></text></g><g><title>&lt;[T] as core::slice::specialize::SpecFill&lt;T&gt;&gt;::spec_fill (3,964,269 samples, 0.01%)</title><rect x="97.2193%" y="629" width="0.0107%" height="15" fill="rgb(231,95,0)" fg:x="35986284544" fg:w="3964269"/><text x="97.4693%" y="639.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::try_reset (124,274,120 samples, 0.34%)</title><rect x="97.1623%" y="693" width="0.3357%" height="15" fill="rgb(228,12,23)" fg:x="35965198836" fg:w="124274120"/><text x="97.4123%" y="703.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::reset (103,188,412 samples, 0.28%)</title><rect x="97.2193%" y="677" width="0.2788%" height="15" fill="rgb(216,12,1)" fg:x="35986284544" fg:w="103188412"/><text x="97.4693%" y="687.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset (99,224,143 samples, 0.27%)</title><rect x="97.2300%" y="661" width="0.2681%" height="15" fill="rgb(219,59,3)" fg:x="35990248813" fg:w="99224143"/><text x="97.4800%" y="671.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (99,224,143 samples, 0.27%)</title><rect x="97.2300%" y="645" width="0.2681%" height="15" fill="rgb(215,208,46)" fg:x="35990248813" fg:w="99224143"/><text x="97.4800%" y="655.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset::_{{closure}} (99,224,143 samples, 0.27%)</title><rect x="97.2300%" y="629" width="0.2681%" height="15" fill="rgb(254,224,29)" fg:x="35990248813" fg:w="99224143"/><text x="97.4800%" y="639.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset (99,224,143 samples, 0.27%)</title><rect x="97.2300%" y="613" width="0.2681%" height="15" fill="rgb(232,14,29)" fg:x="35990248813" fg:w="99224143"/><text x="97.4800%" y="623.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (99,224,143 samples, 0.27%)</title><rect x="97.2300%" y="597" width="0.2681%" height="15" fill="rgb(208,45,52)" fg:x="35990248813" fg:w="99224143"/><text x="97.4800%" y="607.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset::_{{closure}} (99,224,143 samples, 0.27%)</title><rect x="97.2300%" y="581" width="0.2681%" height="15" fill="rgb(234,191,28)" fg:x="35990248813" fg:w="99224143"/><text x="97.4800%" y="591.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4,321,596 samples, 0.01%)</title><rect x="97.4864%" y="565" width="0.0117%" height="15" fill="rgb(244,67,43)" fg:x="36085151360" fg:w="4321596"/><text x="97.7364%" y="575.50"></text></g><g><title>sysvec_apic_timer_interrupt (4,321,596 samples, 0.01%)</title><rect x="97.4864%" y="549" width="0.0117%" height="15" fill="rgb(236,189,24)" fg:x="36085151360" fg:w="4321596"/><text x="97.7364%" y="559.50"></text></g><g><title>__sysvec_apic_timer_interrupt (4,321,596 samples, 0.01%)</title><rect x="97.4864%" y="533" width="0.0117%" height="15" fill="rgb(239,214,33)" fg:x="36085151360" fg:w="4321596"/><text x="97.7364%" y="543.50"></text></g><g><title>hrtimer_interrupt (4,321,596 samples, 0.01%)</title><rect x="97.4864%" y="517" width="0.0117%" height="15" fill="rgb(226,176,41)" fg:x="36085151360" fg:w="4321596"/><text x="97.7364%" y="527.50"></text></g><g><title>__hrtimer_run_queues (4,321,596 samples, 0.01%)</title><rect x="97.4864%" y="501" width="0.0117%" height="15" fill="rgb(248,47,8)" fg:x="36085151360" fg:w="4321596"/><text x="97.7364%" y="511.50"></text></g><g><title>tick_nohz_handler (4,321,596 samples, 0.01%)</title><rect x="97.4864%" y="485" width="0.0117%" height="15" fill="rgb(218,81,44)" fg:x="36085151360" fg:w="4321596"/><text x="97.7364%" y="495.50"></text></g><g><title>update_process_times (4,321,596 samples, 0.01%)</title><rect x="97.4864%" y="469" width="0.0117%" height="15" fill="rgb(213,98,6)" fg:x="36085151360" fg:w="4321596"/><text x="97.7364%" y="479.50"></text></g><g><title>sched_balance_trigger (4,321,596 samples, 0.01%)</title><rect x="97.4864%" y="453" width="0.0117%" height="15" fill="rgb(222,85,22)" fg:x="36085151360" fg:w="4321596"/><text x="97.7364%" y="463.50"></text></g><g><title>sched_use_asym_prio (4,321,596 samples, 0.01%)</title><rect x="97.4864%" y="437" width="0.0117%" height="15" fill="rgb(239,46,39)" fg:x="36085151360" fg:w="4321596"/><text x="97.7364%" y="447.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::add (4,294,017 samples, 0.01%)</title><rect x="97.5092%" y="677" width="0.0116%" height="15" fill="rgb(237,12,29)" fg:x="36093605956" fg:w="4294017"/><text x="97.7592%" y="687.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains_or_add (16,667,649 samples, 0.05%)</title><rect x="97.4981%" y="693" width="0.0450%" height="15" fill="rgb(214,77,8)" fg:x="36089472956" fg:w="16667649"/><text x="97.7481%" y="703.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains (8,240,632 samples, 0.02%)</title><rect x="97.5208%" y="677" width="0.0223%" height="15" fill="rgb(217,168,37)" fg:x="36097899973" fg:w="8240632"/><text x="97.7708%" y="687.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::is_set (8,240,632 samples, 0.02%)</title><rect x="97.5208%" y="661" width="0.0223%" height="15" fill="rgb(221,217,23)" fg:x="36097899973" fg:w="8240632"/><text x="97.7708%" y="671.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4,333,167 samples, 0.01%)</title><rect x="97.5314%" y="645" width="0.0117%" height="15" fill="rgb(243,229,36)" fg:x="36101807438" fg:w="4333167"/><text x="97.7814%" y="655.50"></text></g><g><title>sysvec_apic_timer_interrupt (4,333,167 samples, 0.01%)</title><rect x="97.5314%" y="629" width="0.0117%" height="15" fill="rgb(251,163,40)" fg:x="36101807438" fg:w="4333167"/><text x="97.7814%" y="639.50"></text></g><g><title>__sysvec_apic_timer_interrupt (4,333,167 samples, 0.01%)</title><rect x="97.5314%" y="613" width="0.0117%" height="15" fill="rgb(237,222,12)" fg:x="36101807438" fg:w="4333167"/><text x="97.7814%" y="623.50"></text></g><g><title>hrtimer_interrupt (4,333,167 samples, 0.01%)</title><rect x="97.5314%" y="597" width="0.0117%" height="15" fill="rgb(248,132,6)" fg:x="36101807438" fg:w="4333167"/><text x="97.7814%" y="607.50"></text></g><g><title>__hrtimer_run_queues (4,333,167 samples, 0.01%)</title><rect x="97.5314%" y="581" width="0.0117%" height="15" fill="rgb(227,167,50)" fg:x="36101807438" fg:w="4333167"/><text x="97.7814%" y="591.50"></text></g><g><title>tick_nohz_handler (4,333,167 samples, 0.01%)</title><rect x="97.5314%" y="565" width="0.0117%" height="15" fill="rgb(242,84,37)" fg:x="36101807438" fg:w="4333167"/><text x="97.7814%" y="575.50"></text></g><g><title>update_process_times (4,333,167 samples, 0.01%)</title><rect x="97.5314%" y="549" width="0.0117%" height="15" fill="rgb(212,4,50)" fg:x="36101807438" fg:w="4333167"/><text x="97.7814%" y="559.50"></text></g><g><title>sched_balance_trigger (4,333,167 samples, 0.01%)</title><rect x="97.5314%" y="533" width="0.0117%" height="15" fill="rgb(230,228,32)" fg:x="36101807438" fg:w="4333167"/><text x="97.7814%" y="543.50"></text></g><g><title>sched_use_asym_prio (4,333,167 samples, 0.01%)</title><rect x="97.5314%" y="517" width="0.0117%" height="15" fill="rgb(248,217,23)" fg:x="36101807438" fg:w="4333167"/><text x="97.7814%" y="527.50"></text></g><g><title>idle_cpu (4,333,167 samples, 0.01%)</title><rect x="97.5314%" y="501" width="0.0117%" height="15" fill="rgb(238,197,32)" fg:x="36101807438" fg:w="4333167"/><text x="97.7814%" y="511.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::increment (7,672,798 samples, 0.02%)</title><rect x="97.5431%" y="693" width="0.0207%" height="15" fill="rgb(236,106,1)" fg:x="36106140605" fg:w="7672798"/><text x="97.7931%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7,672,798 samples, 0.02%)</title><rect x="97.5431%" y="677" width="0.0207%" height="15" fill="rgb(219,228,13)" fg:x="36106140605" fg:w="7672798"/><text x="97.7931%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7,672,798 samples, 0.02%)</title><rect x="97.5431%" y="661" width="0.0207%" height="15" fill="rgb(238,30,35)" fg:x="36106140605" fg:w="7672798"/><text x="97.7931%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (7,672,798 samples, 0.02%)</title><rect x="97.5431%" y="645" width="0.0207%" height="15" fill="rgb(236,70,23)" fg:x="36106140605" fg:w="7672798"/><text x="97.7931%" y="655.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::increment::_{{closure}} (7,672,798 samples, 0.02%)</title><rect x="97.5431%" y="629" width="0.0207%" height="15" fill="rgb(249,104,48)" fg:x="36106140605" fg:w="7672798"/><text x="97.7931%" y="639.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::increment (3,992,212 samples, 0.01%)</title><rect x="97.5530%" y="613" width="0.0108%" height="15" fill="rgb(254,117,50)" fg:x="36109821191" fg:w="3992212"/><text x="97.8030%" y="623.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::increment (467,431,208 samples, 1.26%)</title><rect x="96.3238%" y="709" width="1.2628%" height="15" fill="rgb(223,152,4)" fg:x="35654825550" fg:w="467431208"/><text x="96.5738%" y="719.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (8,443,355 samples, 0.02%)</title><rect x="97.5638%" y="693" width="0.0228%" height="15" fill="rgb(245,6,2)" fg:x="36113813403" fg:w="8443355"/><text x="97.8138%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (8,443,355 samples, 0.02%)</title><rect x="97.5638%" y="677" width="0.0228%" height="15" fill="rgb(249,150,24)" fg:x="36113813403" fg:w="8443355"/><text x="97.8138%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (8,443,355 samples, 0.02%)</title><rect x="97.5638%" y="661" width="0.0228%" height="15" fill="rgb(228,185,42)" fg:x="36113813403" fg:w="8443355"/><text x="97.8138%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (8,443,355 samples, 0.02%)</title><rect x="97.5638%" y="645" width="0.0228%" height="15" fill="rgb(226,39,33)" fg:x="36113813403" fg:w="8443355"/><text x="97.8138%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (8,443,355 samples, 0.02%)</title><rect x="97.5638%" y="629" width="0.0228%" height="15" fill="rgb(221,166,19)" fg:x="36113813403" fg:w="8443355"/><text x="97.8138%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8,443,355 samples, 0.02%)</title><rect x="97.5638%" y="613" width="0.0228%" height="15" fill="rgb(209,109,2)" fg:x="36113813403" fg:w="8443355"/><text x="97.8138%" y="623.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (8,443,355 samples, 0.02%)</title><rect x="97.5638%" y="597" width="0.0228%" height="15" fill="rgb(252,216,26)" fg:x="36113813403" fg:w="8443355"/><text x="97.8138%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8,443,355 samples, 0.02%)</title><rect x="97.5638%" y="581" width="0.0228%" height="15" fill="rgb(227,173,36)" fg:x="36113813403" fg:w="8443355"/><text x="97.8138%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8,443,355 samples, 0.02%)</title><rect x="97.5638%" y="565" width="0.0228%" height="15" fill="rgb(209,90,7)" fg:x="36113813403" fg:w="8443355"/><text x="97.8138%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8,443,355 samples, 0.02%)</title><rect x="97.5638%" y="549" width="0.0228%" height="15" fill="rgb(250,194,11)" fg:x="36113813403" fg:w="8443355"/><text x="97.8138%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8,443,355 samples, 0.02%)</title><rect x="97.5638%" y="533" width="0.0228%" height="15" fill="rgb(220,72,50)" fg:x="36113813403" fg:w="8443355"/><text x="97.8138%" y="543.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (1,184,382,338 samples, 3.20%)</title><rect x="94.4094%" y="725" width="3.1997%" height="15" fill="rgb(222,106,48)" fg:x="34946175431" fg:w="1184382338"/><text x="94.6594%" y="735.50">&lt;ca..</text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::try_reset (8,301,011 samples, 0.02%)</title><rect x="97.5866%" y="709" width="0.0224%" height="15" fill="rgb(216,220,45)" fg:x="36122256758" fg:w="8301011"/><text x="97.8366%" y="719.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::put (4,318,937 samples, 0.01%)</title><rect x="97.6090%" y="709" width="0.0117%" height="15" fill="rgb(234,112,18)" fg:x="36130557769" fg:w="4318937"/><text x="97.8590%" y="719.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::capturing_put (4,318,937 samples, 0.01%)</title><rect x="97.6090%" y="693" width="0.0117%" height="15" fill="rgb(206,179,9)" fg:x="36130557769" fg:w="4318937"/><text x="97.8590%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (4,318,937 samples, 0.01%)</title><rect x="97.6090%" y="677" width="0.0117%" height="15" fill="rgb(215,115,40)" fg:x="36130557769" fg:w="4318937"/><text x="97.8590%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4,318,937 samples, 0.01%)</title><rect x="97.6090%" y="661" width="0.0117%" height="15" fill="rgb(222,69,34)" fg:x="36130557769" fg:w="4318937"/><text x="97.8590%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (4,318,937 samples, 0.01%)</title><rect x="97.6090%" y="645" width="0.0117%" height="15" fill="rgb(209,161,10)" fg:x="36130557769" fg:w="4318937"/><text x="97.8590%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (4,318,937 samples, 0.01%)</title><rect x="97.6090%" y="629" width="0.0117%" height="15" fill="rgb(217,6,38)" fg:x="36130557769" fg:w="4318937"/><text x="97.8590%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4,318,937 samples, 0.01%)</title><rect x="97.6090%" y="613" width="0.0117%" height="15" fill="rgb(229,229,48)" fg:x="36130557769" fg:w="4318937"/><text x="97.8590%" y="623.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::replace_or_create_node (4,363,479 samples, 0.01%)</title><rect x="97.6207%" y="693" width="0.0118%" height="15" fill="rgb(225,21,28)" fg:x="36134876706" fg:w="4363479"/><text x="97.8707%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (4,363,479 samples, 0.01%)</title><rect x="97.6207%" y="677" width="0.0118%" height="15" fill="rgb(206,33,13)" fg:x="36134876706" fg:w="4363479"/><text x="97.8707%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (4,363,479 samples, 0.01%)</title><rect x="97.6207%" y="661" width="0.0118%" height="15" fill="rgb(242,178,17)" fg:x="36134876706" fg:w="4363479"/><text x="97.8707%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (4,363,479 samples, 0.01%)</title><rect x="97.6207%" y="645" width="0.0118%" height="15" fill="rgb(220,162,5)" fg:x="36134876706" fg:w="4363479"/><text x="97.8707%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (4,363,479 samples, 0.01%)</title><rect x="97.6207%" y="629" width="0.0118%" height="15" fill="rgb(210,33,43)" fg:x="36134876706" fg:w="4363479"/><text x="97.8707%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4,363,479 samples, 0.01%)</title><rect x="97.6207%" y="613" width="0.0118%" height="15" fill="rgb(216,116,54)" fg:x="36134876706" fg:w="4363479"/><text x="97.8707%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (4,363,479 samples, 0.01%)</title><rect x="97.6207%" y="597" width="0.0118%" height="15" fill="rgb(249,92,24)" fg:x="36134876706" fg:w="4363479"/><text x="97.8707%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (4,363,479 samples, 0.01%)</title><rect x="97.6207%" y="581" width="0.0118%" height="15" fill="rgb(231,189,14)" fg:x="36134876706" fg:w="4363479"/><text x="97.8707%" y="591.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (4,363,479 samples, 0.01%)</title><rect x="97.6207%" y="565" width="0.0118%" height="15" fill="rgb(230,8,41)" fg:x="36134876706" fg:w="4363479"/><text x="97.8707%" y="575.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (4,363,479 samples, 0.01%)</title><rect x="97.6207%" y="549" width="0.0118%" height="15" fill="rgb(249,7,27)" fg:x="36134876706" fg:w="4363479"/><text x="97.8707%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4,363,479 samples, 0.01%)</title><rect x="97.6207%" y="533" width="0.0118%" height="15" fill="rgb(232,86,5)" fg:x="36134876706" fg:w="4363479"/><text x="97.8707%" y="543.50"></text></g><g><title>&lt;caches::lru::raw::KeyWrapper&lt;K&gt; as core::cmp::PartialEq&gt;::eq (4,363,479 samples, 0.01%)</title><rect x="97.6207%" y="517" width="0.0118%" height="15" fill="rgb(224,175,18)" fg:x="36134876706" fg:w="4363479"/><text x="97.8707%" y="527.50"></text></g><g><title>&lt;mws5::words::Word as core::cmp::PartialEq&gt;::eq (4,363,479 samples, 0.01%)</title><rect x="97.6207%" y="501" width="0.0118%" height="15" fill="rgb(220,129,12)" fg:x="36134876706" fg:w="4363479"/><text x="97.8707%" y="511.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4,363,479 samples, 0.01%)</title><rect x="97.6207%" y="485" width="0.0118%" height="15" fill="rgb(210,19,36)" fg:x="36134876706" fg:w="4363479"/><text x="97.8707%" y="495.50"></text></g><g><title>sysvec_apic_timer_interrupt (4,363,479 samples, 0.01%)</title><rect x="97.6207%" y="469" width="0.0118%" height="15" fill="rgb(219,96,14)" fg:x="36134876706" fg:w="4363479"/><text x="97.8707%" y="479.50"></text></g><g><title>__irq_exit_rcu (4,363,479 samples, 0.01%)</title><rect x="97.6207%" y="453" width="0.0118%" height="15" fill="rgb(249,106,1)" fg:x="36134876706" fg:w="4363479"/><text x="97.8707%" y="463.50"></text></g><g><title>handle_softirqs (4,363,479 samples, 0.01%)</title><rect x="97.6207%" y="437" width="0.0118%" height="15" fill="rgb(249,155,20)" fg:x="36134876706" fg:w="4363479"/><text x="97.8707%" y="447.50"></text></g><g><title>sched_balance_domains (4,363,479 samples, 0.01%)</title><rect x="97.6207%" y="421" width="0.0118%" height="15" fill="rgb(244,168,9)" fg:x="36134876706" fg:w="4363479"/><text x="97.8707%" y="431.50"></text></g><g><title>sched_balance_rq (4,363,479 samples, 0.01%)</title><rect x="97.6207%" y="405" width="0.0118%" height="15" fill="rgb(216,23,50)" fg:x="36134876706" fg:w="4363479"/><text x="97.8707%" y="415.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::put (12,938,513 samples, 0.03%)</title><rect x="97.6090%" y="725" width="0.0350%" height="15" fill="rgb(224,219,20)" fg:x="36130557769" fg:w="12938513"/><text x="97.8590%" y="735.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::capturing_put (8,619,576 samples, 0.02%)</title><rect x="97.6207%" y="709" width="0.0233%" height="15" fill="rgb(222,156,15)" fg:x="36134876706" fg:w="8619576"/><text x="97.8707%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (4,256,097 samples, 0.01%)</title><rect x="97.6325%" y="693" width="0.0115%" height="15" fill="rgb(231,97,17)" fg:x="36139240185" fg:w="4256097"/><text x="97.8825%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4,256,097 samples, 0.01%)</title><rect x="97.6325%" y="677" width="0.0115%" height="15" fill="rgb(218,70,48)" fg:x="36139240185" fg:w="4256097"/><text x="97.8825%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (4,256,097 samples, 0.01%)</title><rect x="97.6325%" y="661" width="0.0115%" height="15" fill="rgb(212,196,52)" fg:x="36139240185" fg:w="4256097"/><text x="97.8825%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (4,256,097 samples, 0.01%)</title><rect x="97.6325%" y="645" width="0.0115%" height="15" fill="rgb(243,203,18)" fg:x="36139240185" fg:w="4256097"/><text x="97.8825%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4,256,097 samples, 0.01%)</title><rect x="97.6325%" y="629" width="0.0115%" height="15" fill="rgb(252,125,41)" fg:x="36139240185" fg:w="4256097"/><text x="97.8825%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4,256,097 samples, 0.01%)</title><rect x="97.6325%" y="613" width="0.0115%" height="15" fill="rgb(223,180,33)" fg:x="36139240185" fg:w="4256097"/><text x="97.8825%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (4,256,097 samples, 0.01%)</title><rect x="97.6325%" y="597" width="0.0115%" height="15" fill="rgb(254,159,46)" fg:x="36139240185" fg:w="4256097"/><text x="97.8825%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (4,256,097 samples, 0.01%)</title><rect x="97.6325%" y="581" width="0.0115%" height="15" fill="rgb(254,38,10)" fg:x="36139240185" fg:w="4256097"/><text x="97.8825%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (4,256,097 samples, 0.01%)</title><rect x="97.6325%" y="565" width="0.0115%" height="15" fill="rgb(208,217,32)" fg:x="36139240185" fg:w="4256097"/><text x="97.8825%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (4,256,097 samples, 0.01%)</title><rect x="97.6325%" y="549" width="0.0115%" height="15" fill="rgb(221,120,13)" fg:x="36139240185" fg:w="4256097"/><text x="97.8825%" y="559.50"></text></g><g><title>hashbrown::control::tag::TagSliceExt::fill_empty (4,256,097 samples, 0.01%)</title><rect x="97.6325%" y="533" width="0.0115%" height="15" fill="rgb(246,54,52)" fg:x="36139240185" fg:w="4256097"/><text x="97.8825%" y="543.50"></text></g><g><title>&lt;[hashbrown::control::tag::Tag] as hashbrown::control::tag::TagSliceExt&gt;::fill_tag (4,256,097 samples, 0.01%)</title><rect x="97.6325%" y="517" width="0.0115%" height="15" fill="rgb(242,34,25)" fg:x="36139240185" fg:w="4256097"/><text x="97.8825%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (4,256,097 samples, 0.01%)</title><rect x="97.6325%" y="501" width="0.0115%" height="15" fill="rgb(247,209,9)" fg:x="36139240185" fg:w="4256097"/><text x="97.8825%" y="511.50"></text></g><g><title>core::intrinsics::write_bytes (4,256,097 samples, 0.01%)</title><rect x="97.6325%" y="485" width="0.0115%" height="15" fill="rgb(228,71,26)" fg:x="36139240185" fg:w="4256097"/><text x="97.8825%" y="495.50"></text></g><g><title>__memset_avx2_unaligned_erms (4,256,097 samples, 0.01%)</title><rect x="97.6325%" y="469" width="0.0115%" height="15" fill="rgb(222,145,49)" fg:x="36139240185" fg:w="4256097"/><text x="97.8825%" y="479.50"></text></g><g><title>asm_exc_page_fault (4,256,097 samples, 0.01%)</title><rect x="97.6325%" y="453" width="0.0115%" height="15" fill="rgb(218,121,17)" fg:x="36139240185" fg:w="4256097"/><text x="97.8825%" y="463.50"></text></g><g><title>error_entry (4,256,097 samples, 0.01%)</title><rect x="97.6325%" y="437" width="0.0115%" height="15" fill="rgb(244,50,7)" fg:x="36139240185" fg:w="4256097"/><text x="97.8825%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,084,965 samples, 0.02%)</title><rect x="97.6440%" y="661" width="0.0218%" height="15" fill="rgb(246,229,37)" fg:x="36143496282" fg:w="8084965"/><text x="97.8940%" y="671.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (8,084,965 samples, 0.02%)</title><rect x="97.6440%" y="645" width="0.0218%" height="15" fill="rgb(225,18,5)" fg:x="36143496282" fg:w="8084965"/><text x="97.8940%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (33,729,106 samples, 0.09%)</title><rect x="97.6440%" y="725" width="0.0911%" height="15" fill="rgb(213,204,8)" fg:x="36143496282" fg:w="33729106"/><text x="97.8940%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (33,729,106 samples, 0.09%)</title><rect x="97.6440%" y="709" width="0.0911%" height="15" fill="rgb(238,103,6)" fg:x="36143496282" fg:w="33729106"/><text x="97.8940%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (33,729,106 samples, 0.09%)</title><rect x="97.6440%" y="693" width="0.0911%" height="15" fill="rgb(222,25,35)" fg:x="36143496282" fg:w="33729106"/><text x="97.8940%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (33,729,106 samples, 0.09%)</title><rect x="97.6440%" y="677" width="0.0911%" height="15" fill="rgb(213,203,35)" fg:x="36143496282" fg:w="33729106"/><text x="97.8940%" y="687.50"></text></g><g><title>core::iter::adapters::copied::copy_try_fold::_{{closure}} (25,644,141 samples, 0.07%)</title><rect x="97.6658%" y="661" width="0.0693%" height="15" fill="rgb(221,79,53)" fg:x="36151581247" fg:w="25644141"/><text x="97.9158%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (25,644,141 samples, 0.07%)</title><rect x="97.6658%" y="645" width="0.0693%" height="15" fill="rgb(243,200,35)" fg:x="36151581247" fg:w="25644141"/><text x="97.9158%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (25,644,141 samples, 0.07%)</title><rect x="97.6658%" y="629" width="0.0693%" height="15" fill="rgb(248,60,25)" fg:x="36151581247" fg:w="25644141"/><text x="97.9158%" y="639.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (25,644,141 samples, 0.07%)</title><rect x="97.6658%" y="613" width="0.0693%" height="15" fill="rgb(227,53,46)" fg:x="36151581247" fg:w="25644141"/><text x="97.9158%" y="623.50"></text></g><g><title>mws5::words::Word::is_fit (25,644,141 samples, 0.07%)</title><rect x="97.6658%" y="597" width="0.0693%" height="15" fill="rgb(216,120,32)" fg:x="36151581247" fg:w="25644141"/><text x="97.9158%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,272,748 samples, 0.01%)</title><rect x="97.7236%" y="581" width="0.0115%" height="15" fill="rgb(220,134,1)" fg:x="36172952640" fg:w="4272748"/><text x="97.9736%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (4,272,748 samples, 0.01%)</title><rect x="97.7236%" y="565" width="0.0115%" height="15" fill="rgb(237,168,5)" fg:x="36172952640" fg:w="4272748"/><text x="97.9736%" y="575.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,272,748 samples, 0.01%)</title><rect x="97.7236%" y="549" width="0.0115%" height="15" fill="rgb(231,100,33)" fg:x="36172952640" fg:w="4272748"/><text x="97.9736%" y="559.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (4,272,748 samples, 0.01%)</title><rect x="97.7236%" y="533" width="0.0115%" height="15" fill="rgb(236,177,47)" fg:x="36172952640" fg:w="4272748"/><text x="97.9736%" y="543.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4,248,424 samples, 0.01%)</title><rect x="97.7351%" y="709" width="0.0115%" height="15" fill="rgb(235,7,49)" fg:x="36177225388" fg:w="4248424"/><text x="97.9851%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4,248,424 samples, 0.01%)</title><rect x="97.7351%" y="693" width="0.0115%" height="15" fill="rgb(232,119,22)" fg:x="36177225388" fg:w="4248424"/><text x="97.9851%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (4,248,424 samples, 0.01%)</title><rect x="97.7351%" y="677" width="0.0115%" height="15" fill="rgb(254,73,53)" fg:x="36177225388" fg:w="4248424"/><text x="97.9851%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (16,742,698 samples, 0.05%)</title><rect x="97.7351%" y="725" width="0.0452%" height="15" fill="rgb(251,35,20)" fg:x="36177225388" fg:w="16742698"/><text x="97.9851%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12,494,274 samples, 0.03%)</title><rect x="97.7466%" y="709" width="0.0338%" height="15" fill="rgb(241,119,20)" fg:x="36181473812" fg:w="12494274"/><text x="97.9966%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (12,494,274 samples, 0.03%)</title><rect x="97.7466%" y="693" width="0.0338%" height="15" fill="rgb(207,102,14)" fg:x="36181473812" fg:w="12494274"/><text x="97.9966%" y="703.50"></text></g><g><title>mws5::search::cross_fit::_{{closure}} (12,494,274 samples, 0.03%)</title><rect x="97.7466%" y="677" width="0.0338%" height="15" fill="rgb(248,201,50)" fg:x="36181473812" fg:w="12494274"/><text x="97.9966%" y="687.50"></text></g><g><title>mws5::squares::Square::get_pos (12,494,274 samples, 0.03%)</title><rect x="97.7466%" y="661" width="0.0338%" height="15" fill="rgb(222,185,44)" fg:x="36181473812" fg:w="12494274"/><text x="97.9966%" y="671.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (8,140,495 samples, 0.02%)</title><rect x="97.7804%" y="725" width="0.0220%" height="15" fill="rgb(218,107,18)" fg:x="36193968086" fg:w="8140495"/><text x="98.0304%" y="735.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (8,140,495 samples, 0.02%)</title><rect x="97.7804%" y="709" width="0.0220%" height="15" fill="rgb(237,177,39)" fg:x="36193968086" fg:w="8140495"/><text x="98.0304%" y="719.50"></text></g><g><title>core::cell::BorrowRefMut::new (8,140,495 samples, 0.02%)</title><rect x="97.7804%" y="693" width="0.0220%" height="15" fill="rgb(246,69,6)" fg:x="36193968086" fg:w="8140495"/><text x="98.0304%" y="703.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4,074,098 samples, 0.01%)</title><rect x="97.7913%" y="677" width="0.0110%" height="15" fill="rgb(234,208,37)" fg:x="36198034483" fg:w="4074098"/><text x="98.0413%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4,074,098 samples, 0.01%)</title><rect x="97.7913%" y="661" width="0.0110%" height="15" fill="rgb(225,4,6)" fg:x="36198034483" fg:w="4074098"/><text x="98.0413%" y="671.50"></text></g><g><title>core::mem::replace (4,074,098 samples, 0.01%)</title><rect x="97.7913%" y="645" width="0.0110%" height="15" fill="rgb(233,45,0)" fg:x="36198034483" fg:w="4074098"/><text x="98.0413%" y="655.50"></text></g><g><title>mws5::dict::Dict::is_fit (1,406,440,669 samples, 3.80%)</title><rect x="94.0349%" y="741" width="3.7996%" height="15" fill="rgb(226,136,5)" fg:x="34807576286" fg:w="1406440669"/><text x="94.2849%" y="751.50">mws5..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;mws5::words::Word,bool&gt;&gt;&gt; (11,908,374 samples, 0.03%)</title><rect x="97.8023%" y="725" width="0.0322%" height="15" fill="rgb(211,91,47)" fg:x="36202108581" fg:w="11908374"/><text x="98.0523%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (11,908,374 samples, 0.03%)</title><rect x="97.8023%" y="709" width="0.0322%" height="15" fill="rgb(242,88,51)" fg:x="36202108581" fg:w="11908374"/><text x="98.0523%" y="719.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (11,908,374 samples, 0.03%)</title><rect x="97.8023%" y="693" width="0.0322%" height="15" fill="rgb(230,91,28)" fg:x="36202108581" fg:w="11908374"/><text x="98.0523%" y="703.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (11,908,374 samples, 0.03%)</title><rect x="97.8023%" y="677" width="0.0322%" height="15" fill="rgb(254,186,29)" fg:x="36202108581" fg:w="11908374"/><text x="98.0523%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (11,908,374 samples, 0.03%)</title><rect x="97.8023%" y="661" width="0.0322%" height="15" fill="rgb(238,6,4)" fg:x="36202108581" fg:w="11908374"/><text x="98.0523%" y="671.50"></text></g><g><title>core::mem::replace (11,908,374 samples, 0.03%)</title><rect x="97.8023%" y="645" width="0.0322%" height="15" fill="rgb(221,151,16)" fg:x="36202108581" fg:w="11908374"/><text x="98.0523%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (12,992,403 samples, 0.04%)</title><rect x="97.8345%" y="709" width="0.0351%" height="15" fill="rgb(251,143,52)" fg:x="36214016955" fg:w="12992403"/><text x="98.0845%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (12,992,403 samples, 0.04%)</title><rect x="97.8345%" y="693" width="0.0351%" height="15" fill="rgb(206,90,15)" fg:x="36214016955" fg:w="12992403"/><text x="98.0845%" y="703.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12,992,403 samples, 0.04%)</title><rect x="97.8345%" y="677" width="0.0351%" height="15" fill="rgb(218,35,8)" fg:x="36214016955" fg:w="12992403"/><text x="98.0845%" y="687.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (12,992,403 samples, 0.04%)</title><rect x="97.8345%" y="661" width="0.0351%" height="15" fill="rgb(239,215,6)" fg:x="36214016955" fg:w="12992403"/><text x="98.0845%" y="671.50"></text></g><g><title>mws5::search::cross_fit (1,449,728,806 samples, 3.92%)</title><rect x="93.9885%" y="757" width="3.9165%" height="15" fill="rgb(245,116,39)" fg:x="34790392437" fg:w="1449728806"/><text x="94.2385%" y="767.50">mws5..</text></g><g><title>mws5::squares::Square::is_transposed (26,104,288 samples, 0.07%)</title><rect x="97.8345%" y="741" width="0.0705%" height="15" fill="rgb(242,65,28)" fg:x="36214016955" fg:w="26104288"/><text x="98.0845%" y="751.50"></text></g><g><title>mws5::words::Word::is_transposed (26,104,288 samples, 0.07%)</title><rect x="97.8345%" y="725" width="0.0705%" height="15" fill="rgb(252,132,53)" fg:x="36214016955" fg:w="26104288"/><text x="98.0845%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u8&gt;::cmp (13,111,885 samples, 0.04%)</title><rect x="97.8696%" y="709" width="0.0354%" height="15" fill="rgb(224,159,50)" fg:x="36227009358" fg:w="13111885"/><text x="98.1196%" y="719.50"></text></g><g><title>mws5::squares::Square::is_full (7,755,956 samples, 0.02%)</title><rect x="97.9050%" y="757" width="0.0210%" height="15" fill="rgb(224,93,4)" fg:x="36240121243" fg:w="7755956"/><text x="98.1550%" y="767.50"></text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (22,833,690,508 samples, 61.69%)</title><rect x="36.3830%" y="773" width="61.6867%" height="15" fill="rgb(208,81,34)" fg:x="13467380714" fg:w="22833690508"/><text x="36.6330%" y="783.50">mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all</text></g><g><title>mws5::squares::Square::set_pos (53,194,023 samples, 0.14%)</title><rect x="97.9260%" y="757" width="0.1437%" height="15" fill="rgb(233,92,54)" fg:x="36247877199" fg:w="53194023"/><text x="98.1760%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4,076,049 samples, 0.01%)</title><rect x="98.0926%" y="741" width="0.0110%" height="15" fill="rgb(237,21,14)" fg:x="36309562925" fg:w="4076049"/><text x="98.3426%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16,405,792 samples, 0.04%)</title><rect x="98.0815%" y="757" width="0.0443%" height="15" fill="rgb(249,128,51)" fg:x="36305433991" fg:w="16405792"/><text x="98.3315%" y="767.50"></text></g><g><title>core::ptr::write (8,200,809 samples, 0.02%)</title><rect x="98.1037%" y="741" width="0.0222%" height="15" fill="rgb(223,129,24)" fg:x="36313638974" fg:w="8200809"/><text x="98.3537%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4,292,710 samples, 0.01%)</title><rect x="98.1258%" y="757" width="0.0116%" height="15" fill="rgb(231,168,25)" fg:x="36321839783" fg:w="4292710"/><text x="98.3758%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,292,710 samples, 0.01%)</title><rect x="98.1258%" y="741" width="0.0116%" height="15" fill="rgb(224,39,20)" fg:x="36321839783" fg:w="4292710"/><text x="98.3758%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (3,862,756 samples, 0.01%)</title><rect x="98.1374%" y="757" width="0.0104%" height="15" fill="rgb(225,152,53)" fg:x="36326132493" fg:w="3862756"/><text x="98.3874%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (3,862,756 samples, 0.01%)</title><rect x="98.1374%" y="741" width="0.0104%" height="15" fill="rgb(252,17,24)" fg:x="36326132493" fg:w="3862756"/><text x="98.3874%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (3,862,756 samples, 0.01%)</title><rect x="98.1374%" y="725" width="0.0104%" height="15" fill="rgb(250,114,30)" fg:x="36326132493" fg:w="3862756"/><text x="98.3874%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,862,756 samples, 0.01%)</title><rect x="98.1374%" y="709" width="0.0104%" height="15" fill="rgb(229,5,4)" fg:x="36326132493" fg:w="3862756"/><text x="98.3874%" y="719.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (3,862,756 samples, 0.01%)</title><rect x="98.1374%" y="693" width="0.0104%" height="15" fill="rgb(225,176,49)" fg:x="36326132493" fg:w="3862756"/><text x="98.3874%" y="703.50"></text></g><g><title>core::ptr::read (3,862,756 samples, 0.01%)</title><rect x="98.1374%" y="677" width="0.0104%" height="15" fill="rgb(224,221,49)" fg:x="36326132493" fg:w="3862756"/><text x="98.3874%" y="687.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::add (4,126,407 samples, 0.01%)</title><rect x="98.1588%" y="693" width="0.0111%" height="15" fill="rgb(253,169,27)" fg:x="36334064075" fg:w="4126407"/><text x="98.4088%" y="703.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::set (4,126,407 samples, 0.01%)</title><rect x="98.1588%" y="677" width="0.0111%" height="15" fill="rgb(211,206,16)" fg:x="36334064075" fg:w="4126407"/><text x="98.4088%" y="687.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (12,402,547 samples, 0.03%)</title><rect x="98.1478%" y="725" width="0.0335%" height="15" fill="rgb(244,87,35)" fg:x="36329995249" fg:w="12402547"/><text x="98.3978%" y="735.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains_or_add (8,333,721 samples, 0.02%)</title><rect x="98.1588%" y="709" width="0.0225%" height="15" fill="rgb(246,28,10)" fg:x="36334064075" fg:w="8333721"/><text x="98.4088%" y="719.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains (4,207,314 samples, 0.01%)</title><rect x="98.1700%" y="693" width="0.0114%" height="15" fill="rgb(229,12,44)" fg:x="36338190482" fg:w="4207314"/><text x="98.4200%" y="703.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::add (8,181,038 samples, 0.02%)</title><rect x="98.1813%" y="693" width="0.0221%" height="15" fill="rgb(210,145,37)" fg:x="36342397796" fg:w="8181038"/><text x="98.4313%" y="703.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (17,352,621 samples, 0.05%)</title><rect x="98.1813%" y="725" width="0.0469%" height="15" fill="rgb(227,112,52)" fg:x="36342397796" fg:w="17352621"/><text x="98.4313%" y="735.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains_or_add (17,352,621 samples, 0.05%)</title><rect x="98.1813%" y="709" width="0.0469%" height="15" fill="rgb(238,155,34)" fg:x="36342397796" fg:w="17352621"/><text x="98.4313%" y="719.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains (9,171,583 samples, 0.02%)</title><rect x="98.2035%" y="693" width="0.0248%" height="15" fill="rgb(239,226,36)" fg:x="36350578834" fg:w="9171583"/><text x="98.4535%" y="703.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::is_set (9,171,583 samples, 0.02%)</title><rect x="98.2035%" y="677" width="0.0248%" height="15" fill="rgb(230,16,23)" fg:x="36350578834" fg:w="9171583"/><text x="98.4535%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3,999,637 samples, 0.01%)</title><rect x="98.2854%" y="613" width="0.0108%" height="15" fill="rgb(236,171,36)" fg:x="36380929518" fg:w="3999637"/><text x="98.5354%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7,891,896 samples, 0.02%)</title><rect x="98.2854%" y="629" width="0.0213%" height="15" fill="rgb(221,22,14)" fg:x="36380929518" fg:w="7891896"/><text x="98.5354%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3,892,259 samples, 0.01%)</title><rect x="98.2963%" y="613" width="0.0105%" height="15" fill="rgb(242,43,11)" fg:x="36384929155" fg:w="3892259"/><text x="98.5463%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (13,149,956 samples, 0.04%)</title><rect x="98.3288%" y="613" width="0.0355%" height="15" fill="rgb(232,69,23)" fg:x="36396975566" fg:w="13149956"/><text x="98.5788%" y="623.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (46,184,650 samples, 0.12%)</title><rect x="98.2745%" y="677" width="0.1248%" height="15" fill="rgb(216,180,54)" fg:x="36376870068" fg:w="46184650"/><text x="98.5245%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (46,184,650 samples, 0.12%)</title><rect x="98.2745%" y="661" width="0.1248%" height="15" fill="rgb(216,5,24)" fg:x="36376870068" fg:w="46184650"/><text x="98.5245%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (46,184,650 samples, 0.12%)</title><rect x="98.2745%" y="645" width="0.1248%" height="15" fill="rgb(225,89,9)" fg:x="36376870068" fg:w="46184650"/><text x="98.5245%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (34,233,304 samples, 0.09%)</title><rect x="98.3068%" y="629" width="0.0925%" height="15" fill="rgb(243,75,33)" fg:x="36388821414" fg:w="34233304"/><text x="98.5568%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (12,929,196 samples, 0.03%)</title><rect x="98.3643%" y="613" width="0.0349%" height="15" fill="rgb(247,141,45)" fg:x="36410125522" fg:w="12929196"/><text x="98.6143%" y="623.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::hash_key (59,324,824 samples, 0.16%)</title><rect x="98.2507%" y="709" width="0.1603%" height="15" fill="rgb(232,177,36)" fg:x="36368075781" fg:w="59324824"/><text x="98.5007%" y="719.50"></text></g><g><title>&lt;caches::lfu::DefaultKeyHasher&lt;K&gt; as caches::lfu::KeyHasher&lt;K&gt;&gt;::hash_key (50,530,537 samples, 0.14%)</title><rect x="98.2745%" y="693" width="0.1365%" height="15" fill="rgb(219,125,36)" fg:x="36376870068" fg:w="50530537"/><text x="98.5245%" y="703.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (4,345,887 samples, 0.01%)</title><rect x="98.3992%" y="677" width="0.0117%" height="15" fill="rgb(227,94,9)" fg:x="36423054718" fg:w="4345887"/><text x="98.6492%" y="687.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4,345,887 samples, 0.01%)</title><rect x="98.3992%" y="661" width="0.0117%" height="15" fill="rgb(240,34,52)" fg:x="36423054718" fg:w="4345887"/><text x="98.6492%" y="671.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4,345,887 samples, 0.01%)</title><rect x="98.3992%" y="645" width="0.0117%" height="15" fill="rgb(216,45,12)" fg:x="36423054718" fg:w="4345887"/><text x="98.6492%" y="655.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (4,345,887 samples, 0.01%)</title><rect x="98.3992%" y="629" width="0.0117%" height="15" fill="rgb(246,21,19)" fg:x="36423054718" fg:w="4345887"/><text x="98.6492%" y="639.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::try_reset (11,039,364 samples, 0.03%)</title><rect x="98.4110%" y="709" width="0.0298%" height="15" fill="rgb(213,98,42)" fg:x="36427400605" fg:w="11039364"/><text x="98.6610%" y="719.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::reset (11,039,364 samples, 0.03%)</title><rect x="98.4110%" y="693" width="0.0298%" height="15" fill="rgb(250,136,47)" fg:x="36427400605" fg:w="11039364"/><text x="98.6610%" y="703.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset (11,039,364 samples, 0.03%)</title><rect x="98.4110%" y="677" width="0.0298%" height="15" fill="rgb(251,124,27)" fg:x="36427400605" fg:w="11039364"/><text x="98.6610%" y="687.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (11,039,364 samples, 0.03%)</title><rect x="98.4110%" y="661" width="0.0298%" height="15" fill="rgb(229,180,14)" fg:x="36427400605" fg:w="11039364"/><text x="98.6610%" y="671.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset::_{{closure}} (11,039,364 samples, 0.03%)</title><rect x="98.4110%" y="645" width="0.0298%" height="15" fill="rgb(245,216,25)" fg:x="36427400605" fg:w="11039364"/><text x="98.6610%" y="655.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset (11,039,364 samples, 0.03%)</title><rect x="98.4110%" y="629" width="0.0298%" height="15" fill="rgb(251,43,5)" fg:x="36427400605" fg:w="11039364"/><text x="98.6610%" y="639.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (11,039,364 samples, 0.03%)</title><rect x="98.4110%" y="613" width="0.0298%" height="15" fill="rgb(250,128,24)" fg:x="36427400605" fg:w="11039364"/><text x="98.6610%" y="623.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset::_{{closure}} (11,039,364 samples, 0.03%)</title><rect x="98.4110%" y="597" width="0.0298%" height="15" fill="rgb(217,117,27)" fg:x="36427400605" fg:w="11039364"/><text x="98.6610%" y="607.50"></text></g><g><title>mws5::dict::Dict::match_count (112,623,263 samples, 0.30%)</title><rect x="98.1478%" y="757" width="0.3043%" height="15" fill="rgb(245,147,4)" fg:x="36329995249" fg:w="112623263"/><text x="98.3978%" y="767.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (112,623,263 samples, 0.30%)</title><rect x="98.1478%" y="741" width="0.3043%" height="15" fill="rgb(242,201,35)" fg:x="36329995249" fg:w="112623263"/><text x="98.3978%" y="751.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::increment (82,868,095 samples, 0.22%)</title><rect x="98.2282%" y="725" width="0.2239%" height="15" fill="rgb(218,181,1)" fg:x="36359750417" fg:w="82868095"/><text x="98.4782%" y="735.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::increment (4,178,543 samples, 0.01%)</title><rect x="98.4408%" y="709" width="0.0113%" height="15" fill="rgb(222,6,29)" fg:x="36438439969" fg:w="4178543"/><text x="98.6908%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4,178,543 samples, 0.01%)</title><rect x="98.4408%" y="693" width="0.0113%" height="15" fill="rgb(208,186,3)" fg:x="36438439969" fg:w="4178543"/><text x="98.6908%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4,178,543 samples, 0.01%)</title><rect x="98.4408%" y="677" width="0.0113%" height="15" fill="rgb(216,36,26)" fg:x="36438439969" fg:w="4178543"/><text x="98.6908%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4,178,543 samples, 0.01%)</title><rect x="98.4408%" y="661" width="0.0113%" height="15" fill="rgb(248,201,23)" fg:x="36438439969" fg:w="4178543"/><text x="98.6908%" y="671.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::increment::_{{closure}} (4,178,543 samples, 0.01%)</title><rect x="98.4408%" y="645" width="0.0113%" height="15" fill="rgb(251,170,31)" fg:x="36438439969" fg:w="4178543"/><text x="98.6908%" y="655.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::increment (4,178,543 samples, 0.01%)</title><rect x="98.4408%" y="629" width="0.0113%" height="15" fill="rgb(207,110,25)" fg:x="36438439969" fg:w="4178543"/><text x="98.6908%" y="639.50"></text></g><g><title>mws5::search::best_pos (146,776,773 samples, 0.40%)</title><rect x="98.0697%" y="773" width="0.3965%" height="15" fill="rgb(250,54,15)" fg:x="36301071222" fg:w="146776773"/><text x="98.3197%" y="783.50"></text></g><g><title>mws5::squares::Square::get_pos (5,229,483 samples, 0.01%)</title><rect x="98.4521%" y="757" width="0.0141%" height="15" fill="rgb(227,68,33)" fg:x="36442618512" fg:w="5229483"/><text x="98.7021%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8,667,242 samples, 0.02%)</title><rect x="98.5084%" y="549" width="0.0234%" height="15" fill="rgb(238,34,41)" fg:x="36463470600" fg:w="8667242"/><text x="98.7584%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16,475,747 samples, 0.04%)</title><rect x="98.4979%" y="565" width="0.0445%" height="15" fill="rgb(220,11,15)" fg:x="36459557752" fg:w="16475747"/><text x="98.7479%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3,895,657 samples, 0.01%)</title><rect x="98.5319%" y="549" width="0.0105%" height="15" fill="rgb(246,111,35)" fg:x="36472137842" fg:w="3895657"/><text x="98.7819%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8,347,800 samples, 0.02%)</title><rect x="98.5868%" y="549" width="0.0226%" height="15" fill="rgb(209,88,53)" fg:x="36492468405" fg:w="8347800"/><text x="98.8368%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (49,892,419 samples, 0.13%)</title><rect x="98.4979%" y="645" width="0.1348%" height="15" fill="rgb(231,185,47)" fg:x="36459557752" fg:w="49892419"/><text x="98.7479%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (49,892,419 samples, 0.13%)</title><rect x="98.4979%" y="629" width="0.1348%" height="15" fill="rgb(233,154,1)" fg:x="36459557752" fg:w="49892419"/><text x="98.7479%" y="639.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (49,892,419 samples, 0.13%)</title><rect x="98.4979%" y="613" width="0.1348%" height="15" fill="rgb(225,15,46)" fg:x="36459557752" fg:w="49892419"/><text x="98.7479%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (49,892,419 samples, 0.13%)</title><rect x="98.4979%" y="597" width="0.1348%" height="15" fill="rgb(211,135,41)" fg:x="36459557752" fg:w="49892419"/><text x="98.7479%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (49,892,419 samples, 0.13%)</title><rect x="98.4979%" y="581" width="0.1348%" height="15" fill="rgb(208,54,0)" fg:x="36459557752" fg:w="49892419"/><text x="98.7479%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (33,416,672 samples, 0.09%)</title><rect x="98.5424%" y="565" width="0.0903%" height="15" fill="rgb(244,136,14)" fg:x="36476033499" fg:w="33416672"/><text x="98.7924%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8,633,966 samples, 0.02%)</title><rect x="98.6093%" y="549" width="0.0233%" height="15" fill="rgb(241,56,14)" fg:x="36500816205" fg:w="8633966"/><text x="98.8593%" y="559.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty (3,966,839 samples, 0.01%)</title><rect x="98.6431%" y="597" width="0.0107%" height="15" fill="rgb(205,80,24)" fg:x="36513301924" fg:w="3966839"/><text x="98.8931%" y="607.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (3,966,839 samples, 0.01%)</title><rect x="98.6431%" y="581" width="0.0107%" height="15" fill="rgb(220,57,4)" fg:x="36513301924" fg:w="3966839"/><text x="98.8931%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3,966,839 samples, 0.01%)</title><rect x="98.6431%" y="565" width="0.0107%" height="15" fill="rgb(226,193,50)" fg:x="36513301924" fg:w="3966839"/><text x="98.8931%" y="575.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (4,083,900 samples, 0.01%)</title><rect x="98.6538%" y="597" width="0.0110%" height="15" fill="rgb(231,168,22)" fg:x="36517268763" fg:w="4083900"/><text x="98.9038%" y="607.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (68,676,168 samples, 0.19%)</title><rect x="98.4886%" y="725" width="0.1855%" height="15" fill="rgb(254,215,14)" fg:x="36456142224" fg:w="68676168"/><text x="98.7386%" y="735.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (68,676,168 samples, 0.19%)</title><rect x="98.4886%" y="709" width="0.1855%" height="15" fill="rgb(211,115,16)" fg:x="36456142224" fg:w="68676168"/><text x="98.7386%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (65,260,640 samples, 0.18%)</title><rect x="98.4979%" y="693" width="0.1763%" height="15" fill="rgb(236,210,16)" fg:x="36459557752" fg:w="65260640"/><text x="98.7479%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (65,260,640 samples, 0.18%)</title><rect x="98.4979%" y="677" width="0.1763%" height="15" fill="rgb(221,94,12)" fg:x="36459557752" fg:w="65260640"/><text x="98.7479%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (65,260,640 samples, 0.18%)</title><rect x="98.4979%" y="661" width="0.1763%" height="15" fill="rgb(235,218,49)" fg:x="36459557752" fg:w="65260640"/><text x="98.7479%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (15,368,221 samples, 0.04%)</title><rect x="98.6327%" y="645" width="0.0415%" height="15" fill="rgb(217,114,14)" fg:x="36509450171" fg:w="15368221"/><text x="98.8827%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15,368,221 samples, 0.04%)</title><rect x="98.6327%" y="629" width="0.0415%" height="15" fill="rgb(216,145,22)" fg:x="36509450171" fg:w="15368221"/><text x="98.8827%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (15,368,221 samples, 0.04%)</title><rect x="98.6327%" y="613" width="0.0415%" height="15" fill="rgb(217,112,39)" fg:x="36509450171" fg:w="15368221"/><text x="98.8827%" y="623.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::detach (4,355,090 samples, 0.01%)</title><rect x="98.6742%" y="693" width="0.0118%" height="15" fill="rgb(225,85,32)" fg:x="36524818392" fg:w="4355090"/><text x="98.9242%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12,384,855 samples, 0.03%)</title><rect x="98.7193%" y="565" width="0.0335%" height="15" fill="rgb(245,209,47)" fg:x="36541517451" fg:w="12384855"/><text x="98.9693%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8,576,135 samples, 0.02%)</title><rect x="98.7296%" y="549" width="0.0232%" height="15" fill="rgb(218,220,15)" fg:x="36545326171" fg:w="8576135"/><text x="98.9796%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,324,594 samples, 0.01%)</title><rect x="98.7527%" y="549" width="0.0117%" height="15" fill="rgb(222,202,31)" fg:x="36553902306" fg:w="4324594"/><text x="99.0027%" y="559.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (34,260,234 samples, 0.09%)</title><rect x="98.7074%" y="613" width="0.0926%" height="15" fill="rgb(243,203,4)" fg:x="36537108901" fg:w="34260234"/><text x="98.9574%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (34,260,234 samples, 0.09%)</title><rect x="98.7074%" y="597" width="0.0926%" height="15" fill="rgb(237,92,17)" fg:x="36537108901" fg:w="34260234"/><text x="98.9574%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (34,260,234 samples, 0.09%)</title><rect x="98.7074%" y="581" width="0.0926%" height="15" fill="rgb(231,119,7)" fg:x="36537108901" fg:w="34260234"/><text x="98.9574%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17,466,829 samples, 0.05%)</title><rect x="98.7527%" y="565" width="0.0472%" height="15" fill="rgb(237,82,41)" fg:x="36553902306" fg:w="17466829"/><text x="99.0027%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (13,142,235 samples, 0.04%)</title><rect x="98.7644%" y="549" width="0.0355%" height="15" fill="rgb(226,81,48)" fg:x="36558226900" fg:w="13142235"/><text x="99.0144%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (38,629,298 samples, 0.10%)</title><rect x="98.7074%" y="645" width="0.1044%" height="15" fill="rgb(234,70,51)" fg:x="36537108901" fg:w="38629298"/><text x="98.9574%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (38,629,298 samples, 0.10%)</title><rect x="98.7074%" y="629" width="0.1044%" height="15" fill="rgb(251,86,4)" fg:x="36537108901" fg:w="38629298"/><text x="98.9574%" y="639.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (4,369,064 samples, 0.01%)</title><rect x="98.7999%" y="613" width="0.0118%" height="15" fill="rgb(244,144,28)" fg:x="36571369135" fg:w="4369064"/><text x="99.0499%" y="623.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4,369,064 samples, 0.01%)</title><rect x="98.7999%" y="597" width="0.0118%" height="15" fill="rgb(232,161,39)" fg:x="36571369135" fg:w="4369064"/><text x="99.0499%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4,369,064 samples, 0.01%)</title><rect x="98.7999%" y="581" width="0.0118%" height="15" fill="rgb(247,34,51)" fg:x="36571369135" fg:w="4369064"/><text x="99.0499%" y="591.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (4,369,064 samples, 0.01%)</title><rect x="98.7999%" y="565" width="0.0118%" height="15" fill="rgb(225,132,2)" fg:x="36571369135" fg:w="4369064"/><text x="99.0499%" y="575.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (3,913,675 samples, 0.01%)</title><rect x="98.8321%" y="597" width="0.0106%" height="15" fill="rgb(209,159,44)" fg:x="36583266260" fg:w="3913675"/><text x="99.0821%" y="607.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (66,615,064 samples, 0.18%)</title><rect x="98.6742%" y="725" width="0.1800%" height="15" fill="rgb(251,214,1)" fg:x="36524818392" fg:w="66615064"/><text x="98.9242%" y="735.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (66,615,064 samples, 0.18%)</title><rect x="98.6742%" y="709" width="0.1800%" height="15" fill="rgb(247,84,47)" fg:x="36524818392" fg:w="66615064"/><text x="98.9242%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (62,259,974 samples, 0.17%)</title><rect x="98.6859%" y="693" width="0.1682%" height="15" fill="rgb(240,111,43)" fg:x="36529173482" fg:w="62259974"/><text x="98.9359%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (62,259,974 samples, 0.17%)</title><rect x="98.6859%" y="677" width="0.1682%" height="15" fill="rgb(215,214,35)" fg:x="36529173482" fg:w="62259974"/><text x="98.9359%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (62,259,974 samples, 0.17%)</title><rect x="98.6859%" y="661" width="0.1682%" height="15" fill="rgb(248,207,23)" fg:x="36529173482" fg:w="62259974"/><text x="98.9359%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (15,695,257 samples, 0.04%)</title><rect x="98.8117%" y="645" width="0.0424%" height="15" fill="rgb(214,186,4)" fg:x="36575738199" fg:w="15695257"/><text x="99.0617%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15,695,257 samples, 0.04%)</title><rect x="98.8117%" y="629" width="0.0424%" height="15" fill="rgb(220,133,22)" fg:x="36575738199" fg:w="15695257"/><text x="99.0617%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (15,695,257 samples, 0.04%)</title><rect x="98.8117%" y="613" width="0.0424%" height="15" fill="rgb(239,134,19)" fg:x="36575738199" fg:w="15695257"/><text x="99.0617%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (4,253,521 samples, 0.01%)</title><rect x="98.8426%" y="597" width="0.0115%" height="15" fill="rgb(250,140,9)" fg:x="36587179935" fg:w="4253521"/><text x="99.0926%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (4,253,521 samples, 0.01%)</title><rect x="98.8426%" y="581" width="0.0115%" height="15" fill="rgb(225,59,14)" fg:x="36587179935" fg:w="4253521"/><text x="99.0926%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (4,253,521 samples, 0.01%)</title><rect x="98.8426%" y="565" width="0.0115%" height="15" fill="rgb(214,152,51)" fg:x="36587179935" fg:w="4253521"/><text x="99.0926%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4,253,521 samples, 0.01%)</title><rect x="98.8426%" y="549" width="0.0115%" height="15" fill="rgb(251,227,43)" fg:x="36587179935" fg:w="4253521"/><text x="99.0926%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4,229,347 samples, 0.01%)</title><rect x="98.8541%" y="629" width="0.0114%" height="15" fill="rgb(241,96,17)" fg:x="36591433456" fg:w="4229347"/><text x="99.1041%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5,067,820 samples, 0.01%)</title><rect x="98.8759%" y="613" width="0.0137%" height="15" fill="rgb(234,198,43)" fg:x="36599493744" fg:w="5067820"/><text x="99.1259%" y="623.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::hash_key (21,517,018 samples, 0.06%)</title><rect x="98.8541%" y="709" width="0.0581%" height="15" fill="rgb(220,108,29)" fg:x="36591433456" fg:w="21517018"/><text x="99.1041%" y="719.50"></text></g><g><title>&lt;caches::lfu::DefaultKeyHasher&lt;K&gt; as caches::lfu::KeyHasher&lt;K&gt;&gt;::hash_key (21,517,018 samples, 0.06%)</title><rect x="98.8541%" y="693" width="0.0581%" height="15" fill="rgb(226,163,33)" fg:x="36591433456" fg:w="21517018"/><text x="99.1041%" y="703.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (21,517,018 samples, 0.06%)</title><rect x="98.8541%" y="677" width="0.0581%" height="15" fill="rgb(205,194,45)" fg:x="36591433456" fg:w="21517018"/><text x="99.1041%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (21,517,018 samples, 0.06%)</title><rect x="98.8541%" y="661" width="0.0581%" height="15" fill="rgb(206,143,44)" fg:x="36591433456" fg:w="21517018"/><text x="99.1041%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (21,517,018 samples, 0.06%)</title><rect x="98.8541%" y="645" width="0.0581%" height="15" fill="rgb(236,136,36)" fg:x="36591433456" fg:w="21517018"/><text x="99.1041%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17,287,671 samples, 0.05%)</title><rect x="98.8656%" y="629" width="0.0467%" height="15" fill="rgb(249,172,42)" fg:x="36595662803" fg:w="17287671"/><text x="99.1156%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8,388,910 samples, 0.02%)</title><rect x="98.8896%" y="613" width="0.0227%" height="15" fill="rgb(216,139,23)" fg:x="36604561564" fg:w="8388910"/><text x="99.1396%" y="623.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::try_reset (30,011,755 samples, 0.08%)</title><rect x="98.9123%" y="709" width="0.0811%" height="15" fill="rgb(207,166,20)" fg:x="36612950474" fg:w="30011755"/><text x="99.1623%" y="719.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::reset (30,011,755 samples, 0.08%)</title><rect x="98.9123%" y="693" width="0.0811%" height="15" fill="rgb(210,209,22)" fg:x="36612950474" fg:w="30011755"/><text x="99.1623%" y="703.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset (30,011,755 samples, 0.08%)</title><rect x="98.9123%" y="677" width="0.0811%" height="15" fill="rgb(232,118,20)" fg:x="36612950474" fg:w="30011755"/><text x="99.1623%" y="687.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (30,011,755 samples, 0.08%)</title><rect x="98.9123%" y="661" width="0.0811%" height="15" fill="rgb(238,113,42)" fg:x="36612950474" fg:w="30011755"/><text x="99.1623%" y="671.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset::_{{closure}} (30,011,755 samples, 0.08%)</title><rect x="98.9123%" y="645" width="0.0811%" height="15" fill="rgb(231,42,5)" fg:x="36612950474" fg:w="30011755"/><text x="99.1623%" y="655.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset (30,011,755 samples, 0.08%)</title><rect x="98.9123%" y="629" width="0.0811%" height="15" fill="rgb(243,166,24)" fg:x="36612950474" fg:w="30011755"/><text x="99.1623%" y="639.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (30,011,755 samples, 0.08%)</title><rect x="98.9123%" y="613" width="0.0811%" height="15" fill="rgb(237,226,12)" fg:x="36612950474" fg:w="30011755"/><text x="99.1623%" y="623.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset::_{{closure}} (30,011,755 samples, 0.08%)</title><rect x="98.9123%" y="597" width="0.0811%" height="15" fill="rgb(229,133,24)" fg:x="36612950474" fg:w="30011755"/><text x="99.1623%" y="607.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains_or_add (4,396,950 samples, 0.01%)</title><rect x="98.9933%" y="709" width="0.0119%" height="15" fill="rgb(238,33,43)" fg:x="36642962229" fg:w="4396950"/><text x="99.2433%" y="719.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains (4,396,950 samples, 0.01%)</title><rect x="98.9933%" y="693" width="0.0119%" height="15" fill="rgb(227,59,38)" fg:x="36642962229" fg:w="4396950"/><text x="99.2433%" y="703.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::is_set (4,396,950 samples, 0.01%)</title><rect x="98.9933%" y="677" width="0.0119%" height="15" fill="rgb(230,97,0)" fg:x="36642962229" fg:w="4396950"/><text x="99.2433%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (4,349,039 samples, 0.01%)</title><rect x="99.0052%" y="645" width="0.0117%" height="15" fill="rgb(250,173,50)" fg:x="36647359179" fg:w="4349039"/><text x="99.2552%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,349,039 samples, 0.01%)</title><rect x="99.0052%" y="629" width="0.0117%" height="15" fill="rgb(240,15,50)" fg:x="36647359179" fg:w="4349039"/><text x="99.2552%" y="639.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (4,349,039 samples, 0.01%)</title><rect x="99.0052%" y="613" width="0.0117%" height="15" fill="rgb(221,93,22)" fg:x="36647359179" fg:w="4349039"/><text x="99.2552%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4,349,039 samples, 0.01%)</title><rect x="99.0052%" y="597" width="0.0117%" height="15" fill="rgb(245,180,53)" fg:x="36647359179" fg:w="4349039"/><text x="99.2552%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4,349,039 samples, 0.01%)</title><rect x="99.0052%" y="581" width="0.0117%" height="15" fill="rgb(231,88,51)" fg:x="36647359179" fg:w="4349039"/><text x="99.2552%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4,349,039 samples, 0.01%)</title><rect x="99.0052%" y="565" width="0.0117%" height="15" fill="rgb(240,58,21)" fg:x="36647359179" fg:w="4349039"/><text x="99.2552%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,349,039 samples, 0.01%)</title><rect x="99.0052%" y="549" width="0.0117%" height="15" fill="rgb(237,21,10)" fg:x="36647359179" fg:w="4349039"/><text x="99.2552%" y="559.50"></text></g><g><title>mws5::dict::Dict::is_fit (207,818,865 samples, 0.56%)</title><rect x="98.4662%" y="757" width="0.5614%" height="15" fill="rgb(218,43,11)" fg:x="36447847995" fg:w="207818865"/><text x="98.7162%" y="767.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (199,524,636 samples, 0.54%)</title><rect x="98.4886%" y="741" width="0.5390%" height="15" fill="rgb(218,221,29)" fg:x="36456142224" fg:w="199524636"/><text x="98.7386%" y="751.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::increment (64,233,404 samples, 0.17%)</title><rect x="98.8541%" y="725" width="0.1735%" height="15" fill="rgb(214,118,42)" fg:x="36591433456" fg:w="64233404"/><text x="99.1041%" y="735.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (8,307,681 samples, 0.02%)</title><rect x="99.0052%" y="709" width="0.0224%" height="15" fill="rgb(251,200,26)" fg:x="36647359179" fg:w="8307681"/><text x="99.2552%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (8,307,681 samples, 0.02%)</title><rect x="99.0052%" y="693" width="0.0224%" height="15" fill="rgb(237,101,39)" fg:x="36647359179" fg:w="8307681"/><text x="99.2552%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (8,307,681 samples, 0.02%)</title><rect x="99.0052%" y="677" width="0.0224%" height="15" fill="rgb(251,117,11)" fg:x="36647359179" fg:w="8307681"/><text x="99.2552%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (8,307,681 samples, 0.02%)</title><rect x="99.0052%" y="661" width="0.0224%" height="15" fill="rgb(216,223,23)" fg:x="36647359179" fg:w="8307681"/><text x="99.2552%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (3,958,642 samples, 0.01%)</title><rect x="99.0170%" y="645" width="0.0107%" height="15" fill="rgb(251,54,12)" fg:x="36651708218" fg:w="3958642"/><text x="99.2670%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3,958,642 samples, 0.01%)</title><rect x="99.0170%" y="629" width="0.0107%" height="15" fill="rgb(254,176,54)" fg:x="36651708218" fg:w="3958642"/><text x="99.2670%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3,958,642 samples, 0.01%)</title><rect x="99.0170%" y="613" width="0.0107%" height="15" fill="rgb(210,32,8)" fg:x="36651708218" fg:w="3958642"/><text x="99.2670%" y="623.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (3,958,642 samples, 0.01%)</title><rect x="99.0170%" y="597" width="0.0107%" height="15" fill="rgb(235,52,38)" fg:x="36651708218" fg:w="3958642"/><text x="99.2670%" y="607.50"></text></g><g><title>mws5::squares::Square::has_double (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="757" width="0.0117%" height="15" fill="rgb(231,4,44)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="741" width="0.0117%" height="15" fill="rgb(249,2,32)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="751.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="725" width="0.0117%" height="15" fill="rgb(224,65,26)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="735.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="709" width="0.0117%" height="15" fill="rgb(250,73,40)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="719.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="693" width="0.0117%" height="15" fill="rgb(253,177,16)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="703.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="677" width="0.0117%" height="15" fill="rgb(217,32,34)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="661" width="0.0117%" height="15" fill="rgb(212,7,10)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="645" width="0.0117%" height="15" fill="rgb(245,89,8)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::inspect::Inspect&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="629" width="0.0117%" height="15" fill="rgb(237,16,53)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="613" width="0.0117%" height="15" fill="rgb(250,204,30)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="597" width="0.0117%" height="15" fill="rgb(208,77,27)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="581" width="0.0117%" height="15" fill="rgb(250,204,28)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="565" width="0.0117%" height="15" fill="rgb(244,63,21)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="575.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::_{{closure}} (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="549" width="0.0117%" height="15" fill="rgb(236,85,44)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="559.50"></text></g><g><title>core::iter::adapters::inspect::inspect_fold::_{{closure}} (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="533" width="0.0117%" height="15" fill="rgb(215,98,4)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="517" width="0.0117%" height="15" fill="rgb(235,38,11)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="501" width="0.0117%" height="15" fill="rgb(254,186,25)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="485" width="0.0117%" height="15" fill="rgb(225,55,31)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="469" width="0.0117%" height="15" fill="rgb(211,15,21)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="453" width="0.0117%" height="15" fill="rgb(215,187,41)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="437" width="0.0117%" height="15" fill="rgb(248,69,32)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="421" width="0.0117%" height="15" fill="rgb(252,102,52)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4,322,666 samples, 0.01%)</title><rect x="99.0277%" y="405" width="0.0117%" height="15" fill="rgb(253,140,32)" fg:x="36655666860" fg:w="4322666"/><text x="99.2777%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="389" width="0.0117%" height="15" fill="rgb(216,56,42)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="373" width="0.0117%" height="15" fill="rgb(216,184,14)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="357" width="0.0117%" height="15" fill="rgb(237,187,27)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="341" width="0.0117%" height="15" fill="rgb(219,65,3)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="325" width="0.0117%" height="15" fill="rgb(245,83,25)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="335.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="309" width="0.0117%" height="15" fill="rgb(214,205,45)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="293" width="0.0117%" height="15" fill="rgb(241,20,18)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="277" width="0.0117%" height="15" fill="rgb(232,163,23)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="287.50"></text></g><g><title>alloc::alloc::alloc (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="261" width="0.0117%" height="15" fill="rgb(214,5,46)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="271.50"></text></g><g><title>__rustc::__rdl_alloc (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="245" width="0.0117%" height="15" fill="rgb(229,78,17)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="255.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="229" width="0.0117%" height="15" fill="rgb(248,89,10)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="239.50"></text></g><g><title>__GI___libc_malloc (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="213" width="0.0117%" height="15" fill="rgb(248,54,15)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="223.50"></text></g><g><title>_int_malloc (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="197" width="0.0117%" height="15" fill="rgb(223,116,6)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="207.50"></text></g><g><title>asm_exc_page_fault (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="181" width="0.0117%" height="15" fill="rgb(205,125,38)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="191.50"></text></g><g><title>exc_page_fault (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="165" width="0.0117%" height="15" fill="rgb(251,78,38)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="175.50"></text></g><g><title>do_user_addr_fault (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="149" width="0.0117%" height="15" fill="rgb(253,78,28)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="159.50"></text></g><g><title>handle_mm_fault (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="133" width="0.0117%" height="15" fill="rgb(209,120,3)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="143.50"></text></g><g><title>__handle_mm_fault (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="117" width="0.0117%" height="15" fill="rgb(238,229,9)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="127.50"></text></g><g><title>do_anonymous_page (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="101" width="0.0117%" height="15" fill="rgb(253,159,18)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="111.50"></text></g><g><title>folio_add_new_anon_rmap (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="85" width="0.0117%" height="15" fill="rgb(244,42,34)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="95.50"></text></g><g><title>__folio_mod_stat (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="69" width="0.0117%" height="15" fill="rgb(224,8,7)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="79.50"></text></g><g><title>__lruvec_stat_mod_folio (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="53" width="0.0117%" height="15" fill="rgb(210,201,45)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="63.50"></text></g><g><title>__mod_memcg_lruvec_state (4,320,980 samples, 0.01%)</title><rect x="99.0277%" y="37" width="0.0117%" height="15" fill="rgb(252,185,21)" fg:x="36655668546" fg:w="4320980"/><text x="99.2777%" y="47.50"></text></g><g><title>mws5::search::cross_fit (216,505,174 samples, 0.58%)</title><rect x="98.4662%" y="773" width="0.5849%" height="15" fill="rgb(223,131,1)" fg:x="36447847995" fg:w="216505174"/><text x="98.7162%" y="783.50"></text></g><g><title>mws5::squares::Square::is_transposed (4,363,643 samples, 0.01%)</title><rect x="99.0393%" y="757" width="0.0118%" height="15" fill="rgb(245,141,16)" fg:x="36659989526" fg:w="4363643"/><text x="99.2893%" y="767.50"></text></g><g><title>mws5::words::Word::is_transposed (4,363,643 samples, 0.01%)</title><rect x="99.0393%" y="741" width="0.0118%" height="15" fill="rgb(229,55,45)" fg:x="36659989526" fg:w="4363643"/><text x="99.2893%" y="751.50"></text></g><g><title>mws5::squares::Square::is_full (3,828,486 samples, 0.01%)</title><rect x="99.0511%" y="773" width="0.0103%" height="15" fill="rgb(208,92,15)" fg:x="36664353169" fg:w="3828486"/><text x="99.3011%" y="783.50"></text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (26,204,168,741 samples, 70.79%)</title><rect x="28.2797%" y="789" width="70.7923%" height="15" fill="rgb(234,185,47)" fg:x="10467881794" fg:w="26204168741"/><text x="28.5297%" y="799.50">mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all</text></g><g><title>mws5::squares::Square::set_pos (3,868,880 samples, 0.01%)</title><rect x="99.0615%" y="773" width="0.0105%" height="15" fill="rgb(253,104,50)" fg:x="36668181655" fg:w="3868880"/><text x="99.3115%" y="783.50"></text></g><g><title>mws5::search::best_pos (4,099,146 samples, 0.01%)</title><rect x="99.0719%" y="789" width="0.0111%" height="15" fill="rgb(205,70,7)" fg:x="36672050535" fg:w="4099146"/><text x="99.3219%" y="799.50"></text></g><g><title>mws5::dict::Dict::match_count (4,099,146 samples, 0.01%)</title><rect x="99.0719%" y="773" width="0.0111%" height="15" fill="rgb(240,178,43)" fg:x="36672050535" fg:w="4099146"/><text x="99.3219%" y="783.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (4,099,146 samples, 0.01%)</title><rect x="99.0719%" y="757" width="0.0111%" height="15" fill="rgb(214,112,2)" fg:x="36672050535" fg:w="4099146"/><text x="99.3219%" y="767.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::increment (4,099,146 samples, 0.01%)</title><rect x="99.0719%" y="741" width="0.0111%" height="15" fill="rgb(206,46,17)" fg:x="36672050535" fg:w="4099146"/><text x="99.3219%" y="751.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::hash_key (4,099,146 samples, 0.01%)</title><rect x="99.0719%" y="725" width="0.0111%" height="15" fill="rgb(225,220,16)" fg:x="36672050535" fg:w="4099146"/><text x="99.3219%" y="735.50"></text></g><g><title>&lt;caches::lfu::DefaultKeyHasher&lt;K&gt; as caches::lfu::KeyHasher&lt;K&gt;&gt;::hash_key (4,099,146 samples, 0.01%)</title><rect x="99.0719%" y="709" width="0.0111%" height="15" fill="rgb(238,65,40)" fg:x="36672050535" fg:w="4099146"/><text x="99.3219%" y="719.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (4,099,146 samples, 0.01%)</title><rect x="99.0719%" y="693" width="0.0111%" height="15" fill="rgb(230,151,21)" fg:x="36672050535" fg:w="4099146"/><text x="99.3219%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4,099,146 samples, 0.01%)</title><rect x="99.0719%" y="677" width="0.0111%" height="15" fill="rgb(218,58,49)" fg:x="36672050535" fg:w="4099146"/><text x="99.3219%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4,099,146 samples, 0.01%)</title><rect x="99.0719%" y="661" width="0.0111%" height="15" fill="rgb(219,179,14)" fg:x="36672050535" fg:w="4099146"/><text x="99.3219%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4,099,146 samples, 0.01%)</title><rect x="99.0719%" y="645" width="0.0111%" height="15" fill="rgb(223,72,1)" fg:x="36672050535" fg:w="4099146"/><text x="99.3219%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4,347,207 samples, 0.01%)</title><rect x="99.1061%" y="581" width="0.0117%" height="15" fill="rgb(238,126,10)" fg:x="36684707759" fg:w="4347207"/><text x="99.3561%" y="591.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (8,444,127 samples, 0.02%)</title><rect x="99.1061%" y="629" width="0.0228%" height="15" fill="rgb(224,206,38)" fg:x="36684707759" fg:w="8444127"/><text x="99.3561%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8,444,127 samples, 0.02%)</title><rect x="99.1061%" y="613" width="0.0228%" height="15" fill="rgb(212,201,54)" fg:x="36684707759" fg:w="8444127"/><text x="99.3561%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8,444,127 samples, 0.02%)</title><rect x="99.1061%" y="597" width="0.0228%" height="15" fill="rgb(218,154,48)" fg:x="36684707759" fg:w="8444127"/><text x="99.3561%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4,096,920 samples, 0.01%)</title><rect x="99.1179%" y="581" width="0.0111%" height="15" fill="rgb(232,93,24)" fg:x="36689054966" fg:w="4096920"/><text x="99.3679%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,096,920 samples, 0.01%)</title><rect x="99.1179%" y="565" width="0.0111%" height="15" fill="rgb(245,30,21)" fg:x="36689054966" fg:w="4096920"/><text x="99.3679%" y="575.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (16,856,259 samples, 0.05%)</title><rect x="99.0946%" y="741" width="0.0455%" height="15" fill="rgb(242,148,29)" fg:x="36680456491" fg:w="16856259"/><text x="99.3446%" y="751.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (16,856,259 samples, 0.05%)</title><rect x="99.0946%" y="725" width="0.0455%" height="15" fill="rgb(244,153,54)" fg:x="36680456491" fg:w="16856259"/><text x="99.3446%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (16,856,259 samples, 0.05%)</title><rect x="99.0946%" y="709" width="0.0455%" height="15" fill="rgb(252,87,22)" fg:x="36680456491" fg:w="16856259"/><text x="99.3446%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (16,856,259 samples, 0.05%)</title><rect x="99.0946%" y="693" width="0.0455%" height="15" fill="rgb(210,51,29)" fg:x="36680456491" fg:w="16856259"/><text x="99.3446%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (16,856,259 samples, 0.05%)</title><rect x="99.0946%" y="677" width="0.0455%" height="15" fill="rgb(242,136,47)" fg:x="36680456491" fg:w="16856259"/><text x="99.3446%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (16,856,259 samples, 0.05%)</title><rect x="99.0946%" y="661" width="0.0455%" height="15" fill="rgb(238,68,4)" fg:x="36680456491" fg:w="16856259"/><text x="99.3446%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12,604,991 samples, 0.03%)</title><rect x="99.1061%" y="645" width="0.0341%" height="15" fill="rgb(242,161,30)" fg:x="36684707759" fg:w="12604991"/><text x="99.3561%" y="655.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (4,160,864 samples, 0.01%)</title><rect x="99.1289%" y="629" width="0.0112%" height="15" fill="rgb(218,58,44)" fg:x="36693151886" fg:w="4160864"/><text x="99.3789%" y="639.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4,160,864 samples, 0.01%)</title><rect x="99.1289%" y="613" width="0.0112%" height="15" fill="rgb(252,125,32)" fg:x="36693151886" fg:w="4160864"/><text x="99.3789%" y="623.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4,160,864 samples, 0.01%)</title><rect x="99.1289%" y="597" width="0.0112%" height="15" fill="rgb(219,178,0)" fg:x="36693151886" fg:w="4160864"/><text x="99.3789%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (4,160,864 samples, 0.01%)</title><rect x="99.1289%" y="581" width="0.0112%" height="15" fill="rgb(213,152,7)" fg:x="36693151886" fg:w="4160864"/><text x="99.3789%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3,734,223 samples, 0.01%)</title><rect x="99.1402%" y="565" width="0.0101%" height="15" fill="rgb(249,109,34)" fg:x="36697312750" fg:w="3734223"/><text x="99.3902%" y="575.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (7,845,418 samples, 0.02%)</title><rect x="99.1402%" y="741" width="0.0212%" height="15" fill="rgb(232,96,21)" fg:x="36697312750" fg:w="7845418"/><text x="99.3902%" y="751.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (7,845,418 samples, 0.02%)</title><rect x="99.1402%" y="725" width="0.0212%" height="15" fill="rgb(228,27,39)" fg:x="36697312750" fg:w="7845418"/><text x="99.3902%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (7,845,418 samples, 0.02%)</title><rect x="99.1402%" y="709" width="0.0212%" height="15" fill="rgb(211,182,52)" fg:x="36697312750" fg:w="7845418"/><text x="99.3902%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (7,845,418 samples, 0.02%)</title><rect x="99.1402%" y="693" width="0.0212%" height="15" fill="rgb(234,178,38)" fg:x="36697312750" fg:w="7845418"/><text x="99.3902%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (7,845,418 samples, 0.02%)</title><rect x="99.1402%" y="677" width="0.0212%" height="15" fill="rgb(221,111,3)" fg:x="36697312750" fg:w="7845418"/><text x="99.3902%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (7,845,418 samples, 0.02%)</title><rect x="99.1402%" y="661" width="0.0212%" height="15" fill="rgb(228,175,21)" fg:x="36697312750" fg:w="7845418"/><text x="99.3902%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7,845,418 samples, 0.02%)</title><rect x="99.1402%" y="645" width="0.0212%" height="15" fill="rgb(228,174,43)" fg:x="36697312750" fg:w="7845418"/><text x="99.3902%" y="655.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (7,845,418 samples, 0.02%)</title><rect x="99.1402%" y="629" width="0.0212%" height="15" fill="rgb(211,191,0)" fg:x="36697312750" fg:w="7845418"/><text x="99.3902%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7,845,418 samples, 0.02%)</title><rect x="99.1402%" y="613" width="0.0212%" height="15" fill="rgb(253,117,3)" fg:x="36697312750" fg:w="7845418"/><text x="99.3902%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7,845,418 samples, 0.02%)</title><rect x="99.1402%" y="597" width="0.0212%" height="15" fill="rgb(241,127,19)" fg:x="36697312750" fg:w="7845418"/><text x="99.3902%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7,845,418 samples, 0.02%)</title><rect x="99.1402%" y="581" width="0.0212%" height="15" fill="rgb(218,103,12)" fg:x="36697312750" fg:w="7845418"/><text x="99.3902%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4,111,195 samples, 0.01%)</title><rect x="99.1503%" y="565" width="0.0111%" height="15" fill="rgb(236,214,43)" fg:x="36701046973" fg:w="4111195"/><text x="99.4003%" y="575.50"></text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (26,577,109,056 samples, 71.80%)</title><rect x="27.3730%" y="837" width="71.7998%" height="15" fill="rgb(244,144,19)" fg:x="10132261432" fg:w="26577109056"/><text x="27.6230%" y="847.50">mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all</text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (26,577,109,056 samples, 71.80%)</title><rect x="27.3730%" y="821" width="71.7998%" height="15" fill="rgb(246,188,10)" fg:x="10132261432" fg:w="26577109056"/><text x="27.6230%" y="831.50">mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all</text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (26,569,001,429 samples, 71.78%)</title><rect x="27.3949%" y="805" width="71.7779%" height="15" fill="rgb(212,193,33)" fg:x="10140369059" fg:w="26569001429"/><text x="27.6449%" y="815.50">mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all</text></g><g><title>mws5::search::cross_fit (33,220,807 samples, 0.09%)</title><rect x="99.0830%" y="789" width="0.0897%" height="15" fill="rgb(241,51,29)" fg:x="36676149681" fg:w="33220807"/><text x="99.3330%" y="799.50"></text></g><g><title>mws5::dict::Dict::is_fit (33,220,807 samples, 0.09%)</title><rect x="99.0830%" y="773" width="0.0897%" height="15" fill="rgb(211,58,19)" fg:x="36676149681" fg:w="33220807"/><text x="99.3330%" y="783.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (28,913,997 samples, 0.08%)</title><rect x="99.0946%" y="757" width="0.0781%" height="15" fill="rgb(229,111,26)" fg:x="36680456491" fg:w="28913997"/><text x="99.3446%" y="767.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::increment (4,212,320 samples, 0.01%)</title><rect x="99.1614%" y="741" width="0.0114%" height="15" fill="rgb(213,115,40)" fg:x="36705158168" fg:w="4212320"/><text x="99.4114%" y="751.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::try_reset (4,081,290 samples, 0.01%)</title><rect x="99.1617%" y="725" width="0.0110%" height="15" fill="rgb(209,56,44)" fg:x="36705289198" fg:w="4081290"/><text x="99.4117%" y="735.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::reset (4,081,290 samples, 0.01%)</title><rect x="99.1617%" y="709" width="0.0110%" height="15" fill="rgb(230,108,32)" fg:x="36705289198" fg:w="4081290"/><text x="99.4117%" y="719.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset (4,081,290 samples, 0.01%)</title><rect x="99.1617%" y="693" width="0.0110%" height="15" fill="rgb(216,165,31)" fg:x="36705289198" fg:w="4081290"/><text x="99.4117%" y="703.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (4,081,290 samples, 0.01%)</title><rect x="99.1617%" y="677" width="0.0110%" height="15" fill="rgb(218,122,21)" fg:x="36705289198" fg:w="4081290"/><text x="99.4117%" y="687.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset::_{{closure}} (4,081,290 samples, 0.01%)</title><rect x="99.1617%" y="661" width="0.0110%" height="15" fill="rgb(223,224,47)" fg:x="36705289198" fg:w="4081290"/><text x="99.4117%" y="671.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset (4,081,290 samples, 0.01%)</title><rect x="99.1617%" y="645" width="0.0110%" height="15" fill="rgb(238,102,44)" fg:x="36705289198" fg:w="4081290"/><text x="99.4117%" y="655.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (4,081,290 samples, 0.01%)</title><rect x="99.1617%" y="629" width="0.0110%" height="15" fill="rgb(236,46,40)" fg:x="36705289198" fg:w="4081290"/><text x="99.4117%" y="639.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset::_{{closure}} (4,081,290 samples, 0.01%)</title><rect x="99.1617%" y="613" width="0.0110%" height="15" fill="rgb(247,202,50)" fg:x="36705289198" fg:w="4081290"/><text x="99.4117%" y="623.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (4,271,279 samples, 0.01%)</title><rect x="99.1727%" y="373" width="0.0115%" height="15" fill="rgb(209,99,20)" fg:x="36709370488" fg:w="4271279"/><text x="99.4227%" y="383.50"></text></g><g><title>__rcu_read_unlock (4,271,279 samples, 0.01%)</title><rect x="99.1727%" y="357" width="0.0115%" height="15" fill="rgb(252,27,34)" fg:x="36709370488" fg:w="4271279"/><text x="99.4227%" y="367.50"></text></g><g><title>copy_page_from_iter_atomic (4,211,443 samples, 0.01%)</title><rect x="99.1843%" y="373" width="0.0114%" height="15" fill="rgb(215,206,23)" fg:x="36713641767" fg:w="4211443"/><text x="99.4343%" y="383.50"></text></g><g><title>ext4_da_write_begin (10,760,314 samples, 0.03%)</title><rect x="99.1957%" y="373" width="0.0291%" height="15" fill="rgb(212,135,36)" fg:x="36717853210" fg:w="10760314"/><text x="99.4457%" y="383.50"></text></g><g><title>__filemap_get_folio (10,760,314 samples, 0.03%)</title><rect x="99.1957%" y="357" width="0.0291%" height="15" fill="rgb(240,189,1)" fg:x="36717853210" fg:w="10760314"/><text x="99.4457%" y="367.50"></text></g><g><title>ext4_buffered_write_iter (22,973,117 samples, 0.06%)</title><rect x="99.1727%" y="405" width="0.0621%" height="15" fill="rgb(242,56,20)" fg:x="36709370488" fg:w="22973117"/><text x="99.4227%" y="415.50"></text></g><g><title>generic_perform_write (22,973,117 samples, 0.06%)</title><rect x="99.1727%" y="389" width="0.0621%" height="15" fill="rgb(247,132,33)" fg:x="36709370488" fg:w="22973117"/><text x="99.4227%" y="399.50"></text></g><g><title>fault_in_iov_iter_readable (3,730,081 samples, 0.01%)</title><rect x="99.2247%" y="373" width="0.0101%" height="15" fill="rgb(208,149,11)" fg:x="36728613524" fg:w="3730081"/><text x="99.4747%" y="383.50"></text></g><g><title>ksys_write (26,708,185 samples, 0.07%)</title><rect x="99.1727%" y="437" width="0.0722%" height="15" fill="rgb(211,33,11)" fg:x="36709370488" fg:w="26708185"/><text x="99.4227%" y="447.50"></text></g><g><title>vfs_write (26,708,185 samples, 0.07%)</title><rect x="99.1727%" y="421" width="0.0722%" height="15" fill="rgb(221,29,38)" fg:x="36709370488" fg:w="26708185"/><text x="99.4227%" y="431.50"></text></g><g><title>rw_verify_area (3,735,068 samples, 0.01%)</title><rect x="99.2348%" y="405" width="0.0101%" height="15" fill="rgb(206,182,49)" fg:x="36732343605" fg:w="3735068"/><text x="99.4848%" y="415.50"></text></g><g><title>security_file_permission (3,735,068 samples, 0.01%)</title><rect x="99.2348%" y="389" width="0.0101%" height="15" fill="rgb(216,140,1)" fg:x="36732343605" fg:w="3735068"/><text x="99.4848%" y="399.50"></text></g><g><title>apparmor_file_permission (3,735,068 samples, 0.01%)</title><rect x="99.2348%" y="373" width="0.0101%" height="15" fill="rgb(232,57,40)" fg:x="36732343605" fg:w="3735068"/><text x="99.4848%" y="383.50"></text></g><g><title>aa_file_perm (3,735,068 samples, 0.01%)</title><rect x="99.2348%" y="357" width="0.0101%" height="15" fill="rgb(224,186,18)" fg:x="36732343605" fg:w="3735068"/><text x="99.4848%" y="367.50"></text></g><g><title>serde_json::ser::Formatter::begin_string (30,675,656 samples, 0.08%)</title><rect x="99.1727%" y="613" width="0.0829%" height="15" fill="rgb(215,121,11)" fg:x="36709370488" fg:w="30675656"/><text x="99.4227%" y="623.50"></text></g><g><title>std::io::Write::write_all (30,675,656 samples, 0.08%)</title><rect x="99.1727%" y="597" width="0.0829%" height="15" fill="rgb(245,147,10)" fg:x="36709370488" fg:w="30675656"/><text x="99.4227%" y="607.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (30,675,656 samples, 0.08%)</title><rect x="99.1727%" y="581" width="0.0829%" height="15" fill="rgb(238,153,13)" fg:x="36709370488" fg:w="30675656"/><text x="99.4227%" y="591.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (30,675,656 samples, 0.08%)</title><rect x="99.1727%" y="565" width="0.0829%" height="15" fill="rgb(233,108,0)" fg:x="36709370488" fg:w="30675656"/><text x="99.4227%" y="575.50"></text></g><g><title>std::sys::fs::unix::File::write (30,675,656 samples, 0.08%)</title><rect x="99.1727%" y="549" width="0.0829%" height="15" fill="rgb(212,157,17)" fg:x="36709370488" fg:w="30675656"/><text x="99.4227%" y="559.50"></text></g><g><title>std::sys::fd::unix::FileDesc::write (30,675,656 samples, 0.08%)</title><rect x="99.1727%" y="533" width="0.0829%" height="15" fill="rgb(225,213,38)" fg:x="36709370488" fg:w="30675656"/><text x="99.4227%" y="543.50"></text></g><g><title>__GI___libc_write (30,675,656 samples, 0.08%)</title><rect x="99.1727%" y="517" width="0.0829%" height="15" fill="rgb(248,16,11)" fg:x="36709370488" fg:w="30675656"/><text x="99.4227%" y="527.50"></text></g><g><title>__syscall_cancel (30,675,656 samples, 0.08%)</title><rect x="99.1727%" y="501" width="0.0829%" height="15" fill="rgb(241,33,4)" fg:x="36709370488" fg:w="30675656"/><text x="99.4227%" y="511.50"></text></g><g><title>__internal_syscall_cancel (30,675,656 samples, 0.08%)</title><rect x="99.1727%" y="485" width="0.0829%" height="15" fill="rgb(222,26,43)" fg:x="36709370488" fg:w="30675656"/><text x="99.4227%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (30,675,656 samples, 0.08%)</title><rect x="99.1727%" y="469" width="0.0829%" height="15" fill="rgb(243,29,36)" fg:x="36709370488" fg:w="30675656"/><text x="99.4227%" y="479.50"></text></g><g><title>do_syscall_64 (30,675,656 samples, 0.08%)</title><rect x="99.1727%" y="453" width="0.0829%" height="15" fill="rgb(241,9,27)" fg:x="36709370488" fg:w="30675656"/><text x="99.4227%" y="463.50"></text></g><g><title>syscall_exit_to_user_mode (3,967,471 samples, 0.01%)</title><rect x="99.2449%" y="437" width="0.0107%" height="15" fill="rgb(205,117,26)" fg:x="36736078673" fg:w="3967471"/><text x="99.4949%" y="447.50"></text></g><g><title>fpregs_assert_state_consistent (3,967,471 samples, 0.01%)</title><rect x="99.2449%" y="421" width="0.0107%" height="15" fill="rgb(209,80,39)" fg:x="36736078673" fg:w="3967471"/><text x="99.4949%" y="431.50"></text></g><g><title>entry_SYSCALL_64 (4,177,285 samples, 0.01%)</title><rect x="99.2646%" y="469" width="0.0113%" height="15" fill="rgb(239,155,6)" fg:x="36743358128" fg:w="4177285"/><text x="99.5146%" y="479.50"></text></g><g><title>ext4_generic_write_checks (3,793,002 samples, 0.01%)</title><rect x="99.2870%" y="389" width="0.0102%" height="15" fill="rgb(212,104,12)" fg:x="36751648725" fg:w="3793002"/><text x="99.5370%" y="399.50"></text></g><g><title>ext4_buffered_write_iter (7,160,933 samples, 0.02%)</title><rect x="99.2870%" y="405" width="0.0193%" height="15" fill="rgb(234,204,3)" fg:x="36751648725" fg:w="7160933"/><text x="99.5370%" y="415.50"></text></g><g><title>serde_json::ser::Formatter::end_string (21,956,916 samples, 0.06%)</title><rect x="99.2556%" y="613" width="0.0593%" height="15" fill="rgb(251,218,7)" fg:x="36740046144" fg:w="21956916"/><text x="99.5056%" y="623.50"></text></g><g><title>std::io::Write::write_all (21,956,916 samples, 0.06%)</title><rect x="99.2556%" y="597" width="0.0593%" height="15" fill="rgb(221,81,32)" fg:x="36740046144" fg:w="21956916"/><text x="99.5056%" y="607.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (21,956,916 samples, 0.06%)</title><rect x="99.2556%" y="581" width="0.0593%" height="15" fill="rgb(214,152,26)" fg:x="36740046144" fg:w="21956916"/><text x="99.5056%" y="591.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (21,956,916 samples, 0.06%)</title><rect x="99.2556%" y="565" width="0.0593%" height="15" fill="rgb(223,22,3)" fg:x="36740046144" fg:w="21956916"/><text x="99.5056%" y="575.50"></text></g><g><title>std::sys::fs::unix::File::write (21,956,916 samples, 0.06%)</title><rect x="99.2556%" y="549" width="0.0593%" height="15" fill="rgb(207,174,7)" fg:x="36740046144" fg:w="21956916"/><text x="99.5056%" y="559.50"></text></g><g><title>std::sys::fd::unix::FileDesc::write (21,956,916 samples, 0.06%)</title><rect x="99.2556%" y="533" width="0.0593%" height="15" fill="rgb(224,19,52)" fg:x="36740046144" fg:w="21956916"/><text x="99.5056%" y="543.50"></text></g><g><title>__GI___libc_write (21,956,916 samples, 0.06%)</title><rect x="99.2556%" y="517" width="0.0593%" height="15" fill="rgb(228,24,14)" fg:x="36740046144" fg:w="21956916"/><text x="99.5056%" y="527.50"></text></g><g><title>__syscall_cancel (18,644,932 samples, 0.05%)</title><rect x="99.2646%" y="501" width="0.0504%" height="15" fill="rgb(230,153,43)" fg:x="36743358128" fg:w="18644932"/><text x="99.5146%" y="511.50"></text></g><g><title>__internal_syscall_cancel (18,644,932 samples, 0.05%)</title><rect x="99.2646%" y="485" width="0.0504%" height="15" fill="rgb(231,106,12)" fg:x="36743358128" fg:w="18644932"/><text x="99.5146%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14,467,647 samples, 0.04%)</title><rect x="99.2759%" y="469" width="0.0391%" height="15" fill="rgb(215,92,2)" fg:x="36747535413" fg:w="14467647"/><text x="99.5259%" y="479.50"></text></g><g><title>do_syscall_64 (14,467,647 samples, 0.04%)</title><rect x="99.2759%" y="453" width="0.0391%" height="15" fill="rgb(249,143,25)" fg:x="36747535413" fg:w="14467647"/><text x="99.5259%" y="463.50"></text></g><g><title>ksys_write (14,467,647 samples, 0.04%)</title><rect x="99.2759%" y="437" width="0.0391%" height="15" fill="rgb(252,7,35)" fg:x="36747535413" fg:w="14467647"/><text x="99.5259%" y="447.50"></text></g><g><title>vfs_write (14,467,647 samples, 0.04%)</title><rect x="99.2759%" y="421" width="0.0391%" height="15" fill="rgb(216,69,40)" fg:x="36747535413" fg:w="14467647"/><text x="99.5259%" y="431.50"></text></g><g><title>entry_SYSCALL_64 (3,866,017 samples, 0.01%)</title><rect x="99.3235%" y="453" width="0.0104%" height="15" fill="rgb(240,36,33)" fg:x="36765183797" fg:w="3866017"/><text x="99.5735%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (71,669,586 samples, 0.19%)</title><rect x="99.1727%" y="661" width="0.1936%" height="15" fill="rgb(231,128,14)" fg:x="36709370488" fg:w="71669586"/><text x="99.4227%" y="671.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (71,669,586 samples, 0.19%)</title><rect x="99.1727%" y="645" width="0.1936%" height="15" fill="rgb(245,143,14)" fg:x="36709370488" fg:w="71669586"/><text x="99.4227%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (71,669,586 samples, 0.19%)</title><rect x="99.1727%" y="629" width="0.1936%" height="15" fill="rgb(222,130,28)" fg:x="36709370488" fg:w="71669586"/><text x="99.4227%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (19,037,014 samples, 0.05%)</title><rect x="99.3149%" y="613" width="0.0514%" height="15" fill="rgb(212,10,48)" fg:x="36762003060" fg:w="19037014"/><text x="99.5649%" y="623.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (19,037,014 samples, 0.05%)</title><rect x="99.3149%" y="597" width="0.0514%" height="15" fill="rgb(254,118,45)" fg:x="36762003060" fg:w="19037014"/><text x="99.5649%" y="607.50"></text></g><g><title>std::io::Write::write_all (19,037,014 samples, 0.05%)</title><rect x="99.3149%" y="581" width="0.0514%" height="15" fill="rgb(228,6,45)" fg:x="36762003060" fg:w="19037014"/><text x="99.5649%" y="591.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (19,037,014 samples, 0.05%)</title><rect x="99.3149%" y="565" width="0.0514%" height="15" fill="rgb(241,18,35)" fg:x="36762003060" fg:w="19037014"/><text x="99.5649%" y="575.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (19,037,014 samples, 0.05%)</title><rect x="99.3149%" y="549" width="0.0514%" height="15" fill="rgb(227,214,53)" fg:x="36762003060" fg:w="19037014"/><text x="99.5649%" y="559.50"></text></g><g><title>std::sys::fs::unix::File::write (19,037,014 samples, 0.05%)</title><rect x="99.3149%" y="533" width="0.0514%" height="15" fill="rgb(224,107,51)" fg:x="36762003060" fg:w="19037014"/><text x="99.5649%" y="543.50"></text></g><g><title>std::sys::fd::unix::FileDesc::write (19,037,014 samples, 0.05%)</title><rect x="99.3149%" y="517" width="0.0514%" height="15" fill="rgb(248,60,28)" fg:x="36762003060" fg:w="19037014"/><text x="99.5649%" y="527.50"></text></g><g><title>__GI___libc_write (19,037,014 samples, 0.05%)</title><rect x="99.3149%" y="501" width="0.0514%" height="15" fill="rgb(249,101,23)" fg:x="36762003060" fg:w="19037014"/><text x="99.5649%" y="511.50"></text></g><g><title>__syscall_cancel (15,856,277 samples, 0.04%)</title><rect x="99.3235%" y="485" width="0.0428%" height="15" fill="rgb(228,51,19)" fg:x="36765183797" fg:w="15856277"/><text x="99.5735%" y="495.50"></text></g><g><title>__internal_syscall_cancel (15,856,277 samples, 0.04%)</title><rect x="99.3235%" y="469" width="0.0428%" height="15" fill="rgb(213,20,6)" fg:x="36765183797" fg:w="15856277"/><text x="99.5735%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11,990,260 samples, 0.03%)</title><rect x="99.3340%" y="453" width="0.0324%" height="15" fill="rgb(212,124,10)" fg:x="36769049814" fg:w="11990260"/><text x="99.5840%" y="463.50"></text></g><g><title>do_syscall_64 (11,990,260 samples, 0.03%)</title><rect x="99.3340%" y="437" width="0.0324%" height="15" fill="rgb(248,3,40)" fg:x="36769049814" fg:w="11990260"/><text x="99.5840%" y="447.50"></text></g><g><title>ksys_write (11,990,260 samples, 0.03%)</title><rect x="99.3340%" y="421" width="0.0324%" height="15" fill="rgb(223,178,23)" fg:x="36769049814" fg:w="11990260"/><text x="99.5840%" y="431.50"></text></g><g><title>vfs_write (11,990,260 samples, 0.03%)</title><rect x="99.3340%" y="405" width="0.0324%" height="15" fill="rgb(240,132,45)" fg:x="36769049814" fg:w="11990260"/><text x="99.5840%" y="415.50"></text></g><g><title>ext4_buffered_write_iter (11,990,260 samples, 0.03%)</title><rect x="99.3340%" y="389" width="0.0324%" height="15" fill="rgb(245,164,36)" fg:x="36769049814" fg:w="11990260"/><text x="99.5840%" y="399.50"></text></g><g><title>generic_perform_write (11,990,260 samples, 0.03%)</title><rect x="99.3340%" y="373" width="0.0324%" height="15" fill="rgb(231,188,53)" fg:x="36769049814" fg:w="11990260"/><text x="99.5840%" y="383.50"></text></g><g><title>ext4_da_write_begin (3,730,081 samples, 0.01%)</title><rect x="99.3563%" y="357" width="0.0101%" height="15" fill="rgb(237,198,39)" fg:x="36777309993" fg:w="3730081"/><text x="99.6063%" y="367.50"></text></g><g><title>serde_json::ser::to_writer (75,925,059 samples, 0.21%)</title><rect x="99.1727%" y="837" width="0.2051%" height="15" fill="rgb(223,120,35)" fg:x="36709370488" fg:w="75925059"/><text x="99.4227%" y="847.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (75,925,059 samples, 0.21%)</title><rect x="99.1727%" y="821" width="0.2051%" height="15" fill="rgb(253,107,49)" fg:x="36709370488" fg:w="75925059"/><text x="99.4227%" y="831.50"></text></g><g><title>serde::ser::Serializer::collect_seq (75,925,059 samples, 0.21%)</title><rect x="99.1727%" y="805" width="0.2051%" height="15" fill="rgb(216,44,31)" fg:x="36709370488" fg:w="75925059"/><text x="99.4227%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (75,925,059 samples, 0.21%)</title><rect x="99.1727%" y="789" width="0.2051%" height="15" fill="rgb(253,87,21)" fg:x="36709370488" fg:w="75925059"/><text x="99.4227%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (75,925,059 samples, 0.21%)</title><rect x="99.1727%" y="773" width="0.2051%" height="15" fill="rgb(226,18,2)" fg:x="36709370488" fg:w="75925059"/><text x="99.4227%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (75,925,059 samples, 0.21%)</title><rect x="99.1727%" y="757" width="0.2051%" height="15" fill="rgb(216,8,46)" fg:x="36709370488" fg:w="75925059"/><text x="99.4227%" y="767.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (75,925,059 samples, 0.21%)</title><rect x="99.1727%" y="741" width="0.2051%" height="15" fill="rgb(226,140,39)" fg:x="36709370488" fg:w="75925059"/><text x="99.4227%" y="751.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (75,925,059 samples, 0.21%)</title><rect x="99.1727%" y="725" width="0.2051%" height="15" fill="rgb(221,194,54)" fg:x="36709370488" fg:w="75925059"/><text x="99.4227%" y="735.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (75,925,059 samples, 0.21%)</title><rect x="99.1727%" y="709" width="0.2051%" height="15" fill="rgb(213,92,11)" fg:x="36709370488" fg:w="75925059"/><text x="99.4227%" y="719.50"></text></g><g><title>&lt;mws5::squares::Square as serde::ser::Serialize&gt;::serialize (75,925,059 samples, 0.21%)</title><rect x="99.1727%" y="693" width="0.2051%" height="15" fill="rgb(229,162,46)" fg:x="36709370488" fg:w="75925059"/><text x="99.4227%" y="703.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (75,925,059 samples, 0.21%)</title><rect x="99.1727%" y="677" width="0.2051%" height="15" fill="rgb(214,111,36)" fg:x="36709370488" fg:w="75925059"/><text x="99.4227%" y="687.50"></text></g><g><title>serde_json::ser::Formatter::begin_array_value (4,255,473 samples, 0.01%)</title><rect x="99.3664%" y="661" width="0.0115%" height="15" fill="rgb(207,6,21)" fg:x="36781040074" fg:w="4255473"/><text x="99.6164%" y="671.50"></text></g><g><title>std::io::Write::write_all (4,255,473 samples, 0.01%)</title><rect x="99.3664%" y="645" width="0.0115%" height="15" fill="rgb(213,127,38)" fg:x="36781040074" fg:w="4255473"/><text x="99.6164%" y="655.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (4,255,473 samples, 0.01%)</title><rect x="99.3664%" y="629" width="0.0115%" height="15" fill="rgb(238,118,32)" fg:x="36781040074" fg:w="4255473"/><text x="99.6164%" y="639.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (4,255,473 samples, 0.01%)</title><rect x="99.3664%" y="613" width="0.0115%" height="15" fill="rgb(240,139,39)" fg:x="36781040074" fg:w="4255473"/><text x="99.6164%" y="623.50"></text></g><g><title>std::sys::fs::unix::File::write (4,255,473 samples, 0.01%)</title><rect x="99.3664%" y="597" width="0.0115%" height="15" fill="rgb(235,10,37)" fg:x="36781040074" fg:w="4255473"/><text x="99.6164%" y="607.50"></text></g><g><title>std::sys::fd::unix::FileDesc::write (4,255,473 samples, 0.01%)</title><rect x="99.3664%" y="581" width="0.0115%" height="15" fill="rgb(249,171,38)" fg:x="36781040074" fg:w="4255473"/><text x="99.6164%" y="591.50"></text></g><g><title>__GI___libc_write (4,255,473 samples, 0.01%)</title><rect x="99.3664%" y="565" width="0.0115%" height="15" fill="rgb(242,144,32)" fg:x="36781040074" fg:w="4255473"/><text x="99.6164%" y="575.50"></text></g><g><title>__syscall_cancel (4,255,473 samples, 0.01%)</title><rect x="99.3664%" y="549" width="0.0115%" height="15" fill="rgb(217,117,21)" fg:x="36781040074" fg:w="4255473"/><text x="99.6164%" y="559.50"></text></g><g><title>__internal_syscall_cancel (4,255,473 samples, 0.01%)</title><rect x="99.3664%" y="533" width="0.0115%" height="15" fill="rgb(249,87,1)" fg:x="36781040074" fg:w="4255473"/><text x="99.6164%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4,255,473 samples, 0.01%)</title><rect x="99.3664%" y="517" width="0.0115%" height="15" fill="rgb(248,196,48)" fg:x="36781040074" fg:w="4255473"/><text x="99.6164%" y="527.50"></text></g><g><title>do_syscall_64 (4,255,473 samples, 0.01%)</title><rect x="99.3664%" y="501" width="0.0115%" height="15" fill="rgb(251,206,33)" fg:x="36781040074" fg:w="4255473"/><text x="99.6164%" y="511.50"></text></g><g><title>ksys_write (4,255,473 samples, 0.01%)</title><rect x="99.3664%" y="485" width="0.0115%" height="15" fill="rgb(232,141,28)" fg:x="36781040074" fg:w="4255473"/><text x="99.6164%" y="495.50"></text></g><g><title>vfs_write (4,255,473 samples, 0.01%)</title><rect x="99.3664%" y="469" width="0.0115%" height="15" fill="rgb(209,167,14)" fg:x="36781040074" fg:w="4255473"/><text x="99.6164%" y="479.50"></text></g><g><title>ext4_buffered_write_iter (4,255,473 samples, 0.01%)</title><rect x="99.3664%" y="453" width="0.0115%" height="15" fill="rgb(225,11,50)" fg:x="36781040074" fg:w="4255473"/><text x="99.6164%" y="463.50"></text></g><g><title>generic_perform_write (4,255,473 samples, 0.01%)</title><rect x="99.3664%" y="437" width="0.0115%" height="15" fill="rgb(209,50,20)" fg:x="36781040074" fg:w="4255473"/><text x="99.6164%" y="447.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (4,255,473 samples, 0.01%)</title><rect x="99.3664%" y="421" width="0.0115%" height="15" fill="rgb(212,17,46)" fg:x="36781040074" fg:w="4255473"/><text x="99.6164%" y="431.50"></text></g><g><title>_start (26,656,044,876 samples, 72.01%)</title><rect x="27.3730%" y="1125" width="72.0130%" height="15" fill="rgb(216,101,39)" fg:x="10132261432" fg:w="26656044876"/><text x="27.6230%" y="1135.50">_start</text></g><g><title>__libc_start_main_impl (26,656,044,876 samples, 72.01%)</title><rect x="27.3730%" y="1109" width="72.0130%" height="15" fill="rgb(212,228,48)" fg:x="10132261432" fg:w="26656044876"/><text x="27.6230%" y="1119.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (26,656,044,876 samples, 72.01%)</title><rect x="27.3730%" y="1093" width="72.0130%" height="15" fill="rgb(250,6,50)" fg:x="10132261432" fg:w="26656044876"/><text x="27.6230%" y="1103.50">__libc_start_call_main</text></g><g><title>main (26,656,044,876 samples, 72.01%)</title><rect x="27.3730%" y="1077" width="72.0130%" height="15" fill="rgb(250,160,48)" fg:x="10132261432" fg:w="26656044876"/><text x="27.6230%" y="1087.50">main</text></g><g><title>std::rt::lang_start_internal (26,656,044,876 samples, 72.01%)</title><rect x="27.3730%" y="1061" width="72.0130%" height="15" fill="rgb(244,216,33)" fg:x="10132261432" fg:w="26656044876"/><text x="27.6230%" y="1071.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (26,656,044,876 samples, 72.01%)</title><rect x="27.3730%" y="1045" width="72.0130%" height="15" fill="rgb(207,157,5)" fg:x="10132261432" fg:w="26656044876"/><text x="27.6230%" y="1055.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (26,656,044,876 samples, 72.01%)</title><rect x="27.3730%" y="1029" width="72.0130%" height="15" fill="rgb(228,199,8)" fg:x="10132261432" fg:w="26656044876"/><text x="27.6230%" y="1039.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (26,656,044,876 samples, 72.01%)</title><rect x="27.3730%" y="1013" width="72.0130%" height="15" fill="rgb(227,80,20)" fg:x="10132261432" fg:w="26656044876"/><text x="27.6230%" y="1023.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (26,656,044,876 samples, 72.01%)</title><rect x="27.3730%" y="997" width="72.0130%" height="15" fill="rgb(222,9,33)" fg:x="10132261432" fg:w="26656044876"/><text x="27.6230%" y="1007.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (26,656,044,876 samples, 72.01%)</title><rect x="27.3730%" y="981" width="72.0130%" height="15" fill="rgb(239,44,28)" fg:x="10132261432" fg:w="26656044876"/><text x="27.6230%" y="991.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (26,656,044,876 samples, 72.01%)</title><rect x="27.3730%" y="965" width="72.0130%" height="15" fill="rgb(249,187,43)" fg:x="10132261432" fg:w="26656044876"/><text x="27.6230%" y="975.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (26,656,044,876 samples, 72.01%)</title><rect x="27.3730%" y="949" width="72.0130%" height="15" fill="rgb(216,141,28)" fg:x="10132261432" fg:w="26656044876"/><text x="27.6230%" y="959.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (26,656,044,876 samples, 72.01%)</title><rect x="27.3730%" y="933" width="72.0130%" height="15" fill="rgb(230,154,53)" fg:x="10132261432" fg:w="26656044876"/><text x="27.6230%" y="943.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (26,656,044,876 samples, 72.01%)</title><rect x="27.3730%" y="917" width="72.0130%" height="15" fill="rgb(227,82,4)" fg:x="10132261432" fg:w="26656044876"/><text x="27.6230%" y="927.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (26,656,044,876 samples, 72.01%)</title><rect x="27.3730%" y="901" width="72.0130%" height="15" fill="rgb(220,107,16)" fg:x="10132261432" fg:w="26656044876"/><text x="27.6230%" y="911.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (26,656,044,876 samples, 72.01%)</title><rect x="27.3730%" y="885" width="72.0130%" height="15" fill="rgb(207,187,2)" fg:x="10132261432" fg:w="26656044876"/><text x="27.6230%" y="895.50">core::ops::function::FnOnce::call_once</text></g><g><title>mws5::main (26,656,044,876 samples, 72.01%)</title><rect x="27.3730%" y="869" width="72.0130%" height="15" fill="rgb(210,162,52)" fg:x="10132261432" fg:w="26656044876"/><text x="27.6230%" y="879.50">mws5::main</text></g><g><title>mws5::run (26,656,044,876 samples, 72.01%)</title><rect x="27.3730%" y="853" width="72.0130%" height="15" fill="rgb(217,216,49)" fg:x="10132261432" fg:w="26656044876"/><text x="27.6230%" y="863.50">mws5::run</text></g><g><title>handle_mm_fault (11,279,864 samples, 0.03%)</title><rect x="99.4013%" y="1077" width="0.0305%" height="15" fill="rgb(218,146,49)" fg:x="36793955783" fg:w="11279864"/><text x="99.6513%" y="1087.50"></text></g><g><title>__handle_mm_fault (11,279,864 samples, 0.03%)</title><rect x="99.4013%" y="1061" width="0.0305%" height="15" fill="rgb(216,55,40)" fg:x="36793955783" fg:w="11279864"/><text x="99.6513%" y="1071.50"></text></g><g><title>do_anonymous_page (11,279,864 samples, 0.03%)</title><rect x="99.4013%" y="1045" width="0.0305%" height="15" fill="rgb(208,196,21)" fg:x="36793955783" fg:w="11279864"/><text x="99.6513%" y="1055.50"></text></g><g><title>vma_alloc_folio_noprof (11,279,864 samples, 0.03%)</title><rect x="99.4013%" y="1029" width="0.0305%" height="15" fill="rgb(242,117,42)" fg:x="36793955783" fg:w="11279864"/><text x="99.6513%" y="1039.50"></text></g><g><title>folio_alloc_mpol_noprof (11,279,864 samples, 0.03%)</title><rect x="99.4013%" y="1013" width="0.0305%" height="15" fill="rgb(210,11,23)" fg:x="36793955783" fg:w="11279864"/><text x="99.6513%" y="1023.50"></text></g><g><title>alloc_pages_mpol_noprof (11,279,864 samples, 0.03%)</title><rect x="99.4013%" y="997" width="0.0305%" height="15" fill="rgb(217,110,2)" fg:x="36793955783" fg:w="11279864"/><text x="99.6513%" y="1007.50"></text></g><g><title>__alloc_pages_noprof (11,279,864 samples, 0.03%)</title><rect x="99.4013%" y="981" width="0.0305%" height="15" fill="rgb(229,77,54)" fg:x="36793955783" fg:w="11279864"/><text x="99.6513%" y="991.50"></text></g><g><title>get_page_from_freelist (11,279,864 samples, 0.03%)</title><rect x="99.4013%" y="965" width="0.0305%" height="15" fill="rgb(218,53,16)" fg:x="36793955783" fg:w="11279864"/><text x="99.6513%" y="975.50"></text></g><g><title>__rmqueue_pcplist (11,279,864 samples, 0.03%)</title><rect x="99.4013%" y="949" width="0.0305%" height="15" fill="rgb(215,38,13)" fg:x="36793955783" fg:w="11279864"/><text x="99.6513%" y="959.50"></text></g><g><title>__list_del_entry_valid_or_report (11,279,864 samples, 0.03%)</title><rect x="99.4013%" y="933" width="0.0305%" height="15" fill="rgb(235,42,18)" fg:x="36793955783" fg:w="11279864"/><text x="99.6513%" y="943.50"></text></g><g><title>asm_exc_page_fault (19,963,991 samples, 0.05%)</title><rect x="99.3895%" y="1125" width="0.0539%" height="15" fill="rgb(219,66,54)" fg:x="36789591732" fg:w="19963991"/><text x="99.6395%" y="1135.50"></text></g><g><title>exc_page_fault (15,599,940 samples, 0.04%)</title><rect x="99.4013%" y="1109" width="0.0421%" height="15" fill="rgb(222,205,4)" fg:x="36793955783" fg:w="15599940"/><text x="99.6513%" y="1119.50"></text></g><g><title>do_user_addr_fault (15,599,940 samples, 0.04%)</title><rect x="99.4013%" y="1093" width="0.0421%" height="15" fill="rgb(227,213,46)" fg:x="36793955783" fg:w="15599940"/><text x="99.6513%" y="1103.50"></text></g><g><title>lock_vma_under_rcu (4,320,076 samples, 0.01%)</title><rect x="99.4317%" y="1077" width="0.0117%" height="15" fill="rgb(250,145,42)" fg:x="36805235647" fg:w="4320076"/><text x="99.6817%" y="1087.50"></text></g><g><title>mas_walk (4,320,076 samples, 0.01%)</title><rect x="99.4317%" y="1061" width="0.0117%" height="15" fill="rgb(219,15,2)" fg:x="36805235647" fg:w="4320076"/><text x="99.6817%" y="1071.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::is_set (4,385,744 samples, 0.01%)</title><rect x="99.4434%" y="1093" width="0.0118%" height="15" fill="rgb(231,181,52)" fg:x="36809555723" fg:w="4385744"/><text x="99.6934%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4,385,744 samples, 0.01%)</title><rect x="99.4434%" y="1077" width="0.0118%" height="15" fill="rgb(235,1,42)" fg:x="36809555723" fg:w="4385744"/><text x="99.6934%" y="1087.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4,385,744 samples, 0.01%)</title><rect x="99.4434%" y="1061" width="0.0118%" height="15" fill="rgb(249,88,27)" fg:x="36809555723" fg:w="4385744"/><text x="99.6934%" y="1071.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4,385,744 samples, 0.01%)</title><rect x="99.4434%" y="1045" width="0.0118%" height="15" fill="rgb(235,145,16)" fg:x="36809555723" fg:w="4385744"/><text x="99.6934%" y="1055.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains_or_add (8,690,300 samples, 0.02%)</title><rect x="99.4434%" y="1125" width="0.0235%" height="15" fill="rgb(237,114,19)" fg:x="36809555723" fg:w="8690300"/><text x="99.6934%" y="1135.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains (8,690,300 samples, 0.02%)</title><rect x="99.4434%" y="1109" width="0.0235%" height="15" fill="rgb(238,51,50)" fg:x="36809555723" fg:w="8690300"/><text x="99.6934%" y="1119.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4,304,556 samples, 0.01%)</title><rect x="99.4553%" y="1093" width="0.0116%" height="15" fill="rgb(205,194,25)" fg:x="36813941467" fg:w="4304556"/><text x="99.7053%" y="1103.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4,304,556 samples, 0.01%)</title><rect x="99.4553%" y="1077" width="0.0116%" height="15" fill="rgb(215,203,17)" fg:x="36813941467" fg:w="4304556"/><text x="99.7053%" y="1087.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::capturing_put (4,348,291 samples, 0.01%)</title><rect x="99.4669%" y="1125" width="0.0117%" height="15" fill="rgb(233,112,49)" fg:x="36818246023" fg:w="4348291"/><text x="99.7169%" y="1135.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (4,348,291 samples, 0.01%)</title><rect x="99.4669%" y="1109" width="0.0117%" height="15" fill="rgb(241,130,26)" fg:x="36818246023" fg:w="4348291"/><text x="99.7169%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (4,348,291 samples, 0.01%)</title><rect x="99.4669%" y="1093" width="0.0117%" height="15" fill="rgb(252,223,19)" fg:x="36818246023" fg:w="4348291"/><text x="99.7169%" y="1103.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (8,525,100 samples, 0.02%)</title><rect x="99.4786%" y="1125" width="0.0230%" height="15" fill="rgb(211,95,25)" fg:x="36822594314" fg:w="8525100"/><text x="99.7286%" y="1135.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (4,322,083 samples, 0.01%)</title><rect x="99.4900%" y="1109" width="0.0117%" height="15" fill="rgb(251,182,27)" fg:x="36826797331" fg:w="4322083"/><text x="99.7400%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (4,322,083 samples, 0.01%)</title><rect x="99.4900%" y="1093" width="0.0117%" height="15" fill="rgb(238,24,4)" fg:x="36826797331" fg:w="4322083"/><text x="99.7400%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (4,322,083 samples, 0.01%)</title><rect x="99.4900%" y="1077" width="0.0117%" height="15" fill="rgb(224,220,25)" fg:x="36826797331" fg:w="4322083"/><text x="99.7400%" y="1087.50"></text></g><g><title>hashbrown::map::make_hash (4,322,083 samples, 0.01%)</title><rect x="99.4900%" y="1061" width="0.0117%" height="15" fill="rgb(239,133,26)" fg:x="36826797331" fg:w="4322083"/><text x="99.7400%" y="1071.50"></text></g><g><title>ksys_write (4,070,293 samples, 0.01%)</title><rect x="99.5021%" y="1093" width="0.0110%" height="15" fill="rgb(211,94,48)" fg:x="36831289984" fg:w="4070293"/><text x="99.7521%" y="1103.50"></text></g><g><title>vfs_write (4,070,293 samples, 0.01%)</title><rect x="99.5021%" y="1077" width="0.0110%" height="15" fill="rgb(239,87,6)" fg:x="36831289984" fg:w="4070293"/><text x="99.7521%" y="1087.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8,232,741 samples, 0.02%)</title><rect x="99.5017%" y="1125" width="0.0222%" height="15" fill="rgb(227,62,0)" fg:x="36831119414" fg:w="8232741"/><text x="99.7517%" y="1135.50"></text></g><g><title>do_syscall_64 (8,232,741 samples, 0.02%)</title><rect x="99.5017%" y="1109" width="0.0222%" height="15" fill="rgb(211,226,4)" fg:x="36831119414" fg:w="8232741"/><text x="99.7517%" y="1119.50"></text></g><g><title>x64_sys_call (3,991,878 samples, 0.01%)</title><rect x="99.5131%" y="1093" width="0.0108%" height="15" fill="rgb(253,38,52)" fg:x="36835360277" fg:w="3991878"/><text x="99.7631%" y="1103.50"></text></g><g><title>__x64_sys_exit_group (3,991,878 samples, 0.01%)</title><rect x="99.5131%" y="1077" width="0.0108%" height="15" fill="rgb(229,126,40)" fg:x="36835360277" fg:w="3991878"/><text x="99.7631%" y="1087.50"></text></g><g><title>do_group_exit (3,991,878 samples, 0.01%)</title><rect x="99.5131%" y="1061" width="0.0108%" height="15" fill="rgb(229,165,44)" fg:x="36835360277" fg:w="3991878"/><text x="99.7631%" y="1071.50"></text></g><g><title>do_exit (3,991,878 samples, 0.01%)</title><rect x="99.5131%" y="1045" width="0.0108%" height="15" fill="rgb(247,95,47)" fg:x="36835360277" fg:w="3991878"/><text x="99.7631%" y="1055.50"></text></g><g><title>__mmput (3,991,878 samples, 0.01%)</title><rect x="99.5131%" y="1029" width="0.0108%" height="15" fill="rgb(216,140,30)" fg:x="36835360277" fg:w="3991878"/><text x="99.7631%" y="1039.50"></text></g><g><title>exit_mmap (3,991,878 samples, 0.01%)</title><rect x="99.5131%" y="1013" width="0.0108%" height="15" fill="rgb(246,214,8)" fg:x="36835360277" fg:w="3991878"/><text x="99.7631%" y="1023.50"></text></g><g><title>tlb_finish_mmu (3,991,878 samples, 0.01%)</title><rect x="99.5131%" y="997" width="0.0108%" height="15" fill="rgb(227,224,15)" fg:x="36835360277" fg:w="3991878"/><text x="99.7631%" y="1007.50"></text></g><g><title>__tlb_batch_free_encoded_pages (3,991,878 samples, 0.01%)</title><rect x="99.5131%" y="981" width="0.0108%" height="15" fill="rgb(233,175,4)" fg:x="36835360277" fg:w="3991878"/><text x="99.7631%" y="991.50"></text></g><g><title>free_pages_and_swap_cache (3,991,878 samples, 0.01%)</title><rect x="99.5131%" y="965" width="0.0108%" height="15" fill="rgb(221,66,45)" fg:x="36835360277" fg:w="3991878"/><text x="99.7631%" y="975.50"></text></g><g><title>folios_put_refs (3,991,878 samples, 0.01%)</title><rect x="99.5131%" y="949" width="0.0108%" height="15" fill="rgb(221,178,18)" fg:x="36835360277" fg:w="3991878"/><text x="99.7631%" y="959.50"></text></g><g><title>free_unref_folios (3,991,878 samples, 0.01%)</title><rect x="99.5131%" y="933" width="0.0108%" height="15" fill="rgb(213,81,29)" fg:x="36835360277" fg:w="3991878"/><text x="99.7631%" y="943.50"></text></g><g><title>free_unref_page_commit (3,991,878 samples, 0.01%)</title><rect x="99.5131%" y="917" width="0.0108%" height="15" fill="rgb(220,89,49)" fg:x="36835360277" fg:w="3991878"/><text x="99.7631%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (7,962,635 samples, 0.02%)</title><rect x="99.5239%" y="1077" width="0.0215%" height="15" fill="rgb(227,60,33)" fg:x="36839352155" fg:w="7962635"/><text x="99.7739%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (16,705,955 samples, 0.05%)</title><rect x="99.5239%" y="1109" width="0.0451%" height="15" fill="rgb(205,113,12)" fg:x="36839352155" fg:w="16705955"/><text x="99.7739%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (16,705,955 samples, 0.05%)</title><rect x="99.5239%" y="1093" width="0.0451%" height="15" fill="rgb(211,32,1)" fg:x="36839352155" fg:w="16705955"/><text x="99.7739%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (8,743,320 samples, 0.02%)</title><rect x="99.5454%" y="1077" width="0.0236%" height="15" fill="rgb(246,2,12)" fg:x="36847314790" fg:w="8743320"/><text x="99.7954%" y="1087.50"></text></g><g><title>hashbrown::control::tag::Tag::full (4,391,534 samples, 0.01%)</title><rect x="99.5572%" y="1061" width="0.0119%" height="15" fill="rgb(243,37,27)" fg:x="36851666576" fg:w="4391534"/><text x="99.8072%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3,885,316 samples, 0.01%)</title><rect x="99.5805%" y="1029" width="0.0105%" height="15" fill="rgb(248,211,31)" fg:x="36860302330" fg:w="3885316"/><text x="99.8305%" y="1039.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3,885,316 samples, 0.01%)</title><rect x="99.5805%" y="1013" width="0.0105%" height="15" fill="rgb(242,146,47)" fg:x="36860302330" fg:w="3885316"/><text x="99.8305%" y="1023.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (27,652,019 samples, 0.07%)</title><rect x="99.5690%" y="1077" width="0.0747%" height="15" fill="rgb(206,70,20)" fg:x="36856058110" fg:w="27652019"/><text x="99.8190%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (27,652,019 samples, 0.07%)</title><rect x="99.5690%" y="1061" width="0.0747%" height="15" fill="rgb(215,10,51)" fg:x="36856058110" fg:w="27652019"/><text x="99.8190%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (27,652,019 samples, 0.07%)</title><rect x="99.5690%" y="1045" width="0.0747%" height="15" fill="rgb(243,178,53)" fg:x="36856058110" fg:w="27652019"/><text x="99.8190%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (19,522,483 samples, 0.05%)</title><rect x="99.5910%" y="1029" width="0.0527%" height="15" fill="rgb(233,221,20)" fg:x="36864187646" fg:w="19522483"/><text x="99.8410%" y="1039.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (15,448,433 samples, 0.04%)</title><rect x="99.6020%" y="1013" width="0.0417%" height="15" fill="rgb(218,95,35)" fg:x="36868261696" fg:w="15448433"/><text x="99.8520%" y="1023.50"></text></g><g><title>hashbrown::map::make_hash (32,016,101 samples, 0.09%)</title><rect x="99.5690%" y="1109" width="0.0865%" height="15" fill="rgb(229,13,5)" fg:x="36856058110" fg:w="32016101"/><text x="99.8190%" y="1119.50"></text></g><g><title>core::hash::BuildHasher::hash_one (32,016,101 samples, 0.09%)</title><rect x="99.5690%" y="1093" width="0.0865%" height="15" fill="rgb(252,164,30)" fg:x="36856058110" fg:w="32016101"/><text x="99.8190%" y="1103.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4,364,082 samples, 0.01%)</title><rect x="99.6437%" y="1077" width="0.0118%" height="15" fill="rgb(232,68,36)" fg:x="36883710129" fg:w="4364082"/><text x="99.8937%" y="1087.50"></text></g><g><title>&lt;mws5::words::Word as core::hash::Hash&gt;::hash (4,364,082 samples, 0.01%)</title><rect x="99.6437%" y="1061" width="0.0118%" height="15" fill="rgb(219,59,54)" fg:x="36883710129" fg:w="4364082"/><text x="99.8937%" y="1071.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (4,364,082 samples, 0.01%)</title><rect x="99.6437%" y="1045" width="0.0118%" height="15" fill="rgb(250,92,33)" fg:x="36883710129" fg:w="4364082"/><text x="99.8937%" y="1055.50"></text></g><g><title>core::hash::Hasher::write_u32 (4,364,082 samples, 0.01%)</title><rect x="99.6437%" y="1029" width="0.0118%" height="15" fill="rgb(229,162,54)" fg:x="36883710129" fg:w="4364082"/><text x="99.8937%" y="1039.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4,364,082 samples, 0.01%)</title><rect x="99.6437%" y="1013" width="0.0118%" height="15" fill="rgb(244,114,52)" fg:x="36883710129" fg:w="4364082"/><text x="99.8937%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4,364,082 samples, 0.01%)</title><rect x="99.6437%" y="997" width="0.0118%" height="15" fill="rgb(212,211,43)" fg:x="36883710129" fg:w="4364082"/><text x="99.8937%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4,364,082 samples, 0.01%)</title><rect x="99.6437%" y="981" width="0.0118%" height="15" fill="rgb(226,147,8)" fg:x="36883710129" fg:w="4364082"/><text x="99.8937%" y="991.50"></text></g><g><title>core::hash::sip::u8to64_le (4,364,082 samples, 0.01%)</title><rect x="99.6437%" y="965" width="0.0118%" height="15" fill="rgb(226,23,13)" fg:x="36883710129" fg:w="4364082"/><text x="99.8937%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (4,139,052 samples, 0.01%)</title><rect x="99.6555%" y="1093" width="0.0112%" height="15" fill="rgb(240,63,4)" fg:x="36888074211" fg:w="4139052"/><text x="99.9055%" y="1103.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (4,139,052 samples, 0.01%)</title><rect x="99.6555%" y="1077" width="0.0112%" height="15" fill="rgb(221,1,32)" fg:x="36888074211" fg:w="4139052"/><text x="99.9055%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4,139,052 samples, 0.01%)</title><rect x="99.6555%" y="1061" width="0.0112%" height="15" fill="rgb(242,117,10)" fg:x="36888074211" fg:w="4139052"/><text x="99.9055%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (57,079,680 samples, 0.15%)</title><rect x="99.5239%" y="1125" width="0.1542%" height="15" fill="rgb(249,172,44)" fg:x="36839352155" fg:w="57079680"/><text x="99.7739%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (8,357,624 samples, 0.02%)</title><rect x="99.6555%" y="1109" width="0.0226%" height="15" fill="rgb(244,46,45)" fg:x="36888074211" fg:w="8357624"/><text x="99.9055%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::record_item_insert_at (4,218,572 samples, 0.01%)</title><rect x="99.6667%" y="1093" width="0.0114%" height="15" fill="rgb(206,43,17)" fg:x="36892213263" fg:w="4218572"/><text x="99.9167%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl_hash (4,218,572 samples, 0.01%)</title><rect x="99.6667%" y="1077" width="0.0114%" height="15" fill="rgb(239,218,39)" fg:x="36892213263" fg:w="4218572"/><text x="99.9167%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl (4,218,572 samples, 0.01%)</title><rect x="99.6667%" y="1061" width="0.0114%" height="15" fill="rgb(208,169,54)" fg:x="36892213263" fg:w="4218572"/><text x="99.9167%" y="1071.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (4,218,572 samples, 0.01%)</title><rect x="99.6667%" y="1045" width="0.0114%" height="15" fill="rgb(247,25,42)" fg:x="36892213263" fg:w="4218572"/><text x="99.9167%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (4,367,605 samples, 0.01%)</title><rect x="99.6897%" y="1077" width="0.0118%" height="15" fill="rgb(226,23,31)" fg:x="36900712986" fg:w="4367605"/><text x="99.9397%" y="1087.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (4,367,605 samples, 0.01%)</title><rect x="99.6897%" y="1061" width="0.0118%" height="15" fill="rgb(247,16,28)" fg:x="36900712986" fg:w="4367605"/><text x="99.9397%" y="1071.50"></text></g><g><title>hashbrown::map::make_hash (4,367,605 samples, 0.01%)</title><rect x="99.6897%" y="1045" width="0.0118%" height="15" fill="rgb(231,147,38)" fg:x="36900712986" fg:w="4367605"/><text x="99.9397%" y="1055.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,367,605 samples, 0.01%)</title><rect x="99.6897%" y="1029" width="0.0118%" height="15" fill="rgb(253,81,48)" fg:x="36900712986" fg:w="4367605"/><text x="99.9397%" y="1039.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (4,367,605 samples, 0.01%)</title><rect x="99.6897%" y="1013" width="0.0118%" height="15" fill="rgb(249,222,43)" fg:x="36900712986" fg:w="4367605"/><text x="99.9397%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4,367,605 samples, 0.01%)</title><rect x="99.6897%" y="997" width="0.0118%" height="15" fill="rgb(221,3,27)" fg:x="36900712986" fg:w="4367605"/><text x="99.9397%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4,367,605 samples, 0.01%)</title><rect x="99.6897%" y="981" width="0.0118%" height="15" fill="rgb(228,180,5)" fg:x="36900712986" fg:w="4367605"/><text x="99.9397%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4,367,605 samples, 0.01%)</title><rect x="99.6897%" y="965" width="0.0118%" height="15" fill="rgb(227,131,42)" fg:x="36900712986" fg:w="4367605"/><text x="99.9397%" y="975.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,367,605 samples, 0.01%)</title><rect x="99.6897%" y="949" width="0.0118%" height="15" fill="rgb(212,3,39)" fg:x="36900712986" fg:w="4367605"/><text x="99.9397%" y="959.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (12,826,743 samples, 0.03%)</title><rect x="99.7015%" y="1029" width="0.0347%" height="15" fill="rgb(226,45,5)" fg:x="36905080591" fg:w="12826743"/><text x="99.9515%" y="1039.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (8,446,206 samples, 0.02%)</title><rect x="99.7133%" y="1013" width="0.0228%" height="15" fill="rgb(215,167,45)" fg:x="36909461128" fg:w="8446206"/><text x="99.9633%" y="1023.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (4,218,244 samples, 0.01%)</title><rect x="99.7247%" y="997" width="0.0114%" height="15" fill="rgb(250,218,53)" fg:x="36913689090" fg:w="4218244"/><text x="99.9747%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (25,803,147 samples, 0.07%)</title><rect x="99.6781%" y="1093" width="0.0697%" height="15" fill="rgb(207,140,0)" fg:x="36896431835" fg:w="25803147"/><text x="99.9281%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (17,154,391 samples, 0.05%)</title><rect x="99.7015%" y="1077" width="0.0463%" height="15" fill="rgb(238,133,51)" fg:x="36905080591" fg:w="17154391"/><text x="99.9515%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (17,154,391 samples, 0.05%)</title><rect x="99.7015%" y="1061" width="0.0463%" height="15" fill="rgb(218,203,53)" fg:x="36905080591" fg:w="17154391"/><text x="99.9515%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (17,154,391 samples, 0.05%)</title><rect x="99.7015%" y="1045" width="0.0463%" height="15" fill="rgb(226,184,25)" fg:x="36905080591" fg:w="17154391"/><text x="99.9515%" y="1055.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (4,327,648 samples, 0.01%)</title><rect x="99.7361%" y="1029" width="0.0117%" height="15" fill="rgb(231,121,21)" fg:x="36917907334" fg:w="4327648"/><text x="99.9861%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (29,928,039 samples, 0.08%)</title><rect x="99.6781%" y="1125" width="0.0809%" height="15" fill="rgb(251,14,34)" fg:x="36896431835" fg:w="29928039"/><text x="99.9281%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (29,928,039 samples, 0.08%)</title><rect x="99.6781%" y="1109" width="0.0809%" height="15" fill="rgb(249,193,11)" fg:x="36896431835" fg:w="29928039"/><text x="99.9281%" y="1119.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (4,124,892 samples, 0.01%)</title><rect x="99.7478%" y="1093" width="0.0111%" height="15" fill="rgb(220,172,37)" fg:x="36922234982" fg:w="4124892"/><text x="99.9978%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12,455,004 samples, 0.03%)</title><rect x="99.7590%" y="1077" width="0.0336%" height="15" fill="rgb(231,229,43)" fg:x="36926359874" fg:w="12455004"/><text x="100.0090%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (46,568,294 samples, 0.13%)</title><rect x="99.7590%" y="1109" width="0.1258%" height="15" fill="rgb(250,161,5)" fg:x="36926359874" fg:w="46568294"/><text x="100.0090%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (46,568,294 samples, 0.13%)</title><rect x="99.7590%" y="1093" width="0.1258%" height="15" fill="rgb(218,225,18)" fg:x="36926359874" fg:w="46568294"/><text x="100.0090%" y="1103.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (34,113,290 samples, 0.09%)</title><rect x="99.7926%" y="1077" width="0.0922%" height="15" fill="rgb(245,45,42)" fg:x="36938814878" fg:w="34113290"/><text x="100.0426%" y="1087.50"></text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (34,113,290 samples, 0.09%)</title><rect x="99.7926%" y="1061" width="0.0922%" height="15" fill="rgb(211,115,1)" fg:x="36938814878" fg:w="34113290"/><text x="100.0426%" y="1071.50"></text></g><g><title>mws5::words::Word::is_fit (34,113,290 samples, 0.09%)</title><rect x="99.7926%" y="1045" width="0.0922%" height="15" fill="rgb(248,133,52)" fg:x="36938814878" fg:w="34113290"/><text x="100.0426%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,271,970 samples, 0.01%)</title><rect x="99.8732%" y="1029" width="0.0115%" height="15" fill="rgb(238,100,21)" fg:x="36968656198" fg:w="4271970"/><text x="100.1232%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (4,271,970 samples, 0.01%)</title><rect x="99.8732%" y="1013" width="0.0115%" height="15" fill="rgb(247,144,11)" fg:x="36968656198" fg:w="4271970"/><text x="100.1232%" y="1023.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,271,970 samples, 0.01%)</title><rect x="99.8732%" y="997" width="0.0115%" height="15" fill="rgb(206,164,16)" fg:x="36968656198" fg:w="4271970"/><text x="100.1232%" y="1007.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (4,271,970 samples, 0.01%)</title><rect x="99.8732%" y="981" width="0.0115%" height="15" fill="rgb(222,34,3)" fg:x="36968656198" fg:w="4271970"/><text x="100.1232%" y="991.50"></text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (50,837,980 samples, 0.14%)</title><rect x="99.7590%" y="1125" width="0.1373%" height="15" fill="rgb(248,82,4)" fg:x="36926359874" fg:w="50837980"/><text x="100.0090%" y="1135.50"></text></g><g><title>mws5::search::best_pos (4,269,686 samples, 0.01%)</title><rect x="99.8848%" y="1109" width="0.0115%" height="15" fill="rgb(228,81,46)" fg:x="36972928168" fg:w="4269686"/><text x="100.1348%" y="1119.50"></text></g><g><title>core::iter::adapters::inspect::inspect_fold::_{{closure}} (12,513,487 samples, 0.03%)</title><rect x="99.9314%" y="901" width="0.0338%" height="15" fill="rgb(227,67,47)" fg:x="36990177878" fg:w="12513487"/><text x="100.1814%" y="911.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (12,513,487 samples, 0.03%)</title><rect x="99.9314%" y="885" width="0.0338%" height="15" fill="rgb(215,93,53)" fg:x="36990177878" fg:w="12513487"/><text x="100.1814%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (12,513,487 samples, 0.03%)</title><rect x="99.9314%" y="869" width="0.0338%" height="15" fill="rgb(248,194,39)" fg:x="36990177878" fg:w="12513487"/><text x="100.1814%" y="879.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (12,513,487 samples, 0.03%)</title><rect x="99.9314%" y="853" width="0.0338%" height="15" fill="rgb(215,5,19)" fg:x="36990177878" fg:w="12513487"/><text x="100.1814%" y="863.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (29,678,353 samples, 0.08%)</title><rect x="99.9080%" y="1077" width="0.0802%" height="15" fill="rgb(226,215,51)" fg:x="36981543669" fg:w="29678353"/><text x="100.1580%" y="1087.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (29,678,353 samples, 0.08%)</title><rect x="99.9080%" y="1061" width="0.0802%" height="15" fill="rgb(225,56,26)" fg:x="36981543669" fg:w="29678353"/><text x="100.1580%" y="1071.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (29,678,353 samples, 0.08%)</title><rect x="99.9080%" y="1045" width="0.0802%" height="15" fill="rgb(222,75,29)" fg:x="36981543669" fg:w="29678353"/><text x="100.1580%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (29,678,353 samples, 0.08%)</title><rect x="99.9080%" y="1029" width="0.0802%" height="15" fill="rgb(236,139,6)" fg:x="36981543669" fg:w="29678353"/><text x="100.1580%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29,678,353 samples, 0.08%)</title><rect x="99.9080%" y="1013" width="0.0802%" height="15" fill="rgb(223,137,36)" fg:x="36981543669" fg:w="29678353"/><text x="100.1580%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::inspect::Inspect&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29,678,353 samples, 0.08%)</title><rect x="99.9080%" y="997" width="0.0802%" height="15" fill="rgb(226,99,2)" fg:x="36981543669" fg:w="29678353"/><text x="100.1580%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29,678,353 samples, 0.08%)</title><rect x="99.9080%" y="981" width="0.0802%" height="15" fill="rgb(206,133,23)" fg:x="36981543669" fg:w="29678353"/><text x="100.1580%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29,678,353 samples, 0.08%)</title><rect x="99.9080%" y="965" width="0.0802%" height="15" fill="rgb(243,173,15)" fg:x="36981543669" fg:w="29678353"/><text x="100.1580%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (29,678,353 samples, 0.08%)</title><rect x="99.9080%" y="949" width="0.0802%" height="15" fill="rgb(228,69,28)" fg:x="36981543669" fg:w="29678353"/><text x="100.1580%" y="959.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (29,678,353 samples, 0.08%)</title><rect x="99.9080%" y="933" width="0.0802%" height="15" fill="rgb(212,51,22)" fg:x="36981543669" fg:w="29678353"/><text x="100.1580%" y="943.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::_{{closure}} (29,678,353 samples, 0.08%)</title><rect x="99.9080%" y="917" width="0.0802%" height="15" fill="rgb(227,113,0)" fg:x="36981543669" fg:w="29678353"/><text x="100.1580%" y="927.50"></text></g><g><title>mws5::squares::Square::has_double::_{{closure}} (8,530,657 samples, 0.02%)</title><rect x="99.9652%" y="901" width="0.0230%" height="15" fill="rgb(252,84,27)" fg:x="37002691365" fg:w="8530657"/><text x="100.2152%" y="911.50"></text></g><g><title>mws5::words::Word::is_full (8,530,657 samples, 0.02%)</title><rect x="99.9652%" y="885" width="0.0230%" height="15" fill="rgb(223,145,39)" fg:x="37002691365" fg:w="8530657"/><text x="100.2152%" y="895.50"></text></g><g><title>mws5 (37,015,581,770 samples, 100.00%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(239,219,30)" fg:x="0" fg:w="37015581770"/><text x="0.2500%" y="1151.50">mws5</text></g><g><title>mws5::squares::Square::has_double (38,383,916 samples, 0.10%)</title><rect x="99.8963%" y="1125" width="0.1037%" height="15" fill="rgb(224,196,39)" fg:x="36977197854" fg:w="38383916"/><text x="100.1463%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (34,038,101 samples, 0.09%)</title><rect x="99.9080%" y="1109" width="0.0920%" height="15" fill="rgb(205,35,43)" fg:x="36981543669" fg:w="34038101"/><text x="100.1580%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (34,038,101 samples, 0.09%)</title><rect x="99.9080%" y="1093" width="0.0920%" height="15" fill="rgb(228,201,21)" fg:x="36981543669" fg:w="34038101"/><text x="100.1580%" y="1103.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::default::Default&gt;::default (4,359,748 samples, 0.01%)</title><rect x="99.9882%" y="1077" width="0.0118%" height="15" fill="rgb(237,118,16)" fg:x="37011222022" fg:w="4359748"/><text x="100.2382%" y="1087.50"></text></g><g><title>std::hash::random::RandomState::new (4,359,748 samples, 0.01%)</title><rect x="99.9882%" y="1061" width="0.0118%" height="15" fill="rgb(241,17,19)" fg:x="37011222022" fg:w="4359748"/><text x="100.2382%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,359,748 samples, 0.01%)</title><rect x="99.9882%" y="1045" width="0.0118%" height="15" fill="rgb(214,10,25)" fg:x="37011222022" fg:w="4359748"/><text x="100.2382%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,359,748 samples, 0.01%)</title><rect x="99.9882%" y="1029" width="0.0118%" height="15" fill="rgb(238,37,29)" fg:x="37011222022" fg:w="4359748"/><text x="100.2382%" y="1039.50"></text></g><g><title>std::hash::random::RandomState::new::_{{closure}} (4,359,748 samples, 0.01%)</title><rect x="99.9882%" y="1013" width="0.0118%" height="15" fill="rgb(253,83,25)" fg:x="37011222022" fg:w="4359748"/><text x="100.2382%" y="1023.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (4,359,748 samples, 0.01%)</title><rect x="99.9882%" y="997" width="0.0118%" height="15" fill="rgb(234,192,12)" fg:x="37011222022" fg:w="4359748"/><text x="100.2382%" y="1007.50"></text></g><g><title>all (37,015,582,047 samples, 100%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(241,216,45)" fg:x="0" fg:w="37015582047"/><text x="0.2500%" y="1167.50"></text></g></svg></svg>