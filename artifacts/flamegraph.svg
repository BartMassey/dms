<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="870" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="853.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="853.00"> </text><svg id="frames" x="10" width="1180" total_samples="75668593854"><g><title>&lt;caches::lru::raw::KeyWrapper&lt;K&gt; as core::hash::Hash&gt;::hash (13,050,012 samples, 0.02%)</title><rect x="0.0174%" y="789" width="0.0172%" height="15" fill="rgb(227,0,7)" fg:x="13159753" fg:w="13050012"/><text x="0.2674%" y="799.50"></text></g><g><title>&lt;mws5::words::Word as core::hash::Hash&gt;::hash (13,050,012 samples, 0.02%)</title><rect x="0.0174%" y="773" width="0.0172%" height="15" fill="rgb(217,0,24)" fg:x="13159753" fg:w="13050012"/><text x="0.2674%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (13,050,012 samples, 0.02%)</title><rect x="0.0174%" y="757" width="0.0172%" height="15" fill="rgb(221,193,54)" fg:x="13159753" fg:w="13050012"/><text x="0.2674%" y="767.50"></text></g><g><title>core::hash::Hasher::write_u32 (13,050,012 samples, 0.02%)</title><rect x="0.0174%" y="741" width="0.0172%" height="15" fill="rgb(248,212,6)" fg:x="13159753" fg:w="13050012"/><text x="0.2674%" y="751.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (13,050,012 samples, 0.02%)</title><rect x="0.0174%" y="725" width="0.0172%" height="15" fill="rgb(208,68,35)" fg:x="13159753" fg:w="13050012"/><text x="0.2674%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13,050,012 samples, 0.02%)</title><rect x="0.0174%" y="709" width="0.0172%" height="15" fill="rgb(232,128,0)" fg:x="13159753" fg:w="13050012"/><text x="0.2674%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13,050,012 samples, 0.02%)</title><rect x="0.0174%" y="693" width="0.0172%" height="15" fill="rgb(207,160,47)" fg:x="13159753" fg:w="13050012"/><text x="0.2674%" y="703.50"></text></g><g><title>core::hash::sip::u8to64_le (8,631,765 samples, 0.01%)</title><rect x="0.0232%" y="677" width="0.0114%" height="15" fill="rgb(228,23,34)" fg:x="17578000" fg:w="8631765"/><text x="0.2732%" y="687.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (8,863,167 samples, 0.01%)</title><rect x="0.0402%" y="757" width="0.0117%" height="15" fill="rgb(218,30,26)" fg:x="30451648" fg:w="8863167"/><text x="0.2902%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8,863,167 samples, 0.01%)</title><rect x="0.0402%" y="741" width="0.0117%" height="15" fill="rgb(220,122,19)" fg:x="30451648" fg:w="8863167"/><text x="0.2902%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8,863,167 samples, 0.01%)</title><rect x="0.0402%" y="725" width="0.0117%" height="15" fill="rgb(250,228,42)" fg:x="30451648" fg:w="8863167"/><text x="0.2902%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13,157,459 samples, 0.02%)</title><rect x="0.0402%" y="773" width="0.0174%" height="15" fill="rgb(240,193,28)" fg:x="30451648" fg:w="13157459"/><text x="0.2902%" y="783.50"></text></g><g><title>[[heap]] (130,335,637 samples, 0.17%)</title><rect x="0.0346%" y="789" width="0.1722%" height="15" fill="rgb(216,20,37)" fg:x="26209765" fg:w="130335637"/><text x="0.2846%" y="799.50"></text></g><g><title>mws5::words::Word::is_fit (108,616,628 samples, 0.14%)</title><rect x="0.0633%" y="773" width="0.1435%" height="15" fill="rgb(206,188,39)" fg:x="47928774" fg:w="108616628"/><text x="0.3133%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (43,603,332 samples, 0.06%)</title><rect x="0.1493%" y="757" width="0.0576%" height="15" fill="rgb(217,207,13)" fg:x="112942070" fg:w="43603332"/><text x="0.3993%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (43,603,332 samples, 0.06%)</title><rect x="0.1493%" y="741" width="0.0576%" height="15" fill="rgb(231,73,38)" fg:x="112942070" fg:w="43603332"/><text x="0.3993%" y="751.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (43,603,332 samples, 0.06%)</title><rect x="0.1493%" y="725" width="0.0576%" height="15" fill="rgb(225,20,46)" fg:x="112942070" fg:w="43603332"/><text x="0.3993%" y="735.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (43,603,332 samples, 0.06%)</title><rect x="0.1493%" y="709" width="0.0576%" height="15" fill="rgb(210,31,41)" fg:x="112942070" fg:w="43603332"/><text x="0.3993%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (8,840,910 samples, 0.01%)</title><rect x="0.2127%" y="677" width="0.0117%" height="15" fill="rgb(221,200,47)" fg:x="160952224" fg:w="8840910"/><text x="0.4627%" y="687.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (17,492,961 samples, 0.02%)</title><rect x="0.2127%" y="757" width="0.0231%" height="15" fill="rgb(226,26,5)" fg:x="160952224" fg:w="17492961"/><text x="0.4627%" y="767.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (17,492,961 samples, 0.02%)</title><rect x="0.2127%" y="741" width="0.0231%" height="15" fill="rgb(249,33,26)" fg:x="160952224" fg:w="17492961"/><text x="0.4627%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (17,492,961 samples, 0.02%)</title><rect x="0.2127%" y="725" width="0.0231%" height="15" fill="rgb(235,183,28)" fg:x="160952224" fg:w="17492961"/><text x="0.4627%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (17,492,961 samples, 0.02%)</title><rect x="0.2127%" y="709" width="0.0231%" height="15" fill="rgb(221,5,38)" fg:x="160952224" fg:w="17492961"/><text x="0.4627%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (17,492,961 samples, 0.02%)</title><rect x="0.2127%" y="693" width="0.0231%" height="15" fill="rgb(247,18,42)" fg:x="160952224" fg:w="17492961"/><text x="0.4627%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (8,652,051 samples, 0.01%)</title><rect x="0.2244%" y="677" width="0.0114%" height="15" fill="rgb(241,131,45)" fg:x="169793134" fg:w="8652051"/><text x="0.4744%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8,652,051 samples, 0.01%)</title><rect x="0.2244%" y="661" width="0.0114%" height="15" fill="rgb(249,31,29)" fg:x="169793134" fg:w="8652051"/><text x="0.4744%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (8,652,051 samples, 0.01%)</title><rect x="0.2244%" y="645" width="0.0114%" height="15" fill="rgb(225,111,53)" fg:x="169793134" fg:w="8652051"/><text x="0.4744%" y="655.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (17,563,552 samples, 0.02%)</title><rect x="0.2474%" y="741" width="0.0232%" height="15" fill="rgb(238,160,17)" fg:x="187220211" fg:w="17563552"/><text x="0.4974%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (17,563,552 samples, 0.02%)</title><rect x="0.2474%" y="725" width="0.0232%" height="15" fill="rgb(214,148,48)" fg:x="187220211" fg:w="17563552"/><text x="0.4974%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (17,563,552 samples, 0.02%)</title><rect x="0.2474%" y="709" width="0.0232%" height="15" fill="rgb(232,36,49)" fg:x="187220211" fg:w="17563552"/><text x="0.4974%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (17,563,552 samples, 0.02%)</title><rect x="0.2474%" y="693" width="0.0232%" height="15" fill="rgb(209,103,24)" fg:x="187220211" fg:w="17563552"/><text x="0.4974%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (17,563,552 samples, 0.02%)</title><rect x="0.2474%" y="677" width="0.0232%" height="15" fill="rgb(229,88,8)" fg:x="187220211" fg:w="17563552"/><text x="0.4974%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17,563,552 samples, 0.02%)</title><rect x="0.2474%" y="661" width="0.0232%" height="15" fill="rgb(213,181,19)" fg:x="187220211" fg:w="17563552"/><text x="0.4974%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (17,563,552 samples, 0.02%)</title><rect x="0.2474%" y="645" width="0.0232%" height="15" fill="rgb(254,191,54)" fg:x="187220211" fg:w="17563552"/><text x="0.4974%" y="655.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (35,006,975 samples, 0.05%)</title><rect x="0.2358%" y="757" width="0.0463%" height="15" fill="rgb(241,83,37)" fg:x="178445185" fg:w="35006975"/><text x="0.4858%" y="767.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::peek_ (8,668,397 samples, 0.01%)</title><rect x="0.2706%" y="741" width="0.0115%" height="15" fill="rgb(233,36,39)" fg:x="204783763" fg:w="8668397"/><text x="0.5206%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8,668,397 samples, 0.01%)</title><rect x="0.2706%" y="725" width="0.0115%" height="15" fill="rgb(226,3,54)" fg:x="204783763" fg:w="8668397"/><text x="0.5206%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8,668,397 samples, 0.01%)</title><rect x="0.2706%" y="709" width="0.0115%" height="15" fill="rgb(245,192,40)" fg:x="204783763" fg:w="8668397"/><text x="0.5206%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8,668,397 samples, 0.01%)</title><rect x="0.2706%" y="693" width="0.0115%" height="15" fill="rgb(238,167,29)" fg:x="204783763" fg:w="8668397"/><text x="0.5206%" y="703.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (61,264,260 samples, 0.08%)</title><rect x="0.2069%" y="773" width="0.0810%" height="15" fill="rgb(232,182,51)" fg:x="156545402" fg:w="61264260"/><text x="0.4569%" y="783.50"></text></g><g><title>&lt;caches::lru::raw::KeyWrapper&lt;K&gt; as core::hash::Hash&gt;::hash (8,800,237 samples, 0.01%)</title><rect x="0.2878%" y="773" width="0.0116%" height="15" fill="rgb(231,60,39)" fg:x="217809662" fg:w="8800237"/><text x="0.5378%" y="783.50"></text></g><g><title>&lt;mws5::words::Word as core::hash::Hash&gt;::hash (8,800,237 samples, 0.01%)</title><rect x="0.2878%" y="757" width="0.0116%" height="15" fill="rgb(208,69,12)" fg:x="217809662" fg:w="8800237"/><text x="0.5378%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (8,800,237 samples, 0.01%)</title><rect x="0.2878%" y="741" width="0.0116%" height="15" fill="rgb(235,93,37)" fg:x="217809662" fg:w="8800237"/><text x="0.5378%" y="751.50"></text></g><g><title>core::hash::Hasher::write_u32 (8,800,237 samples, 0.01%)</title><rect x="0.2878%" y="725" width="0.0116%" height="15" fill="rgb(213,116,39)" fg:x="217809662" fg:w="8800237"/><text x="0.5378%" y="735.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (8,800,237 samples, 0.01%)</title><rect x="0.2878%" y="709" width="0.0116%" height="15" fill="rgb(222,207,29)" fg:x="217809662" fg:w="8800237"/><text x="0.5378%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8,800,237 samples, 0.01%)</title><rect x="0.2878%" y="693" width="0.0116%" height="15" fill="rgb(206,96,30)" fg:x="217809662" fg:w="8800237"/><text x="0.5378%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8,800,237 samples, 0.01%)</title><rect x="0.2878%" y="677" width="0.0116%" height="15" fill="rgb(218,138,4)" fg:x="217809662" fg:w="8800237"/><text x="0.5378%" y="687.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::compare_helper (13,187,601 samples, 0.02%)</title><rect x="0.3224%" y="773" width="0.0174%" height="15" fill="rgb(250,191,14)" fg:x="243988840" fg:w="13187601"/><text x="0.5724%" y="783.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::hash_key (8,797,434 samples, 0.01%)</title><rect x="0.3282%" y="757" width="0.0116%" height="15" fill="rgb(239,60,40)" fg:x="248379007" fg:w="8797434"/><text x="0.5782%" y="767.50"></text></g><g><title>&lt;caches::lfu::DefaultKeyHasher&lt;K&gt; as caches::lfu::KeyHasher&lt;K&gt;&gt;::hash_key (8,797,434 samples, 0.01%)</title><rect x="0.3282%" y="741" width="0.0116%" height="15" fill="rgb(206,27,48)" fg:x="248379007" fg:w="8797434"/><text x="0.5782%" y="751.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (8,797,434 samples, 0.01%)</title><rect x="0.3282%" y="725" width="0.0116%" height="15" fill="rgb(225,35,8)" fg:x="248379007" fg:w="8797434"/><text x="0.5782%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8,797,434 samples, 0.01%)</title><rect x="0.3282%" y="709" width="0.0116%" height="15" fill="rgb(250,213,24)" fg:x="248379007" fg:w="8797434"/><text x="0.5782%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8,797,434 samples, 0.01%)</title><rect x="0.3282%" y="693" width="0.0116%" height="15" fill="rgb(247,123,22)" fg:x="248379007" fg:w="8797434"/><text x="0.5782%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8,797,434 samples, 0.01%)</title><rect x="0.3282%" y="677" width="0.0116%" height="15" fill="rgb(231,138,38)" fg:x="248379007" fg:w="8797434"/><text x="0.5782%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8,797,434 samples, 0.01%)</title><rect x="0.3282%" y="661" width="0.0116%" height="15" fill="rgb(231,145,46)" fg:x="248379007" fg:w="8797434"/><text x="0.5782%" y="671.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (21,771,432 samples, 0.03%)</title><rect x="0.3632%" y="725" width="0.0288%" height="15" fill="rgb(251,118,11)" fg:x="274857386" fg:w="21771432"/><text x="0.6132%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (21,771,432 samples, 0.03%)</title><rect x="0.3632%" y="709" width="0.0288%" height="15" fill="rgb(217,147,25)" fg:x="274857386" fg:w="21771432"/><text x="0.6132%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (21,771,432 samples, 0.03%)</title><rect x="0.3632%" y="693" width="0.0288%" height="15" fill="rgb(247,81,37)" fg:x="274857386" fg:w="21771432"/><text x="0.6132%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13,192,242 samples, 0.02%)</title><rect x="0.3746%" y="677" width="0.0174%" height="15" fill="rgb(209,12,38)" fg:x="283436576" fg:w="13192242"/><text x="0.6246%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8,822,531 samples, 0.01%)</title><rect x="0.3804%" y="661" width="0.0117%" height="15" fill="rgb(227,1,9)" fg:x="287806287" fg:w="8822531"/><text x="0.6304%" y="671.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::increment (43,637,279 samples, 0.06%)</title><rect x="0.3399%" y="773" width="0.0577%" height="15" fill="rgb(248,47,43)" fg:x="257176441" fg:w="43637279"/><text x="0.5899%" y="783.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::hash_key (25,956,334 samples, 0.03%)</title><rect x="0.3632%" y="757" width="0.0343%" height="15" fill="rgb(221,10,30)" fg:x="274857386" fg:w="25956334"/><text x="0.6132%" y="767.50"></text></g><g><title>&lt;caches::lfu::DefaultKeyHasher&lt;K&gt; as caches::lfu::KeyHasher&lt;K&gt;&gt;::hash_key (25,956,334 samples, 0.03%)</title><rect x="0.3632%" y="741" width="0.0343%" height="15" fill="rgb(210,229,1)" fg:x="274857386" fg:w="25956334"/><text x="0.6132%" y="751.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::set (13,197,161 samples, 0.02%)</title><rect x="0.4087%" y="741" width="0.0174%" height="15" fill="rgb(222,148,37)" fg:x="309236963" fg:w="13197161"/><text x="0.6587%" y="751.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains_or_add (26,469,306 samples, 0.03%)</title><rect x="0.4028%" y="773" width="0.0350%" height="15" fill="rgb(234,67,33)" fg:x="304797185" fg:w="26469306"/><text x="0.6528%" y="783.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::add (26,469,306 samples, 0.03%)</title><rect x="0.4028%" y="757" width="0.0350%" height="15" fill="rgb(247,98,35)" fg:x="304797185" fg:w="26469306"/><text x="0.6528%" y="767.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8,832,367 samples, 0.01%)</title><rect x="0.4261%" y="741" width="0.0117%" height="15" fill="rgb(247,138,52)" fg:x="322434124" fg:w="8832367"/><text x="0.6761%" y="751.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8,832,367 samples, 0.01%)</title><rect x="0.4261%" y="725" width="0.0117%" height="15" fill="rgb(213,79,30)" fg:x="322434124" fg:w="8832367"/><text x="0.6761%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::lt (8,832,367 samples, 0.01%)</title><rect x="0.4261%" y="709" width="0.0117%" height="15" fill="rgb(246,177,23)" fg:x="322434124" fg:w="8832367"/><text x="0.6761%" y="719.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset (13,088,236 samples, 0.02%)</title><rect x="0.4378%" y="773" width="0.0173%" height="15" fill="rgb(230,62,27)" fg:x="331266491" fg:w="13088236"/><text x="0.6878%" y="783.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (13,088,236 samples, 0.02%)</title><rect x="0.4378%" y="757" width="0.0173%" height="15" fill="rgb(216,154,8)" fg:x="331266491" fg:w="13088236"/><text x="0.6878%" y="767.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset::_{{closure}} (13,088,236 samples, 0.02%)</title><rect x="0.4378%" y="741" width="0.0173%" height="15" fill="rgb(244,35,45)" fg:x="331266491" fg:w="13088236"/><text x="0.6878%" y="751.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset (13,088,236 samples, 0.02%)</title><rect x="0.4378%" y="725" width="0.0173%" height="15" fill="rgb(251,115,12)" fg:x="331266491" fg:w="13088236"/><text x="0.6878%" y="735.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (8,662,849 samples, 0.01%)</title><rect x="0.4436%" y="709" width="0.0114%" height="15" fill="rgb(240,54,50)" fg:x="335691878" fg:w="8662849"/><text x="0.6936%" y="719.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::replace_or_create_node (13,171,371 samples, 0.02%)</title><rect x="0.4609%" y="757" width="0.0174%" height="15" fill="rgb(233,84,52)" fg:x="348756286" fg:w="13171371"/><text x="0.7109%" y="767.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::capturing_put (30,292,255 samples, 0.04%)</title><rect x="0.4551%" y="773" width="0.0400%" height="15" fill="rgb(207,117,47)" fg:x="344354727" fg:w="30292255"/><text x="0.7051%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (12,719,325 samples, 0.02%)</title><rect x="0.4783%" y="757" width="0.0168%" height="15" fill="rgb(249,43,39)" fg:x="361927657" fg:w="12719325"/><text x="0.7283%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (12,719,325 samples, 0.02%)</title><rect x="0.4783%" y="741" width="0.0168%" height="15" fill="rgb(209,38,44)" fg:x="361927657" fg:w="12719325"/><text x="0.7283%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (12,719,325 samples, 0.02%)</title><rect x="0.4783%" y="725" width="0.0168%" height="15" fill="rgb(236,212,23)" fg:x="361927657" fg:w="12719325"/><text x="0.7283%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (13,151,500 samples, 0.02%)</title><rect x="0.5009%" y="757" width="0.0174%" height="15" fill="rgb(242,79,21)" fg:x="379023652" fg:w="13151500"/><text x="0.7509%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (13,151,500 samples, 0.02%)</title><rect x="0.5009%" y="741" width="0.0174%" height="15" fill="rgb(211,96,35)" fg:x="379023652" fg:w="13151500"/><text x="0.7509%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (13,151,500 samples, 0.02%)</title><rect x="0.5009%" y="725" width="0.0174%" height="15" fill="rgb(253,215,40)" fg:x="379023652" fg:w="13151500"/><text x="0.7509%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (21,700,923 samples, 0.03%)</title><rect x="0.4951%" y="773" width="0.0287%" height="15" fill="rgb(211,81,21)" fg:x="374646982" fg:w="21700923"/><text x="0.7451%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (159,390,574 samples, 0.21%)</title><rect x="0.5354%" y="757" width="0.2106%" height="15" fill="rgb(208,190,38)" fg:x="405165182" fg:w="159390574"/><text x="0.7854%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (159,390,574 samples, 0.21%)</title><rect x="0.5354%" y="741" width="0.2106%" height="15" fill="rgb(235,213,38)" fg:x="405165182" fg:w="159390574"/><text x="0.7854%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (159,390,574 samples, 0.21%)</title><rect x="0.5354%" y="725" width="0.2106%" height="15" fill="rgb(237,122,38)" fg:x="405165182" fg:w="159390574"/><text x="0.7854%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (159,390,574 samples, 0.21%)</title><rect x="0.5354%" y="709" width="0.2106%" height="15" fill="rgb(244,218,35)" fg:x="405165182" fg:w="159390574"/><text x="0.7854%" y="719.50"></text></g><g><title>core::iter::adapters::copied::copy_try_fold::_{{closure}} (40,656,450 samples, 0.05%)</title><rect x="0.6924%" y="693" width="0.0537%" height="15" fill="rgb(240,68,47)" fg:x="523899306" fg:w="40656450"/><text x="0.9424%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (40,656,450 samples, 0.05%)</title><rect x="0.6924%" y="677" width="0.0537%" height="15" fill="rgb(210,16,53)" fg:x="523899306" fg:w="40656450"/><text x="0.9424%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (40,656,450 samples, 0.05%)</title><rect x="0.6924%" y="661" width="0.0537%" height="15" fill="rgb(235,124,12)" fg:x="523899306" fg:w="40656450"/><text x="0.9424%" y="671.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (40,656,450 samples, 0.05%)</title><rect x="0.6924%" y="645" width="0.0537%" height="15" fill="rgb(224,169,11)" fg:x="523899306" fg:w="40656450"/><text x="0.9424%" y="655.50"></text></g><g><title>mws5::dict::Dict::is_fit (168,229,514 samples, 0.22%)</title><rect x="0.5296%" y="773" width="0.2223%" height="15" fill="rgb(250,166,2)" fg:x="400733229" fg:w="168229514"/><text x="0.7796%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::_{{closure}} (938,363,540 samples, 1.24%)</title><rect x="1.1306%" y="629" width="1.2401%" height="15" fill="rgb(242,216,29)" fg:x="855544884" fg:w="938363540"/><text x="1.3806%" y="639.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (789,101,448 samples, 1.04%)</title><rect x="1.3279%" y="613" width="1.0428%" height="15" fill="rgb(230,116,27)" fg:x="1004806976" fg:w="789101448"/><text x="1.5779%" y="623.50"></text></g><g><title>core::iter::adapters::copied::copy_fold::_{{closure}} (1,251,235,405 samples, 1.65%)</title><rect x="1.1306%" y="661" width="1.6536%" height="15" fill="rgb(228,99,48)" fg:x="855544884" fg:w="1251235405"/><text x="1.3806%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,251,235,405 samples, 1.65%)</title><rect x="1.1306%" y="645" width="1.6536%" height="15" fill="rgb(253,11,6)" fg:x="855544884" fg:w="1251235405"/><text x="1.3806%" y="655.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (312,871,865 samples, 0.41%)</title><rect x="2.3707%" y="629" width="0.4135%" height="15" fill="rgb(247,143,39)" fg:x="1793908424" fg:w="312871865"/><text x="2.6207%" y="639.50"></text></g><g><title>mws5::dict::Dict::match_count (1,878,115,464 samples, 2.48%)</title><rect x="0.7519%" y="773" width="2.4820%" height="15" fill="rgb(236,97,10)" fg:x="568962743" fg:w="1878115464"/><text x="1.0019%" y="783.50">mw..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1,865,424,958 samples, 2.47%)</title><rect x="0.7687%" y="757" width="2.4653%" height="15" fill="rgb(233,208,19)" fg:x="581653249" fg:w="1865424958"/><text x="1.0187%" y="767.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,865,424,958 samples, 2.47%)</title><rect x="0.7687%" y="741" width="2.4653%" height="15" fill="rgb(216,164,2)" fg:x="581653249" fg:w="1865424958"/><text x="1.0187%" y="751.50">co..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,865,424,958 samples, 2.47%)</title><rect x="0.7687%" y="725" width="2.4653%" height="15" fill="rgb(220,129,5)" fg:x="581653249" fg:w="1865424958"/><text x="1.0187%" y="735.50">&lt;u..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,865,424,958 samples, 2.47%)</title><rect x="0.7687%" y="709" width="2.4653%" height="15" fill="rgb(242,17,10)" fg:x="581653249" fg:w="1865424958"/><text x="1.0187%" y="719.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,865,424,958 samples, 2.47%)</title><rect x="0.7687%" y="693" width="2.4653%" height="15" fill="rgb(242,107,0)" fg:x="581653249" fg:w="1865424958"/><text x="1.0187%" y="703.50">&lt;c..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,865,424,958 samples, 2.47%)</title><rect x="0.7687%" y="677" width="2.4653%" height="15" fill="rgb(251,28,31)" fg:x="581653249" fg:w="1865424958"/><text x="1.0187%" y="687.50">&lt;c..</text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (340,297,918 samples, 0.45%)</title><rect x="2.7842%" y="661" width="0.4497%" height="15" fill="rgb(233,223,10)" fg:x="2106780289" fg:w="340297918"/><text x="3.0342%" y="671.50"></text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (30,663,993 samples, 0.04%)</title><rect x="3.2339%" y="773" width="0.0405%" height="15" fill="rgb(215,21,27)" fg:x="2447078207" fg:w="30663993"/><text x="3.4839%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (30,663,993 samples, 0.04%)</title><rect x="3.2339%" y="757" width="0.0405%" height="15" fill="rgb(232,23,21)" fg:x="2447078207" fg:w="30663993"/><text x="3.4839%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (30,663,993 samples, 0.04%)</title><rect x="3.2339%" y="741" width="0.0405%" height="15" fill="rgb(244,5,23)" fg:x="2447078207" fg:w="30663993"/><text x="3.4839%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13,114,818 samples, 0.02%)</title><rect x="3.2571%" y="725" width="0.0173%" height="15" fill="rgb(226,81,46)" fg:x="2464627382" fg:w="13114818"/><text x="3.5071%" y="735.50"></text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (13,114,818 samples, 0.02%)</title><rect x="3.2571%" y="709" width="0.0173%" height="15" fill="rgb(247,70,30)" fg:x="2464627382" fg:w="13114818"/><text x="3.5071%" y="719.50"></text></g><g><title>[[stack]] (7,180,176,867 samples, 9.49%)</title><rect x="0.2069%" y="789" width="9.4890%" height="15" fill="rgb(212,68,19)" fg:x="156545402" fg:w="7180176867"/><text x="0.4569%" y="799.50">[[stack]]</text></g><g><title>mws5::words::Word::is_fit (4,858,980,069 samples, 6.42%)</title><rect x="3.2745%" y="773" width="6.4214%" height="15" fill="rgb(240,187,13)" fg:x="2477742200" fg:w="4858980069"/><text x="3.5245%" y="783.50">mws5::wo..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,648,416,920 samples, 2.18%)</title><rect x="7.5174%" y="757" width="2.1785%" height="15" fill="rgb(223,113,26)" fg:x="5688305349" fg:w="1648416920"/><text x="7.7674%" y="767.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1,648,416,920 samples, 2.18%)</title><rect x="7.5174%" y="741" width="2.1785%" height="15" fill="rgb(206,192,2)" fg:x="5688305349" fg:w="1648416920"/><text x="7.7674%" y="751.50">&lt;..</text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,648,416,920 samples, 2.18%)</title><rect x="7.5174%" y="725" width="2.1785%" height="15" fill="rgb(241,108,4)" fg:x="5688305349" fg:w="1648416920"/><text x="7.7674%" y="735.50">&lt;..</text></g><g><title>mws5::words::Word::bits::_{{closure}} (1,648,416,920 samples, 2.18%)</title><rect x="7.5174%" y="709" width="2.1785%" height="15" fill="rgb(247,173,49)" fg:x="5688305349" fg:w="1648416920"/><text x="7.7674%" y="719.50">m..</text></g><g><title>[anon] (74,226,273 samples, 0.10%)</title><rect x="9.6988%" y="789" width="0.0981%" height="15" fill="rgb(224,114,35)" fg:x="7338972037" fg:w="74226273"/><text x="9.9488%" y="799.50"></text></g><g><title>mws5::words::Word::is_fit (65,593,085 samples, 0.09%)</title><rect x="9.7102%" y="773" width="0.0867%" height="15" fill="rgb(245,159,27)" fg:x="7347605225" fg:w="65593085"/><text x="9.9602%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (21,900,852 samples, 0.03%)</title><rect x="9.7680%" y="757" width="0.0289%" height="15" fill="rgb(245,172,44)" fg:x="7391297458" fg:w="21900852"/><text x="10.0180%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (21,900,852 samples, 0.03%)</title><rect x="9.7680%" y="741" width="0.0289%" height="15" fill="rgb(236,23,11)" fg:x="7391297458" fg:w="21900852"/><text x="10.0180%" y="751.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (21,900,852 samples, 0.03%)</title><rect x="9.7680%" y="725" width="0.0289%" height="15" fill="rgb(205,117,38)" fg:x="7391297458" fg:w="21900852"/><text x="10.0180%" y="735.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (21,900,852 samples, 0.03%)</title><rect x="9.7680%" y="709" width="0.0289%" height="15" fill="rgb(237,72,25)" fg:x="7391297458" fg:w="21900852"/><text x="10.0180%" y="719.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (8,774,075 samples, 0.01%)</title><rect x="9.7969%" y="709" width="0.0116%" height="15" fill="rgb(244,70,9)" fg:x="7413198310" fg:w="8774075"/><text x="10.0469%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8,774,075 samples, 0.01%)</title><rect x="9.7969%" y="693" width="0.0116%" height="15" fill="rgb(217,125,39)" fg:x="7413198310" fg:w="8774075"/><text x="10.0469%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8,774,075 samples, 0.01%)</title><rect x="9.7969%" y="677" width="0.0116%" height="15" fill="rgb(235,36,10)" fg:x="7413198310" fg:w="8774075"/><text x="10.0469%" y="687.50"></text></g><g><title>&lt;caches::KeyRef&lt;K&gt; as core::hash::Hash&gt;::hash (12,721,224 samples, 0.02%)</title><rect x="9.7969%" y="773" width="0.0168%" height="15" fill="rgb(251,123,47)" fg:x="7413198310" fg:w="12721224"/><text x="10.0469%" y="783.50"></text></g><g><title>&lt;mws5::words::Word as core::hash::Hash&gt;::hash (12,721,224 samples, 0.02%)</title><rect x="9.7969%" y="757" width="0.0168%" height="15" fill="rgb(221,13,13)" fg:x="7413198310" fg:w="12721224"/><text x="10.0469%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (12,721,224 samples, 0.02%)</title><rect x="9.7969%" y="741" width="0.0168%" height="15" fill="rgb(238,131,9)" fg:x="7413198310" fg:w="12721224"/><text x="10.0469%" y="751.50"></text></g><g><title>core::hash::Hasher::write_u32 (12,721,224 samples, 0.02%)</title><rect x="9.7969%" y="725" width="0.0168%" height="15" fill="rgb(211,50,8)" fg:x="7413198310" fg:w="12721224"/><text x="10.0469%" y="735.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (21,574,045 samples, 0.03%)</title><rect x="9.8370%" y="757" width="0.0285%" height="15" fill="rgb(245,182,24)" fg:x="7443482585" fg:w="21574045"/><text x="10.0870%" y="767.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (21,574,045 samples, 0.03%)</title><rect x="9.8370%" y="741" width="0.0285%" height="15" fill="rgb(242,14,37)" fg:x="7443482585" fg:w="21574045"/><text x="10.0870%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (17,146,031 samples, 0.02%)</title><rect x="9.8428%" y="725" width="0.0227%" height="15" fill="rgb(246,228,12)" fg:x="7447910599" fg:w="17146031"/><text x="10.0928%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (17,146,031 samples, 0.02%)</title><rect x="9.8428%" y="709" width="0.0227%" height="15" fill="rgb(213,55,15)" fg:x="7447910599" fg:w="17146031"/><text x="10.0928%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (17,146,031 samples, 0.02%)</title><rect x="9.8428%" y="693" width="0.0227%" height="15" fill="rgb(209,9,3)" fg:x="7447910599" fg:w="17146031"/><text x="10.0928%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (17,146,031 samples, 0.02%)</title><rect x="9.8428%" y="677" width="0.0227%" height="15" fill="rgb(230,59,30)" fg:x="7447910599" fg:w="17146031"/><text x="10.0928%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17,146,031 samples, 0.02%)</title><rect x="9.8428%" y="661" width="0.0227%" height="15" fill="rgb(209,121,21)" fg:x="7447910599" fg:w="17146031"/><text x="10.0928%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (13,180,076 samples, 0.02%)</title><rect x="9.8480%" y="645" width="0.0174%" height="15" fill="rgb(220,109,13)" fg:x="7451876554" fg:w="13180076"/><text x="10.0980%" y="655.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (13,213,472 samples, 0.02%)</title><rect x="9.8713%" y="629" width="0.0175%" height="15" fill="rgb(232,18,1)" fg:x="7469490043" fg:w="13213472"/><text x="10.1213%" y="639.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (13,213,472 samples, 0.02%)</title><rect x="9.8713%" y="613" width="0.0175%" height="15" fill="rgb(215,41,42)" fg:x="7469490043" fg:w="13213472"/><text x="10.1213%" y="623.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (13,213,472 samples, 0.02%)</title><rect x="9.8713%" y="597" width="0.0175%" height="15" fill="rgb(224,123,36)" fg:x="7469490043" fg:w="13213472"/><text x="10.1213%" y="607.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (13,213,472 samples, 0.02%)</title><rect x="9.8713%" y="581" width="0.0175%" height="15" fill="rgb(240,125,3)" fg:x="7469490043" fg:w="13213472"/><text x="10.1213%" y="591.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::get_ (22,044,130 samples, 0.03%)</title><rect x="9.8655%" y="741" width="0.0291%" height="15" fill="rgb(205,98,50)" fg:x="7465056630" fg:w="22044130"/><text x="10.1155%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (22,044,130 samples, 0.03%)</title><rect x="9.8655%" y="725" width="0.0291%" height="15" fill="rgb(205,185,37)" fg:x="7465056630" fg:w="22044130"/><text x="10.1155%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (22,044,130 samples, 0.03%)</title><rect x="9.8655%" y="709" width="0.0291%" height="15" fill="rgb(238,207,15)" fg:x="7465056630" fg:w="22044130"/><text x="10.1155%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (22,044,130 samples, 0.03%)</title><rect x="9.8655%" y="693" width="0.0291%" height="15" fill="rgb(213,199,42)" fg:x="7465056630" fg:w="22044130"/><text x="10.1155%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (22,044,130 samples, 0.03%)</title><rect x="9.8655%" y="677" width="0.0291%" height="15" fill="rgb(235,201,11)" fg:x="7465056630" fg:w="22044130"/><text x="10.1155%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (22,044,130 samples, 0.03%)</title><rect x="9.8655%" y="661" width="0.0291%" height="15" fill="rgb(207,46,11)" fg:x="7465056630" fg:w="22044130"/><text x="10.1155%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (22,044,130 samples, 0.03%)</title><rect x="9.8655%" y="645" width="0.0291%" height="15" fill="rgb(241,35,35)" fg:x="7465056630" fg:w="22044130"/><text x="10.1155%" y="655.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (65,602,603 samples, 0.09%)</title><rect x="9.8137%" y="773" width="0.0867%" height="15" fill="rgb(243,32,47)" fg:x="7425919534" fg:w="65602603"/><text x="10.0637%" y="783.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (26,465,507 samples, 0.03%)</title><rect x="9.8655%" y="757" width="0.0350%" height="15" fill="rgb(247,202,23)" fg:x="7465056630" fg:w="26465507"/><text x="10.1155%" y="767.50"></text></g><g><title>&lt;caches::lru::raw::KeyWrapper&lt;K&gt; as core::hash::Hash&gt;::hash (8,759,591 samples, 0.01%)</title><rect x="9.9062%" y="773" width="0.0116%" height="15" fill="rgb(219,102,11)" fg:x="7495897940" fg:w="8759591"/><text x="10.1562%" y="783.50"></text></g><g><title>&lt;mws5::words::Word as core::hash::Hash&gt;::hash (8,759,591 samples, 0.01%)</title><rect x="9.9062%" y="757" width="0.0116%" height="15" fill="rgb(243,110,44)" fg:x="7495897940" fg:w="8759591"/><text x="10.1562%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (8,759,591 samples, 0.01%)</title><rect x="9.9062%" y="741" width="0.0116%" height="15" fill="rgb(222,74,54)" fg:x="7495897940" fg:w="8759591"/><text x="10.1562%" y="751.50"></text></g><g><title>core::hash::Hasher::write_u32 (8,759,591 samples, 0.01%)</title><rect x="9.9062%" y="725" width="0.0116%" height="15" fill="rgb(216,99,12)" fg:x="7495897940" fg:w="8759591"/><text x="10.1562%" y="735.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (8,759,591 samples, 0.01%)</title><rect x="9.9062%" y="709" width="0.0116%" height="15" fill="rgb(226,22,26)" fg:x="7495897940" fg:w="8759591"/><text x="10.1562%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8,759,591 samples, 0.01%)</title><rect x="9.9062%" y="693" width="0.0116%" height="15" fill="rgb(217,163,10)" fg:x="7495897940" fg:w="8759591"/><text x="10.1562%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8,759,591 samples, 0.01%)</title><rect x="9.9062%" y="677" width="0.0116%" height="15" fill="rgb(213,25,53)" fg:x="7495897940" fg:w="8759591"/><text x="10.1562%" y="687.50"></text></g><g><title>core::hash::sip::u8to64_le (8,759,591 samples, 0.01%)</title><rect x="9.9062%" y="661" width="0.0116%" height="15" fill="rgb(252,105,26)" fg:x="7495897940" fg:w="8759591"/><text x="10.1562%" y="671.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::contains (8,719,798 samples, 0.01%)</title><rect x="9.9235%" y="757" width="0.0115%" height="15" fill="rgb(220,39,43)" fg:x="7509007776" fg:w="8719798"/><text x="10.1735%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (8,719,798 samples, 0.01%)</title><rect x="9.9235%" y="741" width="0.0115%" height="15" fill="rgb(229,68,48)" fg:x="7509007776" fg:w="8719798"/><text x="10.1735%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (8,719,798 samples, 0.01%)</title><rect x="9.9235%" y="725" width="0.0115%" height="15" fill="rgb(252,8,32)" fg:x="7509007776" fg:w="8719798"/><text x="10.1735%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8,719,798 samples, 0.01%)</title><rect x="9.9235%" y="709" width="0.0115%" height="15" fill="rgb(223,20,43)" fg:x="7509007776" fg:w="8719798"/><text x="10.1735%" y="719.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::put (26,254,871 samples, 0.03%)</title><rect x="9.9178%" y="773" width="0.0347%" height="15" fill="rgb(229,81,49)" fg:x="7504657531" fg:w="26254871"/><text x="10.1678%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (13,184,828 samples, 0.02%)</title><rect x="9.9351%" y="757" width="0.0174%" height="15" fill="rgb(236,28,36)" fg:x="7517727574" fg:w="13184828"/><text x="10.1851%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (13,184,828 samples, 0.02%)</title><rect x="9.9351%" y="741" width="0.0174%" height="15" fill="rgb(249,185,26)" fg:x="7517727574" fg:w="13184828"/><text x="10.1851%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (13,184,828 samples, 0.02%)</title><rect x="9.9351%" y="725" width="0.0174%" height="15" fill="rgb(249,174,33)" fg:x="7517727574" fg:w="13184828"/><text x="10.1851%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (8,791,521 samples, 0.01%)</title><rect x="9.9409%" y="709" width="0.0116%" height="15" fill="rgb(233,201,37)" fg:x="7522120881" fg:w="8791521"/><text x="10.1909%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8,791,521 samples, 0.01%)</title><rect x="9.9409%" y="693" width="0.0116%" height="15" fill="rgb(221,78,26)" fg:x="7522120881" fg:w="8791521"/><text x="10.1909%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (8,791,521 samples, 0.01%)</title><rect x="9.9409%" y="677" width="0.0116%" height="15" fill="rgb(250,127,30)" fg:x="7522120881" fg:w="8791521"/><text x="10.1909%" y="687.50"></text></g><g><title>__GI___libc_free (8,797,435 samples, 0.01%)</title><rect x="9.9525%" y="773" width="0.0116%" height="15" fill="rgb(230,49,44)" fg:x="7530912402" fg:w="8797435"/><text x="10.2025%" y="783.50"></text></g><g><title>__GI___libc_malloc (8,674,330 samples, 0.01%)</title><rect x="9.9641%" y="773" width="0.0115%" height="15" fill="rgb(229,67,23)" fg:x="7539709837" fg:w="8674330"/><text x="10.2141%" y="783.50"></text></g><g><title>tcache_try_malloc (8,674,330 samples, 0.01%)</title><rect x="9.9641%" y="757" width="0.0115%" height="15" fill="rgb(249,83,47)" fg:x="7539709837" fg:w="8674330"/><text x="10.2141%" y="767.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (8,832,058 samples, 0.01%)</title><rect x="9.9814%" y="725" width="0.0117%" height="15" fill="rgb(215,43,3)" fg:x="7552769645" fg:w="8832058"/><text x="10.2314%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8,832,058 samples, 0.01%)</title><rect x="9.9814%" y="709" width="0.0117%" height="15" fill="rgb(238,154,13)" fg:x="7552769645" fg:w="8832058"/><text x="10.2314%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8,832,058 samples, 0.01%)</title><rect x="9.9814%" y="693" width="0.0117%" height="15" fill="rgb(219,56,2)" fg:x="7552769645" fg:w="8832058"/><text x="10.2314%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8,832,058 samples, 0.01%)</title><rect x="9.9814%" y="677" width="0.0117%" height="15" fill="rgb(233,0,4)" fg:x="7552769645" fg:w="8832058"/><text x="10.2314%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8,832,058 samples, 0.01%)</title><rect x="9.9814%" y="661" width="0.0117%" height="15" fill="rgb(235,30,7)" fg:x="7552769645" fg:w="8832058"/><text x="10.2314%" y="671.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::compare_helper (13,166,218 samples, 0.02%)</title><rect x="9.9814%" y="773" width="0.0174%" height="15" fill="rgb(250,79,13)" fg:x="7552769645" fg:w="13166218"/><text x="10.2314%" y="783.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::hash_key (13,166,218 samples, 0.02%)</title><rect x="9.9814%" y="757" width="0.0174%" height="15" fill="rgb(211,146,34)" fg:x="7552769645" fg:w="13166218"/><text x="10.2314%" y="767.50"></text></g><g><title>&lt;caches::lfu::DefaultKeyHasher&lt;K&gt; as caches::lfu::KeyHasher&lt;K&gt;&gt;::hash_key (13,166,218 samples, 0.02%)</title><rect x="9.9814%" y="741" width="0.0174%" height="15" fill="rgb(228,22,38)" fg:x="7552769645" fg:w="13166218"/><text x="10.2314%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17,548,937 samples, 0.02%)</title><rect x="10.0334%" y="677" width="0.0232%" height="15" fill="rgb(235,168,5)" fg:x="7592130106" fg:w="17548937"/><text x="10.2834%" y="687.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (30,651,351 samples, 0.04%)</title><rect x="10.0277%" y="725" width="0.0405%" height="15" fill="rgb(221,155,16)" fg:x="7587810387" fg:w="30651351"/><text x="10.2777%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (30,651,351 samples, 0.04%)</title><rect x="10.0277%" y="709" width="0.0405%" height="15" fill="rgb(215,215,53)" fg:x="7587810387" fg:w="30651351"/><text x="10.2777%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (30,651,351 samples, 0.04%)</title><rect x="10.0277%" y="693" width="0.0405%" height="15" fill="rgb(223,4,10)" fg:x="7587810387" fg:w="30651351"/><text x="10.2777%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8,782,695 samples, 0.01%)</title><rect x="10.0566%" y="677" width="0.0116%" height="15" fill="rgb(234,103,6)" fg:x="7609679043" fg:w="8782695"/><text x="10.3066%" y="687.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::increment (56,891,185 samples, 0.08%)</title><rect x="9.9988%" y="773" width="0.0752%" height="15" fill="rgb(227,97,0)" fg:x="7565935863" fg:w="56891185"/><text x="10.2488%" y="783.50"></text></g><g><title>caches::lfu::tinylfu::TinyLFU&lt;K,KH&gt;::hash_key (39,517,144 samples, 0.05%)</title><rect x="10.0217%" y="757" width="0.0522%" height="15" fill="rgb(234,150,53)" fg:x="7583309904" fg:w="39517144"/><text x="10.2717%" y="767.50"></text></g><g><title>&lt;caches::lfu::DefaultKeyHasher&lt;K&gt; as caches::lfu::KeyHasher&lt;K&gt;&gt;::hash_key (39,517,144 samples, 0.05%)</title><rect x="10.0217%" y="741" width="0.0522%" height="15" fill="rgb(228,201,54)" fg:x="7583309904" fg:w="39517144"/><text x="10.2717%" y="751.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::set (30,847,817 samples, 0.04%)</title><rect x="10.0855%" y="741" width="0.0408%" height="15" fill="rgb(222,22,37)" fg:x="7631530387" fg:w="30847817"/><text x="10.3355%" y="751.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::add (52,681,970 samples, 0.07%)</title><rect x="10.0740%" y="757" width="0.0696%" height="15" fill="rgb(237,53,32)" fg:x="7622827048" fg:w="52681970"/><text x="10.3240%" y="767.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (13,130,814 samples, 0.02%)</title><rect x="10.1262%" y="741" width="0.0174%" height="15" fill="rgb(233,25,53)" fg:x="7662378204" fg:w="13130814"/><text x="10.3762%" y="751.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (13,130,814 samples, 0.02%)</title><rect x="10.1262%" y="725" width="0.0174%" height="15" fill="rgb(210,40,34)" fg:x="7662378204" fg:w="13130814"/><text x="10.3762%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::lt (13,130,814 samples, 0.02%)</title><rect x="10.1262%" y="709" width="0.0174%" height="15" fill="rgb(241,220,44)" fg:x="7662378204" fg:w="13130814"/><text x="10.3762%" y="719.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::is_set (8,392,069 samples, 0.01%)</title><rect x="10.1494%" y="741" width="0.0111%" height="15" fill="rgb(235,28,35)" fg:x="7679879120" fg:w="8392069"/><text x="10.3994%" y="751.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains_or_add (69,774,678 samples, 0.09%)</title><rect x="10.0740%" y="773" width="0.0922%" height="15" fill="rgb(210,56,17)" fg:x="7622827048" fg:w="69774678"/><text x="10.3240%" y="783.50"></text></g><g><title>caches::lfu::tinylfu::bloom::Bloom::contains (17,092,708 samples, 0.02%)</title><rect x="10.1436%" y="757" width="0.0226%" height="15" fill="rgb(224,130,29)" fg:x="7675509018" fg:w="17092708"/><text x="10.3936%" y="767.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset (13,138,431 samples, 0.02%)</title><rect x="10.1662%" y="773" width="0.0174%" height="15" fill="rgb(235,212,8)" fg:x="7692601726" fg:w="13138431"/><text x="10.4162%" y="783.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (13,138,431 samples, 0.02%)</title><rect x="10.1662%" y="757" width="0.0174%" height="15" fill="rgb(223,33,50)" fg:x="7692601726" fg:w="13138431"/><text x="10.4162%" y="767.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_sketch_std::CountMinSketch::reset::_{{closure}} (13,138,431 samples, 0.02%)</title><rect x="10.1662%" y="741" width="0.0174%" height="15" fill="rgb(219,149,13)" fg:x="7692601726" fg:w="13138431"/><text x="10.4162%" y="751.50"></text></g><g><title>caches::lfu::tinylfu::sketch::count_min_row::CountMinRow::reset (13,138,431 samples, 0.02%)</title><rect x="10.1662%" y="725" width="0.0174%" height="15" fill="rgb(250,156,29)" fg:x="7692601726" fg:w="13138431"/><text x="10.4162%" y="735.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (8,741,444 samples, 0.01%)</title><rect x="10.1720%" y="709" width="0.0116%" height="15" fill="rgb(216,193,19)" fg:x="7696998713" fg:w="8741444"/><text x="10.4220%" y="719.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,741,444 samples, 0.01%)</title><rect x="10.1720%" y="693" width="0.0116%" height="15" fill="rgb(216,135,14)" fg:x="7696998713" fg:w="8741444"/><text x="10.4220%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (13,028,730 samples, 0.02%)</title><rect x="10.2655%" y="693" width="0.0172%" height="15" fill="rgb(241,47,5)" fg:x="7767735658" fg:w="13028730"/><text x="10.5155%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (34,923,876 samples, 0.05%)</title><rect x="10.2427%" y="709" width="0.0462%" height="15" fill="rgb(233,42,35)" fg:x="7750488501" fg:w="34923876"/><text x="10.4927%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (57,027,294 samples, 0.08%)</title><rect x="10.3401%" y="693" width="0.0754%" height="15" fill="rgb(231,13,6)" fg:x="7824188488" fg:w="57027294"/><text x="10.5901%" y="703.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (188,508,909 samples, 0.25%)</title><rect x="10.1951%" y="757" width="0.2491%" height="15" fill="rgb(207,181,40)" fg:x="7714514146" fg:w="188508909"/><text x="10.4451%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (188,508,909 samples, 0.25%)</title><rect x="10.1951%" y="741" width="0.2491%" height="15" fill="rgb(254,173,49)" fg:x="7714514146" fg:w="188508909"/><text x="10.4451%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (188,508,909 samples, 0.25%)</title><rect x="10.1951%" y="725" width="0.2491%" height="15" fill="rgb(221,1,38)" fg:x="7714514146" fg:w="188508909"/><text x="10.4451%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (117,610,678 samples, 0.16%)</title><rect x="10.2888%" y="709" width="0.1554%" height="15" fill="rgb(206,124,46)" fg:x="7785412377" fg:w="117610678"/><text x="10.5388%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (21,807,273 samples, 0.03%)</title><rect x="10.4154%" y="693" width="0.0288%" height="15" fill="rgb(249,21,11)" fg:x="7881215782" fg:w="21807273"/><text x="10.6654%" y="703.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (30,539,073 samples, 0.04%)</title><rect x="10.4443%" y="757" width="0.0404%" height="15" fill="rgb(222,201,40)" fg:x="7903023055" fg:w="30539073"/><text x="10.6943%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (240,991,592 samples, 0.32%)</title><rect x="10.1893%" y="773" width="0.3185%" height="15" fill="rgb(235,61,29)" fg:x="7710119512" fg:w="240991592"/><text x="10.4393%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (17,548,976 samples, 0.02%)</title><rect x="10.4846%" y="757" width="0.0232%" height="15" fill="rgb(219,207,3)" fg:x="7933562128" fg:w="17548976"/><text x="10.7346%" y="767.50"></text></g><g><title>hashbrown::control::tag::Tag::full (13,125,054 samples, 0.02%)</title><rect x="10.5425%" y="709" width="0.0173%" height="15" fill="rgb(222,56,46)" fg:x="7977346737" fg:w="13125054"/><text x="10.7925%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (43,746,670 samples, 0.06%)</title><rect x="10.5136%" y="757" width="0.0578%" height="15" fill="rgb(239,76,54)" fg:x="7955476175" fg:w="43746670"/><text x="10.7636%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (43,746,670 samples, 0.06%)</title><rect x="10.5136%" y="741" width="0.0578%" height="15" fill="rgb(231,124,27)" fg:x="7955476175" fg:w="43746670"/><text x="10.7636%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (39,349,709 samples, 0.05%)</title><rect x="10.5194%" y="725" width="0.0520%" height="15" fill="rgb(249,195,6)" fg:x="7959873136" fg:w="39349709"/><text x="10.7694%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (8,751,054 samples, 0.01%)</title><rect x="10.5598%" y="709" width="0.0116%" height="15" fill="rgb(237,174,47)" fg:x="7990471791" fg:w="8751054"/><text x="10.8098%" y="719.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty_or_deleted (8,751,054 samples, 0.01%)</title><rect x="10.5598%" y="693" width="0.0116%" height="15" fill="rgb(206,201,31)" fg:x="7990471791" fg:w="8751054"/><text x="10.8098%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (8,751,054 samples, 0.01%)</title><rect x="10.5598%" y="677" width="0.0116%" height="15" fill="rgb(231,57,52)" fg:x="7990471791" fg:w="8751054"/><text x="10.8098%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8,773,178 samples, 0.01%)</title><rect x="10.6003%" y="677" width="0.0116%" height="15" fill="rgb(248,177,22)" fg:x="8021084966" fg:w="8773178"/><text x="10.8503%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8,503,962 samples, 0.01%)</title><rect x="10.6351%" y="661" width="0.0112%" height="15" fill="rgb(215,211,37)" fg:x="8047450945" fg:w="8503962"/><text x="10.8851%" y="671.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (52,308,481 samples, 0.07%)</title><rect x="10.5830%" y="725" width="0.0691%" height="15" fill="rgb(241,128,51)" fg:x="8007975435" fg:w="52308481"/><text x="10.8330%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (52,308,481 samples, 0.07%)</title><rect x="10.5830%" y="709" width="0.0691%" height="15" fill="rgb(227,165,31)" fg:x="8007975435" fg:w="52308481"/><text x="10.8330%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (52,308,481 samples, 0.07%)</title><rect x="10.5830%" y="693" width="0.0691%" height="15" fill="rgb(228,167,24)" fg:x="8007975435" fg:w="52308481"/><text x="10.8330%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (30,425,772 samples, 0.04%)</title><rect x="10.6119%" y="677" width="0.0402%" height="15" fill="rgb(228,143,12)" fg:x="8029858144" fg:w="30425772"/><text x="10.8619%" y="687.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (17,463,450 samples, 0.02%)</title><rect x="10.6521%" y="725" width="0.0231%" height="15" fill="rgb(249,149,8)" fg:x="8060283916" fg:w="17463450"/><text x="10.9021%" y="735.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (17,463,450 samples, 0.02%)</title><rect x="10.6521%" y="709" width="0.0231%" height="15" fill="rgb(243,35,44)" fg:x="8060283916" fg:w="17463450"/><text x="10.9021%" y="719.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (17,463,450 samples, 0.02%)</title><rect x="10.6521%" y="693" width="0.0231%" height="15" fill="rgb(246,89,9)" fg:x="8060283916" fg:w="17463450"/><text x="10.9021%" y="703.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (17,463,450 samples, 0.02%)</title><rect x="10.6521%" y="677" width="0.0231%" height="15" fill="rgb(233,213,13)" fg:x="8060283916" fg:w="17463450"/><text x="10.9021%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (82,935,941 samples, 0.11%)</title><rect x="10.5714%" y="757" width="0.1096%" height="15" fill="rgb(233,141,41)" fg:x="7999222845" fg:w="82935941"/><text x="10.8214%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (82,935,941 samples, 0.11%)</title><rect x="10.5714%" y="741" width="0.1096%" height="15" fill="rgb(239,167,4)" fg:x="7999222845" fg:w="82935941"/><text x="10.8214%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (152,909,122 samples, 0.20%)</title><rect x="10.5078%" y="773" width="0.2021%" height="15" fill="rgb(209,217,16)" fg:x="7951111104" fg:w="152909122"/><text x="10.7578%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (21,861,440 samples, 0.03%)</title><rect x="10.6810%" y="757" width="0.0289%" height="15" fill="rgb(219,88,35)" fg:x="8082158786" fg:w="21861440"/><text x="10.9310%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner::record_item_insert_at (17,506,967 samples, 0.02%)</title><rect x="10.6867%" y="741" width="0.0231%" height="15" fill="rgb(220,193,23)" fg:x="8086513259" fg:w="17506967"/><text x="10.9367%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl_hash (8,734,368 samples, 0.01%)</title><rect x="10.6983%" y="725" width="0.0115%" height="15" fill="rgb(230,90,52)" fg:x="8095285858" fg:w="8734368"/><text x="10.9483%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl (8,734,368 samples, 0.01%)</title><rect x="10.6983%" y="709" width="0.0115%" height="15" fill="rgb(252,106,19)" fg:x="8095285858" fg:w="8734368"/><text x="10.9483%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (8,734,368 samples, 0.01%)</title><rect x="10.6983%" y="693" width="0.0115%" height="15" fill="rgb(206,74,20)" fg:x="8095285858" fg:w="8734368"/><text x="10.9483%" y="703.50"></text></g><g><title>hashbrown::control::tag::Tag::full (13,223,748 samples, 0.02%)</title><rect x="10.7151%" y="725" width="0.0175%" height="15" fill="rgb(230,138,44)" fg:x="8107998438" fg:w="13223748"/><text x="10.9651%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17,522,950 samples, 0.02%)</title><rect x="10.7151%" y="757" width="0.0232%" height="15" fill="rgb(235,182,43)" fg:x="8107998438" fg:w="17522950"/><text x="10.9651%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (17,522,950 samples, 0.02%)</title><rect x="10.7151%" y="741" width="0.0232%" height="15" fill="rgb(242,16,51)" fg:x="8107998438" fg:w="17522950"/><text x="10.9651%" y="751.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::leading_zeros (13,128,752 samples, 0.02%)</title><rect x="10.7383%" y="709" width="0.0174%" height="15" fill="rgb(248,9,4)" fg:x="8125521388" fg:w="13128752"/><text x="10.9883%" y="719.50"></text></g><g><title>core::num::&lt;impl u16&gt;::leading_zeros (13,128,752 samples, 0.02%)</title><rect x="10.7383%" y="693" width="0.0174%" height="15" fill="rgb(210,31,22)" fg:x="8125521388" fg:w="13128752"/><text x="10.9883%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (38,984,766 samples, 0.05%)</title><rect x="10.7099%" y="773" width="0.0515%" height="15" fill="rgb(239,54,39)" fg:x="8104020226" fg:w="38984766"/><text x="10.9599%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (17,483,604 samples, 0.02%)</title><rect x="10.7383%" y="757" width="0.0231%" height="15" fill="rgb(230,99,41)" fg:x="8125521388" fg:w="17483604"/><text x="10.9883%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (17,483,604 samples, 0.02%)</title><rect x="10.7383%" y="741" width="0.0231%" height="15" fill="rgb(253,106,12)" fg:x="8125521388" fg:w="17483604"/><text x="10.9883%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::erase (17,483,604 samples, 0.02%)</title><rect x="10.7383%" y="725" width="0.0231%" height="15" fill="rgb(213,46,41)" fg:x="8125521388" fg:w="17483604"/><text x="10.9883%" y="735.50"></text></g><g><title>hashbrown::control::tag::TagSliceExt::fill_empty (17,295,280 samples, 0.02%)</title><rect x="10.7615%" y="725" width="0.0229%" height="15" fill="rgb(215,133,35)" fg:x="8143069719" fg:w="17295280"/><text x="11.0115%" y="735.50"></text></g><g><title>&lt;[hashbrown::control::tag::Tag] as hashbrown::control::tag::TagSliceExt&gt;::fill_tag (17,295,280 samples, 0.02%)</title><rect x="10.7615%" y="709" width="0.0229%" height="15" fill="rgb(213,28,5)" fg:x="8143069719" fg:w="17295280"/><text x="11.0115%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (17,295,280 samples, 0.02%)</title><rect x="10.7615%" y="693" width="0.0229%" height="15" fill="rgb(215,77,49)" fg:x="8143069719" fg:w="17295280"/><text x="11.0115%" y="703.50"></text></g><g><title>core::intrinsics::write_bytes (17,295,280 samples, 0.02%)</title><rect x="10.7615%" y="677" width="0.0229%" height="15" fill="rgb(248,100,22)" fg:x="8143069719" fg:w="17295280"/><text x="11.0115%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (17,011,030 samples, 0.02%)</title><rect x="10.7843%" y="725" width="0.0225%" height="15" fill="rgb(208,67,9)" fg:x="8160364999" fg:w="17011030"/><text x="11.0343%" y="735.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (8,169,968 samples, 0.01%)</title><rect x="10.7960%" y="709" width="0.0108%" height="15" fill="rgb(219,133,21)" fg:x="8169206061" fg:w="8169968"/><text x="11.0460%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8,169,968 samples, 0.01%)</title><rect x="10.7960%" y="693" width="0.0108%" height="15" fill="rgb(246,46,29)" fg:x="8169206061" fg:w="8169968"/><text x="11.0460%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8,169,968 samples, 0.01%)</title><rect x="10.7960%" y="677" width="0.0108%" height="15" fill="rgb(246,185,52)" fg:x="8169206061" fg:w="8169968"/><text x="11.0460%" y="687.50"></text></g><g><title>alloc::alloc::alloc (8,169,968 samples, 0.01%)</title><rect x="10.7960%" y="661" width="0.0108%" height="15" fill="rgb(252,136,11)" fg:x="8169206061" fg:w="8169968"/><text x="11.0460%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (38,797,013 samples, 0.05%)</title><rect x="10.7614%" y="773" width="0.0513%" height="15" fill="rgb(219,138,53)" fg:x="8143004992" fg:w="38797013"/><text x="11.0114%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner::with_capacity (38,732,286 samples, 0.05%)</title><rect x="10.7615%" y="757" width="0.0512%" height="15" fill="rgb(211,51,23)" fg:x="8143069719" fg:w="38732286"/><text x="11.0115%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (38,732,286 samples, 0.05%)</title><rect x="10.7615%" y="741" width="0.0512%" height="15" fill="rgb(247,221,28)" fg:x="8143069719" fg:w="38732286"/><text x="11.0115%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (659,475,741 samples, 0.87%)</title><rect x="16.6589%" y="693" width="0.8715%" height="15" fill="rgb(251,222,45)" fg:x="12605551526" fg:w="659475741"/><text x="16.9089%" y="703.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (659,475,741 samples, 0.87%)</title><rect x="16.6589%" y="677" width="0.8715%" height="15" fill="rgb(217,162,53)" fg:x="12605551526" fg:w="659475741"/><text x="16.9089%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,695,009,612 samples, 10.17%)</title><rect x="10.8593%" y="757" width="10.1694%" height="15" fill="rgb(229,93,14)" fg:x="8217053514" fg:w="7695009612"/><text x="11.1093%" y="767.50">&lt;core::iter::ad..</text></g><g><title>core::iter::traits::iterator::Iterator::find (7,695,009,612 samples, 10.17%)</title><rect x="10.8593%" y="741" width="10.1694%" height="15" fill="rgb(209,67,49)" fg:x="8217053514" fg:w="7695009612"/><text x="11.1093%" y="751.50">core::iter::tra..</text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7,695,009,612 samples, 10.17%)</title><rect x="10.8593%" y="725" width="10.1694%" height="15" fill="rgb(213,87,29)" fg:x="8217053514" fg:w="7695009612"/><text x="11.1093%" y="735.50">&lt;core::iter::ad..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7,695,009,612 samples, 10.17%)</title><rect x="10.8593%" y="709" width="10.1694%" height="15" fill="rgb(205,151,52)" fg:x="8217053514" fg:w="7695009612"/><text x="11.1093%" y="719.50">core::iter::tra..</text></g><g><title>core::iter::adapters::copied::copy_try_fold::_{{closure}} (2,647,035,859 samples, 3.50%)</title><rect x="17.5304%" y="693" width="3.4982%" height="15" fill="rgb(253,215,39)" fg:x="13265027267" fg:w="2647035859"/><text x="17.7804%" y="703.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (2,647,035,859 samples, 3.50%)</title><rect x="17.5304%" y="677" width="3.4982%" height="15" fill="rgb(221,220,41)" fg:x="13265027267" fg:w="2647035859"/><text x="17.7804%" y="687.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,647,035,859 samples, 3.50%)</title><rect x="17.5304%" y="661" width="3.4982%" height="15" fill="rgb(218,133,21)" fg:x="13265027267" fg:w="2647035859"/><text x="17.7804%" y="671.50">cor..</text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (2,647,035,859 samples, 3.50%)</title><rect x="17.5304%" y="645" width="3.4982%" height="15" fill="rgb(221,193,43)" fg:x="13265027267" fg:w="2647035859"/><text x="17.7804%" y="655.50">mws..</text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (21,748,277 samples, 0.03%)</title><rect x="21.0286%" y="645" width="0.0287%" height="15" fill="rgb(240,128,52)" fg:x="15912063126" fg:w="21748277"/><text x="21.2786%" y="655.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (12,988,945 samples, 0.02%)</title><rect x="21.0402%" y="629" width="0.0172%" height="15" fill="rgb(253,114,12)" fg:x="15920822458" fg:w="12988945"/><text x="21.2902%" y="639.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (12,988,945 samples, 0.02%)</title><rect x="21.0402%" y="613" width="0.0172%" height="15" fill="rgb(215,223,47)" fg:x="15920822458" fg:w="12988945"/><text x="21.2902%" y="623.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (30,565,596 samples, 0.04%)</title><rect x="21.0286%" y="661" width="0.0404%" height="15" fill="rgb(248,225,23)" fg:x="15912063126" fg:w="30565596"/><text x="21.2786%" y="671.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::remove_lowest_bit (8,817,319 samples, 0.01%)</title><rect x="21.0574%" y="645" width="0.0117%" height="15" fill="rgb(250,108,0)" fg:x="15933811403" fg:w="8817319"/><text x="21.3074%" y="655.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (39,179,471 samples, 0.05%)</title><rect x="21.0286%" y="757" width="0.0518%" height="15" fill="rgb(228,208,7)" fg:x="15912063126" fg:w="39179471"/><text x="21.2786%" y="767.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (39,179,471 samples, 0.05%)</title><rect x="21.0286%" y="741" width="0.0518%" height="15" fill="rgb(244,45,10)" fg:x="15912063126" fg:w="39179471"/><text x="21.2786%" y="751.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (39,179,471 samples, 0.05%)</title><rect x="21.0286%" y="725" width="0.0518%" height="15" fill="rgb(207,125,25)" fg:x="15912063126" fg:w="39179471"/><text x="21.2786%" y="735.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (39,179,471 samples, 0.05%)</title><rect x="21.0286%" y="709" width="0.0518%" height="15" fill="rgb(210,195,18)" fg:x="15912063126" fg:w="39179471"/><text x="21.2786%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (39,179,471 samples, 0.05%)</title><rect x="21.0286%" y="693" width="0.0518%" height="15" fill="rgb(249,80,12)" fg:x="15912063126" fg:w="39179471"/><text x="21.2786%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (39,179,471 samples, 0.05%)</title><rect x="21.0286%" y="677" width="0.0518%" height="15" fill="rgb(221,65,9)" fg:x="15912063126" fg:w="39179471"/><text x="21.2786%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (8,613,875 samples, 0.01%)</title><rect x="21.0690%" y="661" width="0.0114%" height="15" fill="rgb(235,49,36)" fg:x="15942628722" fg:w="8613875"/><text x="21.3190%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (8,613,875 samples, 0.01%)</title><rect x="21.0690%" y="645" width="0.0114%" height="15" fill="rgb(225,32,20)" fg:x="15942628722" fg:w="8613875"/><text x="21.3190%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13,063,764 samples, 0.02%)</title><rect x="21.0919%" y="645" width="0.0173%" height="15" fill="rgb(215,141,46)" fg:x="15959941711" fg:w="13063764"/><text x="21.3419%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (8,614,907 samples, 0.01%)</title><rect x="21.0978%" y="629" width="0.0114%" height="15" fill="rgb(250,160,47)" fg:x="15964390568" fg:w="8614907"/><text x="21.3478%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;mws5::words::Word&gt;&gt; (26,185,765 samples, 0.03%)</title><rect x="21.0804%" y="757" width="0.0346%" height="15" fill="rgb(216,222,40)" fg:x="15951242597" fg:w="26185765"/><text x="21.3304%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;mws5::words::Word,std::hash::random::RandomState&gt;&gt; (26,185,765 samples, 0.03%)</title><rect x="21.0804%" y="741" width="0.0346%" height="15" fill="rgb(234,217,39)" fg:x="15951242597" fg:w="26185765"/><text x="21.3304%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;mws5::words::Word,(),std::hash::random::RandomState&gt;&gt; (26,185,765 samples, 0.03%)</title><rect x="21.0804%" y="725" width="0.0346%" height="15" fill="rgb(207,178,40)" fg:x="15951242597" fg:w="26185765"/><text x="21.3304%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(mws5::words::Word,())&gt;&gt; (26,185,765 samples, 0.03%)</title><rect x="21.0804%" y="709" width="0.0346%" height="15" fill="rgb(221,136,13)" fg:x="15951242597" fg:w="26185765"/><text x="21.3304%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26,185,765 samples, 0.03%)</title><rect x="21.0804%" y="693" width="0.0346%" height="15" fill="rgb(249,199,10)" fg:x="15951242597" fg:w="26185765"/><text x="21.3304%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (21,851,078 samples, 0.03%)</title><rect x="21.0861%" y="677" width="0.0289%" height="15" fill="rgb(249,222,13)" fg:x="15955577284" fg:w="21851078"/><text x="21.3361%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (17,486,651 samples, 0.02%)</title><rect x="21.0919%" y="661" width="0.0231%" height="15" fill="rgb(244,185,38)" fg:x="15959941711" fg:w="17486651"/><text x="21.3419%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8,871,524 samples, 0.01%)</title><rect x="21.1262%" y="597" width="0.0117%" height="15" fill="rgb(236,202,9)" fg:x="15985885656" fg:w="8871524"/><text x="21.3762%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17,678,055 samples, 0.02%)</title><rect x="21.1203%" y="613" width="0.0234%" height="15" fill="rgb(250,229,37)" fg:x="15981458313" fg:w="17678055"/><text x="21.3703%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (14,345,480 samples, 0.02%)</title><rect x="21.1553%" y="597" width="0.0190%" height="15" fill="rgb(206,174,23)" fg:x="16007884821" fg:w="14345480"/><text x="21.4053%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (49,213,963 samples, 0.07%)</title><rect x="21.1150%" y="693" width="0.0650%" height="15" fill="rgb(211,33,43)" fg:x="15977428362" fg:w="49213963"/><text x="21.3650%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (49,213,963 samples, 0.07%)</title><rect x="21.1150%" y="677" width="0.0650%" height="15" fill="rgb(245,58,50)" fg:x="15977428362" fg:w="49213963"/><text x="21.3650%" y="687.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (49,213,963 samples, 0.07%)</title><rect x="21.1150%" y="661" width="0.0650%" height="15" fill="rgb(244,68,36)" fg:x="15977428362" fg:w="49213963"/><text x="21.3650%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (49,213,963 samples, 0.07%)</title><rect x="21.1150%" y="645" width="0.0650%" height="15" fill="rgb(232,229,15)" fg:x="15977428362" fg:w="49213963"/><text x="21.3650%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (49,213,963 samples, 0.07%)</title><rect x="21.1150%" y="629" width="0.0650%" height="15" fill="rgb(254,30,23)" fg:x="15977428362" fg:w="49213963"/><text x="21.3650%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (27,505,957 samples, 0.04%)</title><rect x="21.1437%" y="613" width="0.0364%" height="15" fill="rgb(235,160,14)" fg:x="15999136368" fg:w="27505957"/><text x="21.3937%" y="623.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (62,349,646 samples, 0.08%)</title><rect x="21.1150%" y="757" width="0.0824%" height="15" fill="rgb(212,155,44)" fg:x="15977428362" fg:w="62349646"/><text x="21.3650%" y="767.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (62,349,646 samples, 0.08%)</title><rect x="21.1150%" y="741" width="0.0824%" height="15" fill="rgb(226,2,50)" fg:x="15977428362" fg:w="62349646"/><text x="21.3650%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (62,349,646 samples, 0.08%)</title><rect x="21.1150%" y="725" width="0.0824%" height="15" fill="rgb(234,177,6)" fg:x="15977428362" fg:w="62349646"/><text x="21.3650%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (62,349,646 samples, 0.08%)</title><rect x="21.1150%" y="709" width="0.0824%" height="15" fill="rgb(217,24,9)" fg:x="15977428362" fg:w="62349646"/><text x="21.3650%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13,135,683 samples, 0.02%)</title><rect x="21.1800%" y="693" width="0.0174%" height="15" fill="rgb(220,13,46)" fg:x="16026642325" fg:w="13135683"/><text x="21.4300%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13,135,683 samples, 0.02%)</title><rect x="21.1800%" y="677" width="0.0174%" height="15" fill="rgb(239,221,27)" fg:x="16026642325" fg:w="13135683"/><text x="21.4300%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (13,135,683 samples, 0.02%)</title><rect x="21.1800%" y="661" width="0.0174%" height="15" fill="rgb(222,198,25)" fg:x="16026642325" fg:w="13135683"/><text x="21.4300%" y="671.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (8,566,073 samples, 0.01%)</title><rect x="21.1974%" y="757" width="0.0113%" height="15" fill="rgb(211,99,13)" fg:x="16039778008" fg:w="8566073"/><text x="21.4474%" y="767.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (8,566,073 samples, 0.01%)</title><rect x="21.1974%" y="741" width="0.0113%" height="15" fill="rgb(232,111,31)" fg:x="16039778008" fg:w="8566073"/><text x="21.4474%" y="751.50"></text></g><g><title>mws5::dict::Dict::is_fit (7,875,302,989 samples, 10.41%)</title><rect x="10.8127%" y="773" width="10.4076%" height="15" fill="rgb(245,82,37)" fg:x="8181802005" fg:w="7875302989"/><text x="11.0627%" y="783.50">mws5::dict::Dic..</text></g><g><title>std::collections::hash::set::HashSet&lt;T&gt;::with_capacity (8,760,913 samples, 0.01%)</title><rect x="21.2087%" y="757" width="0.0116%" height="15" fill="rgb(227,149,46)" fg:x="16048344081" fg:w="8760913"/><text x="21.4587%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::_{{closure}} (77,892,008 samples, 0.10%)</title><rect x="21.2546%" y="629" width="0.1029%" height="15" fill="rgb(218,36,50)" fg:x="16083068841" fg:w="77892008"/><text x="21.5046%" y="639.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (60,253,364 samples, 0.08%)</title><rect x="21.2779%" y="613" width="0.0796%" height="15" fill="rgb(226,80,48)" fg:x="16100707485" fg:w="60253364"/><text x="21.5279%" y="623.50"></text></g><g><title>core::iter::adapters::copied::copy_fold::_{{closure}} (112,845,520 samples, 0.15%)</title><rect x="21.2546%" y="661" width="0.1491%" height="15" fill="rgb(238,224,15)" fg:x="16083068841" fg:w="112845520"/><text x="21.5046%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (112,845,520 samples, 0.15%)</title><rect x="21.2546%" y="645" width="0.1491%" height="15" fill="rgb(241,136,10)" fg:x="16083068841" fg:w="112845520"/><text x="21.5046%" y="655.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (34,953,512 samples, 0.05%)</title><rect x="21.3576%" y="629" width="0.0462%" height="15" fill="rgb(208,32,45)" fg:x="16160960849" fg:w="34953512"/><text x="21.6076%" y="639.50"></text></g><g><title>mws5::dict::Dict::match_count (147,612,342 samples, 0.20%)</title><rect x="21.2203%" y="773" width="0.1951%" height="15" fill="rgb(207,135,9)" fg:x="16057104994" fg:w="147612342"/><text x="21.4703%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (134,568,661 samples, 0.18%)</title><rect x="21.2375%" y="757" width="0.1778%" height="15" fill="rgb(206,86,44)" fg:x="16070148675" fg:w="134568661"/><text x="21.4875%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (134,568,661 samples, 0.18%)</title><rect x="21.2375%" y="741" width="0.1778%" height="15" fill="rgb(245,177,15)" fg:x="16070148675" fg:w="134568661"/><text x="21.4875%" y="751.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (134,568,661 samples, 0.18%)</title><rect x="21.2375%" y="725" width="0.1778%" height="15" fill="rgb(206,64,50)" fg:x="16070148675" fg:w="134568661"/><text x="21.4875%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (134,568,661 samples, 0.18%)</title><rect x="21.2375%" y="709" width="0.1778%" height="15" fill="rgb(234,36,40)" fg:x="16070148675" fg:w="134568661"/><text x="21.4875%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (134,568,661 samples, 0.18%)</title><rect x="21.2375%" y="693" width="0.1778%" height="15" fill="rgb(213,64,8)" fg:x="16070148675" fg:w="134568661"/><text x="21.4875%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (134,568,661 samples, 0.18%)</title><rect x="21.2375%" y="677" width="0.1778%" height="15" fill="rgb(210,75,36)" fg:x="16070148675" fg:w="134568661"/><text x="21.4875%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (8,802,975 samples, 0.01%)</title><rect x="21.4037%" y="661" width="0.0116%" height="15" fill="rgb(229,88,21)" fg:x="16195914361" fg:w="8802975"/><text x="21.6537%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (489,626,831 samples, 0.65%)</title><rect x="22.5498%" y="725" width="0.6471%" height="15" fill="rgb(252,204,47)" fg:x="17063109422" fg:w="489626831"/><text x="22.7998%" y="735.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (380,155,590 samples, 0.50%)</title><rect x="22.6945%" y="709" width="0.5024%" height="15" fill="rgb(208,77,27)" fg:x="17172580663" fg:w="380155590"/><text x="22.9445%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,063,932,793 samples, 2.73%)</title><rect x="21.4268%" y="757" width="2.7276%" height="15" fill="rgb(221,76,26)" fg:x="16213335615" fg:w="2063932793"/><text x="21.6768%" y="767.50">&lt;c..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2,063,932,793 samples, 2.73%)</title><rect x="21.4268%" y="741" width="2.7276%" height="15" fill="rgb(225,139,18)" fg:x="16213335615" fg:w="2063932793"/><text x="21.6768%" y="751.50">&lt;c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (724,532,155 samples, 0.96%)</title><rect x="23.1969%" y="725" width="0.9575%" height="15" fill="rgb(230,137,11)" fg:x="17552736253" fg:w="724532155"/><text x="23.4469%" y="735.50"></text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (724,532,155 samples, 0.96%)</title><rect x="23.1969%" y="709" width="0.9575%" height="15" fill="rgb(212,28,1)" fg:x="17552736253" fg:w="724532155"/><text x="23.4469%" y="719.50"></text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (2,090,064,764 samples, 2.76%)</title><rect x="21.4154%" y="773" width="2.7621%" height="15" fill="rgb(248,164,17)" fg:x="16204717336" fg:w="2090064764"/><text x="21.6654%" y="783.50">mw..</text></g><g><title>mws5::squares::Square::set_pos (13,145,438 samples, 0.02%)</title><rect x="24.1601%" y="757" width="0.0174%" height="15" fill="rgb(222,171,42)" fg:x="18281636662" fg:w="13145438"/><text x="24.4101%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by::fold::_{{closure}} (8,756,661 samples, 0.01%)</title><rect x="24.2236%" y="693" width="0.0116%" height="15" fill="rgb(243,84,45)" fg:x="18329638446" fg:w="8756661"/><text x="24.4736%" y="703.50"></text></g><g><title>core::cmp::min_by (8,756,661 samples, 0.01%)</title><rect x="24.2236%" y="677" width="0.0116%" height="15" fill="rgb(252,49,23)" fg:x="18329638446" fg:w="8756661"/><text x="24.4736%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (17,415,281 samples, 0.02%)</title><rect x="24.2179%" y="757" width="0.0230%" height="15" fill="rgb(215,19,7)" fg:x="18325353277" fg:w="17415281"/><text x="24.4679%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (17,415,281 samples, 0.02%)</title><rect x="24.2179%" y="741" width="0.0230%" height="15" fill="rgb(238,81,41)" fg:x="18325353277" fg:w="17415281"/><text x="24.4679%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (17,415,281 samples, 0.02%)</title><rect x="24.2179%" y="725" width="0.0230%" height="15" fill="rgb(210,199,37)" fg:x="18325353277" fg:w="17415281"/><text x="24.4679%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,415,281 samples, 0.02%)</title><rect x="24.2179%" y="709" width="0.0230%" height="15" fill="rgb(244,192,49)" fg:x="18325353277" fg:w="17415281"/><text x="24.4679%" y="719.50"></text></g><g><title>mws5::search::best_pos (52,312,236 samples, 0.07%)</title><rect x="24.1775%" y="773" width="0.0691%" height="15" fill="rgb(226,211,11)" fg:x="18294782100" fg:w="52312236"/><text x="24.4275%" y="783.50"></text></g><g><title>[unknown] (23,589,501,110 samples, 31.17%)</title><rect x="9.7969%" y="789" width="31.1748%" height="15" fill="rgb(236,162,54)" fg:x="7413198310" fg:w="23589501110"/><text x="10.0469%" y="799.50">[unknown]</text></g><g><title>mws5::words::Word::is_fit (12,655,605,084 samples, 16.73%)</title><rect x="24.2466%" y="773" width="16.7250%" height="15" fill="rgb(220,229,9)" fg:x="18347094336" fg:w="12655605084"/><text x="24.4966%" y="783.50">mws5::words::Word::is_fit</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,247,184,876 samples, 6.93%)</title><rect x="34.0373%" y="757" width="6.9344%" height="15" fill="rgb(250,87,22)" fg:x="25755514544" fg:w="5247184876"/><text x="34.2873%" y="767.50">&lt;core::it..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (5,247,184,876 samples, 6.93%)</title><rect x="34.0373%" y="741" width="6.9344%" height="15" fill="rgb(239,43,17)" fg:x="25755514544" fg:w="5247184876"/><text x="34.2873%" y="751.50">&lt;core::it..</text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,247,184,876 samples, 6.93%)</title><rect x="34.0373%" y="725" width="6.9344%" height="15" fill="rgb(231,177,25)" fg:x="25755514544" fg:w="5247184876"/><text x="34.2873%" y="735.50">&lt;core::it..</text></g><g><title>mws5::words::Word::bits::_{{closure}} (5,247,184,876 samples, 6.93%)</title><rect x="34.0373%" y="709" width="6.9344%" height="15" fill="rgb(219,179,1)" fg:x="25755514544" fg:w="5247184876"/><text x="34.2873%" y="719.50">mws5::wor..</text></g><g><title>__rustc::__rdl_alloc (8,807,778 samples, 0.01%)</title><rect x="40.9717%" y="789" width="0.0116%" height="15" fill="rgb(238,219,53)" fg:x="31002699420" fg:w="8807778"/><text x="41.2217%" y="799.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (8,807,778 samples, 0.01%)</title><rect x="40.9717%" y="773" width="0.0116%" height="15" fill="rgb(232,167,36)" fg:x="31002699420" fg:w="8807778"/><text x="41.2217%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,697,153 samples, 0.01%)</title><rect x="40.9833%" y="453" width="0.0115%" height="15" fill="rgb(244,19,51)" fg:x="31011507198" fg:w="8697153"/><text x="41.2333%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (8,697,153 samples, 0.01%)</title><rect x="40.9833%" y="437" width="0.0115%" height="15" fill="rgb(224,6,22)" fg:x="31011507198" fg:w="8697153"/><text x="41.2333%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8,697,153 samples, 0.01%)</title><rect x="40.9833%" y="421" width="0.0115%" height="15" fill="rgb(224,145,5)" fg:x="31011507198" fg:w="8697153"/><text x="41.2333%" y="431.50"></text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (8,697,153 samples, 0.01%)</title><rect x="40.9833%" y="405" width="0.0115%" height="15" fill="rgb(234,130,49)" fg:x="31011507198" fg:w="8697153"/><text x="41.2333%" y="415.50"></text></g><g><title>mws5::words::Word::is_fit (8,697,153 samples, 0.01%)</title><rect x="40.9833%" y="389" width="0.0115%" height="15" fill="rgb(254,6,2)" fg:x="31011507198" fg:w="8697153"/><text x="41.2333%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (56,985,947 samples, 0.08%)</title><rect x="41.1157%" y="405" width="0.0753%" height="15" fill="rgb(208,96,46)" fg:x="31111674958" fg:w="56985947"/><text x="41.3657%" y="415.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (56,985,947 samples, 0.08%)</title><rect x="41.1157%" y="389" width="0.0753%" height="15" fill="rgb(239,3,39)" fg:x="31111674958" fg:w="56985947"/><text x="41.3657%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (377,496,398 samples, 0.50%)</title><rect x="40.9948%" y="437" width="0.4989%" height="15" fill="rgb(233,210,1)" fg:x="31020204351" fg:w="377496398"/><text x="41.2448%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (377,496,398 samples, 0.50%)</title><rect x="40.9948%" y="421" width="0.4989%" height="15" fill="rgb(244,137,37)" fg:x="31020204351" fg:w="377496398"/><text x="41.2448%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (229,039,844 samples, 0.30%)</title><rect x="41.1910%" y="405" width="0.3027%" height="15" fill="rgb(240,136,2)" fg:x="31168660905" fg:w="229039844"/><text x="41.4410%" y="415.50"></text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (229,039,844 samples, 0.30%)</title><rect x="41.1910%" y="389" width="0.3027%" height="15" fill="rgb(239,18,37)" fg:x="31168660905" fg:w="229039844"/><text x="41.4410%" y="399.50"></text></g><g><title>mws5::words::Word::is_fit (153,374,659 samples, 0.20%)</title><rect x="41.2910%" y="373" width="0.2027%" height="15" fill="rgb(218,185,22)" fg:x="31244326090" fg:w="153374659"/><text x="41.5410%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (69,797,010 samples, 0.09%)</title><rect x="41.4015%" y="357" width="0.0922%" height="15" fill="rgb(225,218,4)" fg:x="31327903739" fg:w="69797010"/><text x="41.6515%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (69,797,010 samples, 0.09%)</title><rect x="41.4015%" y="341" width="0.0922%" height="15" fill="rgb(230,182,32)" fg:x="31327903739" fg:w="69797010"/><text x="41.6515%" y="351.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (69,797,010 samples, 0.09%)</title><rect x="41.4015%" y="325" width="0.0922%" height="15" fill="rgb(242,56,43)" fg:x="31327903739" fg:w="69797010"/><text x="41.6515%" y="335.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (69,797,010 samples, 0.09%)</title><rect x="41.4015%" y="309" width="0.0922%" height="15" fill="rgb(233,99,24)" fg:x="31327903739" fg:w="69797010"/><text x="41.6515%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (228,009,614 samples, 0.30%)</title><rect x="42.1776%" y="389" width="0.3013%" height="15" fill="rgb(234,209,42)" fg:x="31915222074" fg:w="228009614"/><text x="42.4276%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (171,052,644 samples, 0.23%)</title><rect x="42.2529%" y="373" width="0.2261%" height="15" fill="rgb(227,7,12)" fg:x="31972179044" fg:w="171052644"/><text x="42.5029%" y="383.50"></text></g><g><title>sched_balance_trigger (8,862,931 samples, 0.01%)</title><rect x="42.4790%" y="277" width="0.0117%" height="15" fill="rgb(245,203,43)" fg:x="32143231688" fg:w="8862931"/><text x="42.7290%" y="287.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (13,276,786 samples, 0.02%)</title><rect x="42.4790%" y="389" width="0.0175%" height="15" fill="rgb(238,205,33)" fg:x="32143231688" fg:w="13276786"/><text x="42.7290%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (13,276,786 samples, 0.02%)</title><rect x="42.4790%" y="373" width="0.0175%" height="15" fill="rgb(231,56,7)" fg:x="32143231688" fg:w="13276786"/><text x="42.7290%" y="383.50"></text></g><g><title>__sysvec_apic_timer_interrupt (13,276,786 samples, 0.02%)</title><rect x="42.4790%" y="357" width="0.0175%" height="15" fill="rgb(244,186,29)" fg:x="32143231688" fg:w="13276786"/><text x="42.7290%" y="367.50"></text></g><g><title>hrtimer_interrupt (13,276,786 samples, 0.02%)</title><rect x="42.4790%" y="341" width="0.0175%" height="15" fill="rgb(234,111,31)" fg:x="32143231688" fg:w="13276786"/><text x="42.7290%" y="351.50"></text></g><g><title>__hrtimer_run_queues (13,276,786 samples, 0.02%)</title><rect x="42.4790%" y="325" width="0.0175%" height="15" fill="rgb(241,149,10)" fg:x="32143231688" fg:w="13276786"/><text x="42.7290%" y="335.50"></text></g><g><title>tick_nohz_handler (13,276,786 samples, 0.02%)</title><rect x="42.4790%" y="309" width="0.0175%" height="15" fill="rgb(249,206,44)" fg:x="32143231688" fg:w="13276786"/><text x="42.7290%" y="319.50"></text></g><g><title>update_process_times (13,276,786 samples, 0.02%)</title><rect x="42.4790%" y="293" width="0.0175%" height="15" fill="rgb(251,153,30)" fg:x="32143231688" fg:w="13276786"/><text x="42.7290%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (332,883,224 samples, 0.44%)</title><rect x="43.7258%" y="341" width="0.4399%" height="15" fill="rgb(239,152,38)" fg:x="33086666069" fg:w="332883224"/><text x="43.9758%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (332,883,224 samples, 0.44%)</title><rect x="43.7258%" y="325" width="0.4399%" height="15" fill="rgb(249,139,47)" fg:x="33086666069" fg:w="332883224"/><text x="43.9758%" y="335.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (332,883,224 samples, 0.44%)</title><rect x="43.7258%" y="309" width="0.4399%" height="15" fill="rgb(244,64,35)" fg:x="33086666069" fg:w="332883224"/><text x="43.9758%" y="319.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (332,883,224 samples, 0.44%)</title><rect x="43.7258%" y="293" width="0.4399%" height="15" fill="rgb(216,46,15)" fg:x="33086666069" fg:w="332883224"/><text x="43.9758%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,021,875,488 samples, 2.67%)</title><rect x="41.4995%" y="421" width="2.6720%" height="15" fill="rgb(250,74,19)" fg:x="31402075642" fg:w="2021875488"/><text x="41.7495%" y="431.50">&lt;c..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2,021,875,488 samples, 2.67%)</title><rect x="41.4995%" y="405" width="2.6720%" height="15" fill="rgb(249,42,33)" fg:x="31402075642" fg:w="2021875488"/><text x="41.7495%" y="415.50">&lt;c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,267,442,656 samples, 1.67%)</title><rect x="42.4965%" y="389" width="1.6750%" height="15" fill="rgb(242,149,17)" fg:x="32156508474" fg:w="1267442656"/><text x="42.7465%" y="399.50"></text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (1,267,442,656 samples, 1.67%)</title><rect x="42.4965%" y="373" width="1.6750%" height="15" fill="rgb(244,29,21)" fg:x="32156508474" fg:w="1267442656"/><text x="42.7465%" y="383.50"></text></g><g><title>mws5::words::Word::is_fit (946,556,612 samples, 1.25%)</title><rect x="42.9206%" y="357" width="1.2509%" height="15" fill="rgb(220,130,37)" fg:x="32477394518" fg:w="946556612"/><text x="43.1706%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,774,435 samples, 0.01%)</title><rect x="44.1829%" y="341" width="0.0116%" height="15" fill="rgb(211,67,2)" fg:x="33432554740" fg:w="8774435"/><text x="44.4329%" y="351.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (8,774,435 samples, 0.01%)</title><rect x="44.1829%" y="325" width="0.0116%" height="15" fill="rgb(235,68,52)" fg:x="33432554740" fg:w="8774435"/><text x="44.4329%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (26,158,776 samples, 0.03%)</title><rect x="44.1715%" y="405" width="0.0346%" height="15" fill="rgb(246,142,3)" fg:x="33423951130" fg:w="26158776"/><text x="44.4215%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (26,158,776 samples, 0.03%)</title><rect x="44.1715%" y="389" width="0.0346%" height="15" fill="rgb(241,25,7)" fg:x="33423951130" fg:w="26158776"/><text x="44.4215%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26,158,776 samples, 0.03%)</title><rect x="44.1715%" y="373" width="0.0346%" height="15" fill="rgb(242,119,39)" fg:x="33423951130" fg:w="26158776"/><text x="44.4215%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26,158,776 samples, 0.03%)</title><rect x="44.1715%" y="357" width="0.0346%" height="15" fill="rgb(241,98,45)" fg:x="33423951130" fg:w="26158776"/><text x="44.4215%" y="367.50"></text></g><g><title>core::iter::adapters::copied::copy_try_fold::_{{closure}} (8,780,731 samples, 0.01%)</title><rect x="44.1945%" y="341" width="0.0116%" height="15" fill="rgb(254,28,30)" fg:x="33441329175" fg:w="8780731"/><text x="44.4445%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (8,780,731 samples, 0.01%)</title><rect x="44.1945%" y="325" width="0.0116%" height="15" fill="rgb(241,142,54)" fg:x="33441329175" fg:w="8780731"/><text x="44.4445%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8,780,731 samples, 0.01%)</title><rect x="44.1945%" y="309" width="0.0116%" height="15" fill="rgb(222,85,15)" fg:x="33441329175" fg:w="8780731"/><text x="44.4445%" y="319.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (8,780,731 samples, 0.01%)</title><rect x="44.1945%" y="293" width="0.0116%" height="15" fill="rgb(210,85,47)" fg:x="33441329175" fg:w="8780731"/><text x="44.4445%" y="303.50"></text></g><g><title>mws5::dict::Dict::is_fit (30,597,411 samples, 0.04%)</title><rect x="44.1715%" y="421" width="0.0404%" height="15" fill="rgb(224,206,25)" fg:x="33423951130" fg:w="30597411"/><text x="44.4215%" y="431.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (295,376,205 samples, 0.39%)</title><rect x="45.3081%" y="357" width="0.3904%" height="15" fill="rgb(243,201,19)" fg:x="34284025852" fg:w="295376205"/><text x="45.5581%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (382,646,826 samples, 0.51%)</title><rect x="45.1986%" y="373" width="0.5057%" height="15" fill="rgb(236,59,4)" fg:x="34201142744" fg:w="382646826"/><text x="45.4486%" y="383.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (8,311,034 samples, 0.01%)</title><rect x="46.2345%" y="341" width="0.0110%" height="15" fill="rgb(254,179,45)" fg:x="34984977213" fg:w="8311034"/><text x="46.4845%" y="351.50"></text></g><g><title>sysvec_apic_timer_interrupt (8,311,034 samples, 0.01%)</title><rect x="46.2345%" y="325" width="0.0110%" height="15" fill="rgb(226,14,10)" fg:x="34984977213" fg:w="8311034"/><text x="46.4845%" y="335.50"></text></g><g><title>__sysvec_apic_timer_interrupt (8,311,034 samples, 0.01%)</title><rect x="46.2345%" y="309" width="0.0110%" height="15" fill="rgb(244,27,41)" fg:x="34984977213" fg:w="8311034"/><text x="46.4845%" y="319.50"></text></g><g><title>hrtimer_interrupt (8,311,034 samples, 0.01%)</title><rect x="46.2345%" y="293" width="0.0110%" height="15" fill="rgb(235,35,32)" fg:x="34984977213" fg:w="8311034"/><text x="46.4845%" y="303.50"></text></g><g><title>__hrtimer_run_queues (8,311,034 samples, 0.01%)</title><rect x="46.2345%" y="277" width="0.0110%" height="15" fill="rgb(218,68,31)" fg:x="34984977213" fg:w="8311034"/><text x="46.4845%" y="287.50"></text></g><g><title>tick_nohz_handler (8,311,034 samples, 0.01%)</title><rect x="46.2345%" y="261" width="0.0110%" height="15" fill="rgb(207,120,37)" fg:x="34984977213" fg:w="8311034"/><text x="46.4845%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,502,694,216 samples, 3.31%)</title><rect x="44.2178%" y="405" width="3.3074%" height="15" fill="rgb(227,98,0)" fg:x="33458979459" fg:w="2502694216"/><text x="44.4678%" y="415.50">&lt;co..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2,502,694,216 samples, 3.31%)</title><rect x="44.2178%" y="389" width="3.3074%" height="15" fill="rgb(207,7,3)" fg:x="33458979459" fg:w="2502694216"/><text x="44.4678%" y="399.50">&lt;co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,377,884,105 samples, 1.82%)</title><rect x="45.7043%" y="373" width="1.8209%" height="15" fill="rgb(206,98,19)" fg:x="34583789570" fg:w="1377884105"/><text x="45.9543%" y="383.50">c..</text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (1,377,884,105 samples, 1.82%)</title><rect x="45.7043%" y="357" width="1.8209%" height="15" fill="rgb(217,5,26)" fg:x="34583789570" fg:w="1377884105"/><text x="45.9543%" y="367.50">m..</text></g><g><title>mws5::words::Word::is_fit (968,385,428 samples, 1.28%)</title><rect x="46.2455%" y="341" width="1.2798%" height="15" fill="rgb(235,190,38)" fg:x="34993288247" fg:w="968385428"/><text x="46.4955%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (352,732,428 samples, 0.47%)</title><rect x="47.0591%" y="325" width="0.4662%" height="15" fill="rgb(247,86,24)" fg:x="35608941247" fg:w="352732428"/><text x="47.3091%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (352,732,428 samples, 0.47%)</title><rect x="47.0591%" y="309" width="0.4662%" height="15" fill="rgb(205,101,16)" fg:x="35608941247" fg:w="352732428"/><text x="47.3091%" y="319.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (352,732,428 samples, 0.47%)</title><rect x="47.0591%" y="293" width="0.4662%" height="15" fill="rgb(246,168,33)" fg:x="35608941247" fg:w="352732428"/><text x="47.3091%" y="303.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (352,732,428 samples, 0.47%)</title><rect x="47.0591%" y="277" width="0.4662%" height="15" fill="rgb(231,114,1)" fg:x="35608941247" fg:w="352732428"/><text x="47.3091%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (13,242,749 samples, 0.02%)</title><rect x="47.5310%" y="389" width="0.0175%" height="15" fill="rgb(207,184,53)" fg:x="35966043415" fg:w="13242749"/><text x="47.7810%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (13,242,749 samples, 0.02%)</title><rect x="47.5310%" y="373" width="0.0175%" height="15" fill="rgb(224,95,51)" fg:x="35966043415" fg:w="13242749"/><text x="47.7810%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13,242,749 samples, 0.02%)</title><rect x="47.5310%" y="357" width="0.0175%" height="15" fill="rgb(212,188,45)" fg:x="35966043415" fg:w="13242749"/><text x="47.7810%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13,242,749 samples, 0.02%)</title><rect x="47.5310%" y="341" width="0.0175%" height="15" fill="rgb(223,154,38)" fg:x="35966043415" fg:w="13242749"/><text x="47.7810%" y="351.50"></text></g><g><title>core::iter::adapters::copied::copy_try_fold::_{{closure}} (8,814,878 samples, 0.01%)</title><rect x="47.5369%" y="325" width="0.0116%" height="15" fill="rgb(251,22,52)" fg:x="35970471286" fg:w="8814878"/><text x="47.7869%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (8,814,878 samples, 0.01%)</title><rect x="47.5369%" y="309" width="0.0116%" height="15" fill="rgb(229,209,22)" fg:x="35970471286" fg:w="8814878"/><text x="47.7869%" y="319.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8,814,878 samples, 0.01%)</title><rect x="47.5369%" y="293" width="0.0116%" height="15" fill="rgb(234,138,34)" fg:x="35970471286" fg:w="8814878"/><text x="47.7869%" y="303.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (8,814,878 samples, 0.01%)</title><rect x="47.5369%" y="277" width="0.0116%" height="15" fill="rgb(212,95,11)" fg:x="35970471286" fg:w="8814878"/><text x="47.7869%" y="287.50"></text></g><g><title>mws5::dict::Dict::is_fit (26,240,917 samples, 0.03%)</title><rect x="47.5252%" y="405" width="0.0347%" height="15" fill="rgb(240,179,47)" fg:x="35961673675" fg:w="26240917"/><text x="47.7752%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;mws5::words::Word&gt;&gt; (8,628,428 samples, 0.01%)</title><rect x="47.5485%" y="389" width="0.0114%" height="15" fill="rgb(240,163,11)" fg:x="35979286164" fg:w="8628428"/><text x="47.7985%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;mws5::words::Word,std::hash::random::RandomState&gt;&gt; (8,628,428 samples, 0.01%)</title><rect x="47.5485%" y="373" width="0.0114%" height="15" fill="rgb(236,37,12)" fg:x="35979286164" fg:w="8628428"/><text x="47.7985%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;mws5::words::Word,(),std::hash::random::RandomState&gt;&gt; (8,628,428 samples, 0.01%)</title><rect x="47.5485%" y="357" width="0.0114%" height="15" fill="rgb(232,164,16)" fg:x="35979286164" fg:w="8628428"/><text x="47.7985%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(mws5::words::Word,())&gt;&gt; (8,628,428 samples, 0.01%)</title><rect x="47.5485%" y="341" width="0.0114%" height="15" fill="rgb(244,205,15)" fg:x="35979286164" fg:w="8628428"/><text x="47.7985%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,628,428 samples, 0.01%)</title><rect x="47.5485%" y="325" width="0.0114%" height="15" fill="rgb(223,117,47)" fg:x="35979286164" fg:w="8628428"/><text x="47.7985%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (8,628,428 samples, 0.01%)</title><rect x="47.5485%" y="309" width="0.0114%" height="15" fill="rgb(244,107,35)" fg:x="35979286164" fg:w="8628428"/><text x="47.7985%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (8,628,428 samples, 0.01%)</title><rect x="47.5485%" y="293" width="0.0114%" height="15" fill="rgb(205,140,8)" fg:x="35979286164" fg:w="8628428"/><text x="47.7985%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8,628,428 samples, 0.01%)</title><rect x="47.5485%" y="277" width="0.0114%" height="15" fill="rgb(228,84,46)" fg:x="35979286164" fg:w="8628428"/><text x="47.7985%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (8,628,428 samples, 0.01%)</title><rect x="47.5485%" y="261" width="0.0114%" height="15" fill="rgb(254,188,9)" fg:x="35979286164" fg:w="8628428"/><text x="47.7985%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (144,767,209 samples, 0.19%)</title><rect x="47.8756%" y="357" width="0.1913%" height="15" fill="rgb(206,112,54)" fg:x="36226826334" fg:w="144767209"/><text x="48.1256%" y="367.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (100,831,366 samples, 0.13%)</title><rect x="47.9337%" y="341" width="0.1333%" height="15" fill="rgb(216,84,49)" fg:x="36270762177" fg:w="100831366"/><text x="48.1837%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (990,448,465 samples, 1.31%)</title><rect x="47.5599%" y="389" width="1.3089%" height="15" fill="rgb(214,194,35)" fg:x="35987914592" fg:w="990448465"/><text x="47.8099%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (990,448,465 samples, 1.31%)</title><rect x="47.5599%" y="373" width="1.3089%" height="15" fill="rgb(249,28,3)" fg:x="35987914592" fg:w="990448465"/><text x="47.8099%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (606,769,514 samples, 0.80%)</title><rect x="48.0670%" y="357" width="0.8019%" height="15" fill="rgb(222,56,52)" fg:x="36371593543" fg:w="606769514"/><text x="48.3170%" y="367.50"></text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (606,769,514 samples, 0.80%)</title><rect x="48.0670%" y="341" width="0.8019%" height="15" fill="rgb(245,217,50)" fg:x="36371593543" fg:w="606769514"/><text x="48.3170%" y="351.50"></text></g><g><title>mws5::words::Word::is_fit (405,170,876 samples, 0.54%)</title><rect x="48.3334%" y="325" width="0.5355%" height="15" fill="rgb(213,201,24)" fg:x="36573192181" fg:w="405170876"/><text x="48.5834%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (144,500,809 samples, 0.19%)</title><rect x="48.6779%" y="309" width="0.1910%" height="15" fill="rgb(248,116,28)" fg:x="36833862248" fg:w="144500809"/><text x="48.9279%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (144,500,809 samples, 0.19%)</title><rect x="48.6779%" y="293" width="0.1910%" height="15" fill="rgb(219,72,43)" fg:x="36833862248" fg:w="144500809"/><text x="48.9279%" y="303.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (144,500,809 samples, 0.19%)</title><rect x="48.6779%" y="277" width="0.1910%" height="15" fill="rgb(209,138,14)" fg:x="36833862248" fg:w="144500809"/><text x="48.9279%" y="287.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (144,500,809 samples, 0.19%)</title><rect x="48.6779%" y="261" width="0.1910%" height="15" fill="rgb(222,18,33)" fg:x="36833862248" fg:w="144500809"/><text x="48.9279%" y="271.50"></text></g><g><title>mws5::dict::Dict::is_fit (7,641,131 samples, 0.01%)</title><rect x="48.8688%" y="389" width="0.0101%" height="15" fill="rgb(213,199,7)" fg:x="36978363057" fg:w="7641131"/><text x="49.1188%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,641,131 samples, 0.01%)</title><rect x="48.8688%" y="373" width="0.0101%" height="15" fill="rgb(250,110,10)" fg:x="36978363057" fg:w="7641131"/><text x="49.1188%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (7,641,131 samples, 0.01%)</title><rect x="48.8688%" y="357" width="0.0101%" height="15" fill="rgb(248,123,6)" fg:x="36978363057" fg:w="7641131"/><text x="49.1188%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7,641,131 samples, 0.01%)</title><rect x="48.8688%" y="341" width="0.0101%" height="15" fill="rgb(206,91,31)" fg:x="36978363057" fg:w="7641131"/><text x="49.1188%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7,641,131 samples, 0.01%)</title><rect x="48.8688%" y="325" width="0.0101%" height="15" fill="rgb(211,154,13)" fg:x="36978363057" fg:w="7641131"/><text x="49.1188%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17,600,807 samples, 0.02%)</title><rect x="48.9255%" y="341" width="0.0233%" height="15" fill="rgb(225,148,7)" fg:x="37021217911" fg:w="17600807"/><text x="49.1755%" y="351.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (8,772,099 samples, 0.01%)</title><rect x="48.9371%" y="325" width="0.0116%" height="15" fill="rgb(220,160,43)" fg:x="37030046619" fg:w="8772099"/><text x="49.1871%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (113,487,220 samples, 0.15%)</title><rect x="48.8789%" y="373" width="0.1500%" height="15" fill="rgb(213,52,39)" fg:x="36986004188" fg:w="113487220"/><text x="49.1289%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (113,487,220 samples, 0.15%)</title><rect x="48.8789%" y="357" width="0.1500%" height="15" fill="rgb(243,137,7)" fg:x="36986004188" fg:w="113487220"/><text x="49.1289%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (60,672,690 samples, 0.08%)</title><rect x="48.9487%" y="341" width="0.0802%" height="15" fill="rgb(230,79,13)" fg:x="37038818718" fg:w="60672690"/><text x="49.1987%" y="351.50"></text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (60,672,690 samples, 0.08%)</title><rect x="48.9487%" y="325" width="0.0802%" height="15" fill="rgb(247,105,23)" fg:x="37038818718" fg:w="60672690"/><text x="49.1987%" y="335.50"></text></g><g><title>mws5::words::Word::is_fit (39,460,125 samples, 0.05%)</title><rect x="48.9768%" y="309" width="0.0521%" height="15" fill="rgb(223,179,41)" fg:x="37060031283" fg:w="39460125"/><text x="49.2268%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,756,722 samples, 0.01%)</title><rect x="49.0173%" y="293" width="0.0116%" height="15" fill="rgb(218,9,34)" fg:x="37090734686" fg:w="8756722"/><text x="49.2673%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (8,756,722 samples, 0.01%)</title><rect x="49.0173%" y="277" width="0.0116%" height="15" fill="rgb(222,106,8)" fg:x="37090734686" fg:w="8756722"/><text x="49.2673%" y="287.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,756,722 samples, 0.01%)</title><rect x="49.0173%" y="261" width="0.0116%" height="15" fill="rgb(211,220,0)" fg:x="37090734686" fg:w="8756722"/><text x="49.2673%" y="271.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (8,756,722 samples, 0.01%)</title><rect x="49.0173%" y="245" width="0.0116%" height="15" fill="rgb(229,52,16)" fg:x="37090734686" fg:w="8756722"/><text x="49.2673%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (17,555,514 samples, 0.02%)</title><rect x="49.0348%" y="357" width="0.0232%" height="15" fill="rgb(212,155,18)" fg:x="37103913989" fg:w="17555514"/><text x="49.2848%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (17,555,514 samples, 0.02%)</title><rect x="49.0348%" y="341" width="0.0232%" height="15" fill="rgb(242,21,14)" fg:x="37103913989" fg:w="17555514"/><text x="49.2848%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (17,555,514 samples, 0.02%)</title><rect x="49.0348%" y="325" width="0.0232%" height="15" fill="rgb(222,19,48)" fg:x="37103913989" fg:w="17555514"/><text x="49.2848%" y="335.50"></text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (17,555,514 samples, 0.02%)</title><rect x="49.0348%" y="309" width="0.0232%" height="15" fill="rgb(232,45,27)" fg:x="37103913989" fg:w="17555514"/><text x="49.2848%" y="319.50"></text></g><g><title>mws5::words::Word::is_fit (8,814,032 samples, 0.01%)</title><rect x="49.0463%" y="293" width="0.0116%" height="15" fill="rgb(249,103,42)" fg:x="37112655471" fg:w="8814032"/><text x="49.2963%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,814,032 samples, 0.01%)</title><rect x="49.0463%" y="277" width="0.0116%" height="15" fill="rgb(246,81,33)" fg:x="37112655471" fg:w="8814032"/><text x="49.2963%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (8,814,032 samples, 0.01%)</title><rect x="49.0463%" y="261" width="0.0116%" height="15" fill="rgb(252,33,42)" fg:x="37112655471" fg:w="8814032"/><text x="49.2963%" y="271.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,814,032 samples, 0.01%)</title><rect x="49.0463%" y="245" width="0.0116%" height="15" fill="rgb(209,212,41)" fg:x="37112655471" fg:w="8814032"/><text x="49.2963%" y="255.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (8,814,032 samples, 0.01%)</title><rect x="49.0463%" y="229" width="0.0116%" height="15" fill="rgb(207,154,6)" fg:x="37112655471" fg:w="8814032"/><text x="49.2963%" y="239.50"></text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (35,074,297 samples, 0.05%)</title><rect x="49.0348%" y="373" width="0.0464%" height="15" fill="rgb(223,64,47)" fg:x="37103913989" fg:w="35074297"/><text x="49.2848%" y="383.50"></text></g><g><title>mws5::search::best_pos (17,518,783 samples, 0.02%)</title><rect x="49.0580%" y="357" width="0.0232%" height="15" fill="rgb(211,161,38)" fg:x="37121469503" fg:w="17518783"/><text x="49.3080%" y="367.50"></text></g><g><title>mws5::dict::Dict::match_count (17,518,783 samples, 0.02%)</title><rect x="49.0580%" y="341" width="0.0232%" height="15" fill="rgb(219,138,40)" fg:x="37121469503" fg:w="17518783"/><text x="49.3080%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (17,518,783 samples, 0.02%)</title><rect x="49.0580%" y="325" width="0.0232%" height="15" fill="rgb(241,228,46)" fg:x="37121469503" fg:w="17518783"/><text x="49.3080%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (17,518,783 samples, 0.02%)</title><rect x="49.0580%" y="309" width="0.0232%" height="15" fill="rgb(223,209,38)" fg:x="37121469503" fg:w="17518783"/><text x="49.3080%" y="319.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (17,518,783 samples, 0.02%)</title><rect x="49.0580%" y="293" width="0.0232%" height="15" fill="rgb(236,164,45)" fg:x="37121469503" fg:w="17518783"/><text x="49.3080%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,518,783 samples, 0.02%)</title><rect x="49.0580%" y="277" width="0.0232%" height="15" fill="rgb(231,15,5)" fg:x="37121469503" fg:w="17518783"/><text x="49.3080%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,518,783 samples, 0.02%)</title><rect x="49.0580%" y="261" width="0.0232%" height="15" fill="rgb(252,35,15)" fg:x="37121469503" fg:w="17518783"/><text x="49.3080%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,518,783 samples, 0.02%)</title><rect x="49.0580%" y="245" width="0.0232%" height="15" fill="rgb(248,181,18)" fg:x="37121469503" fg:w="17518783"/><text x="49.3080%" y="255.50"></text></g><g><title>core::iter::adapters::copied::copy_fold::_{{closure}} (17,518,783 samples, 0.02%)</title><rect x="49.0580%" y="229" width="0.0232%" height="15" fill="rgb(233,39,42)" fg:x="37121469503" fg:w="17518783"/><text x="49.3080%" y="239.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (17,518,783 samples, 0.02%)</title><rect x="49.0580%" y="213" width="0.0232%" height="15" fill="rgb(238,110,33)" fg:x="37121469503" fg:w="17518783"/><text x="49.3080%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::_{{closure}} (17,518,783 samples, 0.02%)</title><rect x="49.0580%" y="197" width="0.0232%" height="15" fill="rgb(233,195,10)" fg:x="37121469503" fg:w="17518783"/><text x="49.3080%" y="207.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (13,096,359 samples, 0.02%)</title><rect x="49.0638%" y="181" width="0.0173%" height="15" fill="rgb(254,105,3)" fg:x="37125891927" fg:w="13096359"/><text x="49.3138%" y="191.50"></text></g><g><title>mws5::words::Word::is_fit (13,096,359 samples, 0.02%)</title><rect x="49.0638%" y="165" width="0.0173%" height="15" fill="rgb(221,225,9)" fg:x="37125891927" fg:w="13096359"/><text x="49.3138%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::_{{closure}} (118,095,176 samples, 0.16%)</title><rect x="49.1043%" y="213" width="0.1561%" height="15" fill="rgb(224,227,45)" fg:x="37156503866" fg:w="118095176"/><text x="49.3543%" y="223.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (105,080,767 samples, 0.14%)</title><rect x="49.1215%" y="197" width="0.1389%" height="15" fill="rgb(229,198,43)" fg:x="37169518275" fg:w="105080767"/><text x="49.3715%" y="207.50"></text></g><g><title>mws5::words::Word::is_fit (91,893,658 samples, 0.12%)</title><rect x="49.1389%" y="181" width="0.1214%" height="15" fill="rgb(206,209,35)" fg:x="37182705384" fg:w="91893658"/><text x="49.3889%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (48,265,320 samples, 0.06%)</title><rect x="49.1965%" y="165" width="0.0638%" height="15" fill="rgb(245,195,53)" fg:x="37226333722" fg:w="48265320"/><text x="49.4465%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (48,265,320 samples, 0.06%)</title><rect x="49.1965%" y="149" width="0.0638%" height="15" fill="rgb(240,92,26)" fg:x="37226333722" fg:w="48265320"/><text x="49.4465%" y="159.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (48,265,320 samples, 0.06%)</title><rect x="49.1965%" y="133" width="0.0638%" height="15" fill="rgb(207,40,23)" fg:x="37226333722" fg:w="48265320"/><text x="49.4465%" y="143.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (48,265,320 samples, 0.06%)</title><rect x="49.1965%" y="117" width="0.0638%" height="15" fill="rgb(223,111,35)" fg:x="37226333722" fg:w="48265320"/><text x="49.4465%" y="127.50"></text></g><g><title>core::iter::adapters::copied::copy_fold::_{{closure}} (135,626,283 samples, 0.18%)</title><rect x="49.1043%" y="245" width="0.1792%" height="15" fill="rgb(229,147,28)" fg:x="37156503866" fg:w="135626283"/><text x="49.3543%" y="255.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (135,626,283 samples, 0.18%)</title><rect x="49.1043%" y="229" width="0.1792%" height="15" fill="rgb(211,29,28)" fg:x="37156503866" fg:w="135626283"/><text x="49.3543%" y="239.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (17,531,107 samples, 0.02%)</title><rect x="49.2603%" y="213" width="0.0232%" height="15" fill="rgb(228,72,33)" fg:x="37274599042" fg:w="17531107"/><text x="49.5103%" y="223.50"></text></g><g><title>mws5::search::best_pos (157,393,863 samples, 0.21%)</title><rect x="49.0811%" y="373" width="0.2080%" height="15" fill="rgb(205,214,31)" fg:x="37138988286" fg:w="157393863"/><text x="49.3311%" y="383.50"></text></g><g><title>mws5::dict::Dict::match_count (157,393,863 samples, 0.21%)</title><rect x="49.0811%" y="357" width="0.2080%" height="15" fill="rgb(224,111,15)" fg:x="37138988286" fg:w="157393863"/><text x="49.3311%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (157,393,863 samples, 0.21%)</title><rect x="49.0811%" y="341" width="0.2080%" height="15" fill="rgb(253,21,26)" fg:x="37138988286" fg:w="157393863"/><text x="49.3311%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (157,393,863 samples, 0.21%)</title><rect x="49.0811%" y="325" width="0.2080%" height="15" fill="rgb(245,139,43)" fg:x="37138988286" fg:w="157393863"/><text x="49.3311%" y="335.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (157,393,863 samples, 0.21%)</title><rect x="49.0811%" y="309" width="0.2080%" height="15" fill="rgb(252,170,7)" fg:x="37138988286" fg:w="157393863"/><text x="49.3311%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (157,393,863 samples, 0.21%)</title><rect x="49.0811%" y="293" width="0.2080%" height="15" fill="rgb(231,118,14)" fg:x="37138988286" fg:w="157393863"/><text x="49.3311%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (157,393,863 samples, 0.21%)</title><rect x="49.0811%" y="277" width="0.2080%" height="15" fill="rgb(238,83,0)" fg:x="37138988286" fg:w="157393863"/><text x="49.3311%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (157,393,863 samples, 0.21%)</title><rect x="49.0811%" y="261" width="0.2080%" height="15" fill="rgb(221,39,39)" fg:x="37138988286" fg:w="157393863"/><text x="49.3311%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (74,823,020 samples, 0.10%)</title><rect x="49.2891%" y="341" width="0.0989%" height="15" fill="rgb(222,119,46)" fg:x="37296382149" fg:w="74823020"/><text x="49.5391%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (74,823,020 samples, 0.10%)</title><rect x="49.2891%" y="325" width="0.0989%" height="15" fill="rgb(222,165,49)" fg:x="37296382149" fg:w="74823020"/><text x="49.5391%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (74,823,020 samples, 0.10%)</title><rect x="49.2891%" y="309" width="0.0989%" height="15" fill="rgb(219,113,52)" fg:x="37296382149" fg:w="74823020"/><text x="49.5391%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (74,823,020 samples, 0.10%)</title><rect x="49.2891%" y="293" width="0.0989%" height="15" fill="rgb(214,7,15)" fg:x="37296382149" fg:w="74823020"/><text x="49.5391%" y="303.50"></text></g><g><title>core::iter::adapters::copied::copy_try_fold::_{{closure}} (52,897,289 samples, 0.07%)</title><rect x="49.3181%" y="277" width="0.0699%" height="15" fill="rgb(235,32,4)" fg:x="37318307880" fg:w="52897289"/><text x="49.5681%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (52,897,289 samples, 0.07%)</title><rect x="49.3181%" y="261" width="0.0699%" height="15" fill="rgb(238,90,54)" fg:x="37318307880" fg:w="52897289"/><text x="49.5681%" y="271.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (52,897,289 samples, 0.07%)</title><rect x="49.3181%" y="245" width="0.0699%" height="15" fill="rgb(213,208,19)" fg:x="37318307880" fg:w="52897289"/><text x="49.5681%" y="255.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (52,897,289 samples, 0.07%)</title><rect x="49.3181%" y="229" width="0.0699%" height="15" fill="rgb(233,156,4)" fg:x="37318307880" fg:w="52897289"/><text x="49.5681%" y="239.50"></text></g><g><title>mws5::words::Word::is_fit (44,062,663 samples, 0.06%)</title><rect x="49.3298%" y="213" width="0.0582%" height="15" fill="rgb(207,194,5)" fg:x="37327142506" fg:w="44062663"/><text x="49.5798%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (17,669,692 samples, 0.02%)</title><rect x="49.3646%" y="197" width="0.0234%" height="15" fill="rgb(206,111,30)" fg:x="37353535477" fg:w="17669692"/><text x="49.6146%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (17,669,692 samples, 0.02%)</title><rect x="49.3646%" y="181" width="0.0234%" height="15" fill="rgb(243,70,54)" fg:x="37353535477" fg:w="17669692"/><text x="49.6146%" y="191.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17,669,692 samples, 0.02%)</title><rect x="49.3646%" y="165" width="0.0234%" height="15" fill="rgb(242,28,8)" fg:x="37353535477" fg:w="17669692"/><text x="49.6146%" y="175.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (17,669,692 samples, 0.02%)</title><rect x="49.3646%" y="149" width="0.0234%" height="15" fill="rgb(219,106,18)" fg:x="37353535477" fg:w="17669692"/><text x="49.6146%" y="159.50"></text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (389,598,909 samples, 0.51%)</title><rect x="48.8789%" y="389" width="0.5149%" height="15" fill="rgb(244,222,10)" fg:x="36986004188" fg:w="389598909"/><text x="49.1289%" y="399.50"></text></g><g><title>mws5::search::cross_fit (79,220,948 samples, 0.10%)</title><rect x="49.2891%" y="373" width="0.1047%" height="15" fill="rgb(236,179,52)" fg:x="37296382149" fg:w="79220948"/><text x="49.5391%" y="383.50"></text></g><g><title>mws5::dict::Dict::is_fit (79,220,948 samples, 0.10%)</title><rect x="49.2891%" y="357" width="0.1047%" height="15" fill="rgb(213,23,39)" fg:x="37296382149" fg:w="79220948"/><text x="49.5391%" y="367.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (12,965,784 samples, 0.02%)</title><rect x="49.3996%" y="357" width="0.0171%" height="15" fill="rgb(238,48,10)" fg:x="37380013909" fg:w="12965784"/><text x="49.6496%" y="367.50"></text></g><g><title>mws5::words::Word::is_fit (8,532,840 samples, 0.01%)</title><rect x="49.4055%" y="341" width="0.0113%" height="15" fill="rgb(251,196,23)" fg:x="37384446853" fg:w="8532840"/><text x="49.6555%" y="351.50"></text></g><g><title>&lt;caches::KeyRef&lt;K&gt; as core::hash::Hash&gt;::hash (8,458,273 samples, 0.01%)</title><rect x="49.6802%" y="197" width="0.0112%" height="15" fill="rgb(250,152,24)" fg:x="37592282908" fg:w="8458273"/><text x="49.9302%" y="207.50"></text></g><g><title>&lt;mws5::words::Word as core::hash::Hash&gt;::hash (8,458,273 samples, 0.01%)</title><rect x="49.6802%" y="181" width="0.0112%" height="15" fill="rgb(209,150,17)" fg:x="37592282908" fg:w="8458273"/><text x="49.9302%" y="191.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (8,458,273 samples, 0.01%)</title><rect x="49.6802%" y="165" width="0.0112%" height="15" fill="rgb(234,202,34)" fg:x="37592282908" fg:w="8458273"/><text x="49.9302%" y="175.50"></text></g><g><title>core::hash::Hasher::write_u32 (8,458,273 samples, 0.01%)</title><rect x="49.6802%" y="149" width="0.0112%" height="15" fill="rgb(253,148,53)" fg:x="37592282908" fg:w="8458273"/><text x="49.9302%" y="159.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (8,458,273 samples, 0.01%)</title><rect x="49.6802%" y="133" width="0.0112%" height="15" fill="rgb(218,129,16)" fg:x="37592282908" fg:w="8458273"/><text x="49.9302%" y="143.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8,458,273 samples, 0.01%)</title><rect x="49.6802%" y="117" width="0.0112%" height="15" fill="rgb(216,85,19)" fg:x="37592282908" fg:w="8458273"/><text x="49.9302%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8,458,273 samples, 0.01%)</title><rect x="49.6802%" y="101" width="0.0112%" height="15" fill="rgb(235,228,7)" fg:x="37592282908" fg:w="8458273"/><text x="49.9302%" y="111.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (313,389,406 samples, 0.41%)</title><rect x="50.3627%" y="181" width="0.4142%" height="15" fill="rgb(245,175,0)" fg:x="38108744180" fg:w="313389406"/><text x="50.6127%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (313,389,406 samples, 0.41%)</title><rect x="50.3627%" y="165" width="0.4142%" height="15" fill="rgb(208,168,36)" fg:x="38108744180" fg:w="313389406"/><text x="50.6127%" y="175.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (313,389,406 samples, 0.41%)</title><rect x="50.3627%" y="149" width="0.4142%" height="15" fill="rgb(246,171,24)" fg:x="38108744180" fg:w="313389406"/><text x="50.6127%" y="159.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (313,389,406 samples, 0.41%)</title><rect x="50.3627%" y="133" width="0.4142%" height="15" fill="rgb(215,142,24)" fg:x="38108744180" fg:w="313389406"/><text x="50.6127%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::_{{closure}} (985,294,476 samples, 1.30%)</title><rect x="49.4805%" y="229" width="1.3021%" height="15" fill="rgb(250,187,7)" fg:x="37441233101" fg:w="985294476"/><text x="49.7305%" y="239.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (971,996,080 samples, 1.28%)</title><rect x="49.4981%" y="213" width="1.2845%" height="15" fill="rgb(228,66,33)" fg:x="37454531497" fg:w="971996080"/><text x="49.7481%" y="223.50"></text></g><g><title>mws5::words::Word::is_fit (821,649,825 samples, 1.09%)</title><rect x="49.6968%" y="197" width="1.0859%" height="15" fill="rgb(234,215,21)" fg:x="37604877752" fg:w="821649825"/><text x="49.9468%" y="207.50"></text></g><g><title>core::iter::adapters::copied::copy_fold::_{{closure}} (1,046,218,598 samples, 1.38%)</title><rect x="49.4805%" y="261" width="1.3826%" height="15" fill="rgb(222,191,20)" fg:x="37441233101" fg:w="1046218598"/><text x="49.7305%" y="271.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,046,218,598 samples, 1.38%)</title><rect x="49.4805%" y="245" width="1.3826%" height="15" fill="rgb(245,79,54)" fg:x="37441233101" fg:w="1046218598"/><text x="49.7305%" y="255.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (60,924,122 samples, 0.08%)</title><rect x="50.7827%" y="229" width="0.0805%" height="15" fill="rgb(240,10,37)" fg:x="38426527577" fg:w="60924122"/><text x="51.0327%" y="239.50"></text></g><g><title>mws5::search::best_pos (1,177,071,398 samples, 1.56%)</title><rect x="49.3938%" y="389" width="1.5556%" height="15" fill="rgb(214,192,32)" fg:x="37375603097" fg:w="1177071398"/><text x="49.6438%" y="399.50"></text></g><g><title>mws5::dict::Dict::match_count (1,172,660,586 samples, 1.55%)</title><rect x="49.3996%" y="373" width="1.5497%" height="15" fill="rgb(209,36,54)" fg:x="37380013909" fg:w="1172660586"/><text x="49.6496%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1,155,297,403 samples, 1.53%)</title><rect x="49.4226%" y="357" width="1.5268%" height="15" fill="rgb(220,10,11)" fg:x="37397377092" fg:w="1155297403"/><text x="49.6726%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,155,297,403 samples, 1.53%)</title><rect x="49.4226%" y="341" width="1.5268%" height="15" fill="rgb(221,106,17)" fg:x="37397377092" fg:w="1155297403"/><text x="49.6726%" y="351.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,155,297,403 samples, 1.53%)</title><rect x="49.4226%" y="325" width="1.5268%" height="15" fill="rgb(251,142,44)" fg:x="37397377092" fg:w="1155297403"/><text x="49.6726%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,155,297,403 samples, 1.53%)</title><rect x="49.4226%" y="309" width="1.5268%" height="15" fill="rgb(238,13,15)" fg:x="37397377092" fg:w="1155297403"/><text x="49.6726%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,155,297,403 samples, 1.53%)</title><rect x="49.4226%" y="293" width="1.5268%" height="15" fill="rgb(208,107,27)" fg:x="37397377092" fg:w="1155297403"/><text x="49.6726%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,155,297,403 samples, 1.53%)</title><rect x="49.4226%" y="277" width="1.5268%" height="15" fill="rgb(205,136,37)" fg:x="37397377092" fg:w="1155297403"/><text x="49.6726%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (65,222,796 samples, 0.09%)</title><rect x="50.8632%" y="261" width="0.0862%" height="15" fill="rgb(250,205,27)" fg:x="38487451699" fg:w="65222796"/><text x="51.1132%" y="271.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (69,313,031 samples, 0.09%)</title><rect x="51.4137%" y="277" width="0.0916%" height="15" fill="rgb(210,80,43)" fg:x="38904044499" fg:w="69313031"/><text x="51.6637%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (69,322,901 samples, 0.09%)</title><rect x="51.4137%" y="293" width="0.0916%" height="15" fill="rgb(247,160,36)" fg:x="38904044499" fg:w="69322901"/><text x="51.6637%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,679,317,687 samples, 2.22%)</title><rect x="50.9494%" y="357" width="2.2193%" height="15" fill="rgb(234,13,49)" fg:x="38552674495" fg:w="1679317687"/><text x="51.1994%" y="367.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find (1,679,317,687 samples, 2.22%)</title><rect x="50.9494%" y="341" width="2.2193%" height="15" fill="rgb(234,122,0)" fg:x="38552674495" fg:w="1679317687"/><text x="51.1994%" y="351.50">c..</text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,679,317,687 samples, 2.22%)</title><rect x="50.9494%" y="325" width="2.2193%" height="15" fill="rgb(207,146,38)" fg:x="38552674495" fg:w="1679317687"/><text x="51.1994%" y="335.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,679,317,687 samples, 2.22%)</title><rect x="50.9494%" y="309" width="2.2193%" height="15" fill="rgb(207,177,25)" fg:x="38552674495" fg:w="1679317687"/><text x="51.1994%" y="319.50">c..</text></g><g><title>core::iter::adapters::copied::copy_try_fold::_{{closure}} (1,258,624,782 samples, 1.66%)</title><rect x="51.5053%" y="293" width="1.6633%" height="15" fill="rgb(211,178,42)" fg:x="38973367400" fg:w="1258624782"/><text x="51.7553%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (1,258,624,782 samples, 1.66%)</title><rect x="51.5053%" y="277" width="1.6633%" height="15" fill="rgb(230,69,54)" fg:x="38973367400" fg:w="1258624782"/><text x="51.7553%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,258,624,782 samples, 1.66%)</title><rect x="51.5053%" y="261" width="1.6633%" height="15" fill="rgb(214,135,41)" fg:x="38973367400" fg:w="1258624782"/><text x="51.7553%" y="271.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (1,258,624,782 samples, 1.66%)</title><rect x="51.5053%" y="245" width="1.6633%" height="15" fill="rgb(237,67,25)" fg:x="38973367400" fg:w="1258624782"/><text x="51.7553%" y="255.50"></text></g><g><title>mws5::words::Word::is_fit (1,067,824,505 samples, 1.41%)</title><rect x="51.7575%" y="229" width="1.4112%" height="15" fill="rgb(222,189,50)" fg:x="39164167677" fg:w="1067824505"/><text x="52.0075%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (393,783,935 samples, 0.52%)</title><rect x="52.6483%" y="213" width="0.5204%" height="15" fill="rgb(245,148,34)" fg:x="39838208247" fg:w="393783935"/><text x="52.8983%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (393,783,935 samples, 0.52%)</title><rect x="52.6483%" y="197" width="0.5204%" height="15" fill="rgb(222,29,6)" fg:x="39838208247" fg:w="393783935"/><text x="52.8983%" y="207.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (393,783,935 samples, 0.52%)</title><rect x="52.6483%" y="181" width="0.5204%" height="15" fill="rgb(221,189,43)" fg:x="39838208247" fg:w="393783935"/><text x="52.8983%" y="191.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (393,783,935 samples, 0.52%)</title><rect x="52.6483%" y="165" width="0.5204%" height="15" fill="rgb(207,36,27)" fg:x="39838208247" fg:w="393783935"/><text x="52.8983%" y="175.50"></text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (4,261,482,793 samples, 5.63%)</title><rect x="47.5599%" y="405" width="5.6318%" height="15" fill="rgb(217,90,24)" fg:x="35987914592" fg:w="4261482793"/><text x="47.8099%" y="415.50">mws5::s..</text></g><g><title>mws5::search::cross_fit (1,696,722,890 samples, 2.24%)</title><rect x="50.9494%" y="389" width="2.2423%" height="15" fill="rgb(224,66,35)" fg:x="38552674495" fg:w="1696722890"/><text x="51.1994%" y="399.50">m..</text></g><g><title>mws5::dict::Dict::is_fit (1,696,722,890 samples, 2.24%)</title><rect x="50.9494%" y="373" width="2.2423%" height="15" fill="rgb(221,13,50)" fg:x="38552674495" fg:w="1696722890"/><text x="51.1994%" y="383.50">m..</text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (17,559,427 samples, 0.02%)</title><rect x="53.1917%" y="373" width="0.0232%" height="15" fill="rgb(236,68,49)" fg:x="40249397385" fg:w="17559427"/><text x="53.4417%" y="383.50"></text></g><g><title>mws5::words::Word::is_fit (13,143,124 samples, 0.02%)</title><rect x="53.1975%" y="357" width="0.0174%" height="15" fill="rgb(229,146,28)" fg:x="40253813688" fg:w="13143124"/><text x="53.4475%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,721,844 samples, 0.01%)</title><rect x="53.2034%" y="341" width="0.0115%" height="15" fill="rgb(225,31,38)" fg:x="40258234968" fg:w="8721844"/><text x="53.4534%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (8,721,844 samples, 0.01%)</title><rect x="53.2034%" y="325" width="0.0115%" height="15" fill="rgb(250,208,3)" fg:x="40258234968" fg:w="8721844"/><text x="53.4534%" y="335.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,721,844 samples, 0.01%)</title><rect x="53.2034%" y="309" width="0.0115%" height="15" fill="rgb(246,54,23)" fg:x="40258234968" fg:w="8721844"/><text x="53.4534%" y="319.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (8,721,844 samples, 0.01%)</title><rect x="53.2034%" y="293" width="0.0115%" height="15" fill="rgb(243,76,11)" fg:x="40258234968" fg:w="8721844"/><text x="53.4534%" y="303.50"></text></g><g><title>caches::lru::raw::RawLRU&lt;K,V,E,S&gt;::capturing_put (8,837,548 samples, 0.01%)</title><rect x="53.2149%" y="341" width="0.0117%" height="15" fill="rgb(245,21,50)" fg:x="40266956812" fg:w="8837548"/><text x="53.4649%" y="351.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::put (13,233,809 samples, 0.02%)</title><rect x="53.2149%" y="357" width="0.0175%" height="15" fill="rgb(228,9,43)" fg:x="40266956812" fg:w="13233809"/><text x="53.4649%" y="367.50"></text></g><g><title>&lt;caches::lru::segmented::SegmentedCache&lt;K,V,FH,RH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::put (8,804,141 samples, 0.01%)</title><rect x="53.2324%" y="357" width="0.0116%" height="15" fill="rgb(208,100,47)" fg:x="40280190621" fg:w="8804141"/><text x="53.4824%" y="367.50"></text></g><g><title>&lt;caches::lru::raw::RawLRU&lt;K,V,E,S&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::contains (8,804,141 samples, 0.01%)</title><rect x="53.2324%" y="341" width="0.0116%" height="15" fill="rgb(232,26,8)" fg:x="40280190621" fg:w="8804141"/><text x="53.4824%" y="351.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (8,804,141 samples, 0.01%)</title><rect x="53.2324%" y="325" width="0.0116%" height="15" fill="rgb(216,166,38)" fg:x="40280190621" fg:w="8804141"/><text x="53.4824%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (8,804,141 samples, 0.01%)</title><rect x="53.2324%" y="309" width="0.0116%" height="15" fill="rgb(251,202,51)" fg:x="40280190621" fg:w="8804141"/><text x="53.4824%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8,804,141 samples, 0.01%)</title><rect x="53.2324%" y="293" width="0.0116%" height="15" fill="rgb(254,216,34)" fg:x="40280190621" fg:w="8804141"/><text x="53.4824%" y="303.50"></text></g><g><title>hashbrown::map::make_hash (8,804,141 samples, 0.01%)</title><rect x="53.2324%" y="277" width="0.0116%" height="15" fill="rgb(251,32,27)" fg:x="40280190621" fg:w="8804141"/><text x="53.4824%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8,804,141 samples, 0.01%)</title><rect x="53.2324%" y="261" width="0.0116%" height="15" fill="rgb(208,127,28)" fg:x="40280190621" fg:w="8804141"/><text x="53.4824%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8,804,141 samples, 0.01%)</title><rect x="53.2324%" y="245" width="0.0116%" height="15" fill="rgb(224,137,22)" fg:x="40280190621" fg:w="8804141"/><text x="53.4824%" y="255.50"></text></g><g><title>mws5::words::Word::is_fit (8,804,141 samples, 0.01%)</title><rect x="53.2324%" y="229" width="0.0116%" height="15" fill="rgb(254,70,32)" fg:x="40280190621" fg:w="8804141"/><text x="53.4824%" y="239.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::put (30,480,865 samples, 0.04%)</title><rect x="53.2149%" y="373" width="0.0403%" height="15" fill="rgb(229,75,37)" fg:x="40266956812" fg:w="30480865"/><text x="53.4649%" y="383.50"></text></g><g><title>update_process_times (8,786,512 samples, 0.01%)</title><rect x="54.0855%" y="117" width="0.0116%" height="15" fill="rgb(252,64,23)" fg:x="40925741802" fg:w="8786512"/><text x="54.3355%" y="127.50"></text></g><g><title>sched_balance_trigger (8,786,512 samples, 0.01%)</title><rect x="54.0855%" y="101" width="0.0116%" height="15" fill="rgb(232,162,48)" fg:x="40925741802" fg:w="8786512"/><text x="54.3355%" y="111.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (13,204,981 samples, 0.02%)</title><rect x="54.0855%" y="213" width="0.0175%" height="15" fill="rgb(246,160,12)" fg:x="40925741802" fg:w="13204981"/><text x="54.3355%" y="223.50"></text></g><g><title>sysvec_apic_timer_interrupt (13,204,981 samples, 0.02%)</title><rect x="54.0855%" y="197" width="0.0175%" height="15" fill="rgb(247,166,0)" fg:x="40925741802" fg:w="13204981"/><text x="54.3355%" y="207.50"></text></g><g><title>__sysvec_apic_timer_interrupt (13,204,981 samples, 0.02%)</title><rect x="54.0855%" y="181" width="0.0175%" height="15" fill="rgb(249,219,21)" fg:x="40925741802" fg:w="13204981"/><text x="54.3355%" y="191.50"></text></g><g><title>hrtimer_interrupt (13,204,981 samples, 0.02%)</title><rect x="54.0855%" y="165" width="0.0175%" height="15" fill="rgb(205,209,3)" fg:x="40925741802" fg:w="13204981"/><text x="54.3355%" y="175.50"></text></g><g><title>__hrtimer_run_queues (13,204,981 samples, 0.02%)</title><rect x="54.0855%" y="149" width="0.0175%" height="15" fill="rgb(243,44,1)" fg:x="40925741802" fg:w="13204981"/><text x="54.3355%" y="159.50"></text></g><g><title>tick_nohz_handler (13,204,981 samples, 0.02%)</title><rect x="54.0855%" y="133" width="0.0175%" height="15" fill="rgb(206,159,16)" fg:x="40925741802" fg:w="13204981"/><text x="54.3355%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (691,679,578 samples, 0.91%)</title><rect x="55.5582%" y="197" width="0.9141%" height="15" fill="rgb(244,77,30)" fg:x="42040080116" fg:w="691679578"/><text x="55.8082%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (691,679,578 samples, 0.91%)</title><rect x="55.5582%" y="181" width="0.9141%" height="15" fill="rgb(218,69,12)" fg:x="42040080116" fg:w="691679578"/><text x="55.8082%" y="191.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (691,679,578 samples, 0.91%)</title><rect x="55.5582%" y="165" width="0.9141%" height="15" fill="rgb(212,87,7)" fg:x="42040080116" fg:w="691679578"/><text x="55.8082%" y="175.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (691,679,578 samples, 0.91%)</title><rect x="55.5582%" y="149" width="0.9141%" height="15" fill="rgb(245,114,25)" fg:x="42040080116" fg:w="691679578"/><text x="55.8082%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::_{{closure}} (2,303,543,858 samples, 3.04%)</title><rect x="53.4393%" y="245" width="3.0443%" height="15" fill="rgb(210,61,42)" fg:x="40436789495" fg:w="2303543858"/><text x="53.6893%" y="255.50">&lt;co..</text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (2,217,628,000 samples, 2.93%)</title><rect x="53.5529%" y="229" width="2.9307%" height="15" fill="rgb(211,52,33)" fg:x="40522705353" fg:w="2217628000"/><text x="53.8029%" y="239.50">mw..</text></g><g><title>mws5::words::Word::is_fit (1,801,372,336 samples, 2.38%)</title><rect x="54.1030%" y="213" width="2.3806%" height="15" fill="rgb(234,58,33)" fg:x="40938961017" fg:w="1801372336"/><text x="54.3530%" y="223.50">mw..</text></g><g><title>core::iter::adapters::copied::copy_fold::_{{closure}} (2,394,870,543 samples, 3.16%)</title><rect x="53.4393%" y="277" width="3.1649%" height="15" fill="rgb(220,115,36)" fg:x="40436789495" fg:w="2394870543"/><text x="53.6893%" y="287.50">cor..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,394,870,543 samples, 3.16%)</title><rect x="53.4393%" y="261" width="3.1649%" height="15" fill="rgb(243,153,54)" fg:x="40436789495" fg:w="2394870543"/><text x="53.6893%" y="271.50">cor..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (91,326,685 samples, 0.12%)</title><rect x="56.4836%" y="245" width="0.1207%" height="15" fill="rgb(251,47,18)" fg:x="42740333353" fg:w="91326685"/><text x="56.7336%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (2,702,294,212 samples, 3.57%)</title><rect x="53.2552%" y="373" width="3.5712%" height="15" fill="rgb(242,102,42)" fg:x="40297437677" fg:w="2702294212"/><text x="53.5052%" y="383.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,702,294,212 samples, 3.57%)</title><rect x="53.2552%" y="357" width="3.5712%" height="15" fill="rgb(234,31,38)" fg:x="40297437677" fg:w="2702294212"/><text x="53.5052%" y="367.50">core..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,702,294,212 samples, 3.57%)</title><rect x="53.2552%" y="341" width="3.5712%" height="15" fill="rgb(221,117,51)" fg:x="40297437677" fg:w="2702294212"/><text x="53.5052%" y="351.50">&lt;usi..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,702,294,212 samples, 3.57%)</title><rect x="53.2552%" y="325" width="3.5712%" height="15" fill="rgb(212,20,18)" fg:x="40297437677" fg:w="2702294212"/><text x="53.5052%" y="335.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,702,294,212 samples, 3.57%)</title><rect x="53.2552%" y="309" width="3.5712%" height="15" fill="rgb(245,133,36)" fg:x="40297437677" fg:w="2702294212"/><text x="53.5052%" y="319.50">&lt;cor..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,702,294,212 samples, 3.57%)</title><rect x="53.2552%" y="293" width="3.5712%" height="15" fill="rgb(212,6,19)" fg:x="40297437677" fg:w="2702294212"/><text x="53.5052%" y="303.50">&lt;cor..</text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (168,071,851 samples, 0.22%)</title><rect x="56.6043%" y="277" width="0.2221%" height="15" fill="rgb(218,1,36)" fg:x="42831660038" fg:w="168071851"/><text x="56.8543%" y="287.50"></text></g><g><title>mws5::search::best_pos (2,760,733,611 samples, 3.65%)</title><rect x="53.1917%" y="405" width="3.6485%" height="15" fill="rgb(246,84,54)" fg:x="40249397385" fg:w="2760733611"/><text x="53.4417%" y="415.50">mws5..</text></g><g><title>mws5::dict::Dict::match_count (2,760,733,611 samples, 3.65%)</title><rect x="53.1917%" y="389" width="3.6485%" height="15" fill="rgb(242,110,6)" fg:x="40249397385" fg:w="2760733611"/><text x="53.4417%" y="399.50">mws5..</text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (98,213,606 samples, 0.13%)</title><rect x="57.7941%" y="293" width="0.1298%" height="15" fill="rgb(214,47,5)" fg:x="43732015511" fg:w="98213606"/><text x="58.0441%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (98,213,857 samples, 0.13%)</title><rect x="57.7941%" y="309" width="0.1298%" height="15" fill="rgb(218,159,25)" fg:x="43732015511" fg:w="98213857"/><text x="58.0441%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,023,798,299 samples, 1.35%)</title><rect x="60.5511%" y="229" width="1.3530%" height="15" fill="rgb(215,211,28)" fg:x="45818148061" fg:w="1023798299"/><text x="60.8011%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1,023,798,299 samples, 1.35%)</title><rect x="60.5511%" y="213" width="1.3530%" height="15" fill="rgb(238,59,32)" fg:x="45818148061" fg:w="1023798299"/><text x="60.8011%" y="223.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,023,798,299 samples, 1.35%)</title><rect x="60.5511%" y="197" width="1.3530%" height="15" fill="rgb(226,82,3)" fg:x="45818148061" fg:w="1023798299"/><text x="60.8011%" y="207.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (1,023,798,299 samples, 1.35%)</title><rect x="60.5511%" y="181" width="1.3530%" height="15" fill="rgb(240,164,32)" fg:x="45818148061" fg:w="1023798299"/><text x="60.8011%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,818,922,839 samples, 5.05%)</title><rect x="56.8630%" y="373" width="5.0469%" height="15" fill="rgb(232,46,7)" fg:x="43027450876" fg:w="3818922839"/><text x="57.1130%" y="383.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::find (3,818,922,839 samples, 5.05%)</title><rect x="56.8630%" y="357" width="5.0469%" height="15" fill="rgb(229,129,53)" fg:x="43027450876" fg:w="3818922839"/><text x="57.1130%" y="367.50">core::..</text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3,818,922,839 samples, 5.05%)</title><rect x="56.8630%" y="341" width="5.0469%" height="15" fill="rgb(234,188,29)" fg:x="43027450876" fg:w="3818922839"/><text x="57.1130%" y="351.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3,818,922,839 samples, 5.05%)</title><rect x="56.8630%" y="325" width="5.0469%" height="15" fill="rgb(246,141,4)" fg:x="43027450876" fg:w="3818922839"/><text x="57.1130%" y="335.50">core::..</text></g><g><title>core::iter::adapters::copied::copy_try_fold::_{{closure}} (3,016,144,347 samples, 3.99%)</title><rect x="57.9239%" y="309" width="3.9860%" height="15" fill="rgb(229,23,39)" fg:x="43830229368" fg:w="3016144347"/><text x="58.1739%" y="319.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (3,016,144,347 samples, 3.99%)</title><rect x="57.9239%" y="293" width="3.9860%" height="15" fill="rgb(206,12,3)" fg:x="43830229368" fg:w="3016144347"/><text x="58.1739%" y="303.50">core..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3,016,144,347 samples, 3.99%)</title><rect x="57.9239%" y="277" width="3.9860%" height="15" fill="rgb(252,226,20)" fg:x="43830229368" fg:w="3016144347"/><text x="58.1739%" y="287.50">core..</text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (3,016,144,347 samples, 3.99%)</title><rect x="57.9239%" y="261" width="3.9860%" height="15" fill="rgb(216,123,35)" fg:x="43830229368" fg:w="3016144347"/><text x="58.1739%" y="271.50">mws5..</text></g><g><title>mws5::words::Word::is_fit (2,568,131,275 samples, 3.39%)</title><rect x="58.5160%" y="245" width="3.3939%" height="15" fill="rgb(212,68,40)" fg:x="44278242440" fg:w="2568131275"/><text x="58.7660%" y="255.50">mws..</text></g><g><title>mws5::words::Word::is_fit (8,514,622 samples, 0.01%)</title><rect x="61.9216%" y="373" width="0.0113%" height="15" fill="rgb(254,125,32)" fg:x="46855191846" fg:w="8514622"/><text x="62.1716%" y="383.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (22,095,767 samples, 0.03%)</title><rect x="61.9328%" y="373" width="0.0292%" height="15" fill="rgb(253,97,22)" fg:x="46863706468" fg:w="22095767"/><text x="62.1828%" y="383.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (22,095,767 samples, 0.03%)</title><rect x="61.9328%" y="357" width="0.0292%" height="15" fill="rgb(241,101,14)" fg:x="46863706468" fg:w="22095767"/><text x="62.1828%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (22,095,767 samples, 0.03%)</title><rect x="61.9328%" y="341" width="0.0292%" height="15" fill="rgb(238,103,29)" fg:x="46863706468" fg:w="22095767"/><text x="62.1828%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (22,095,767 samples, 0.03%)</title><rect x="61.9328%" y="325" width="0.0292%" height="15" fill="rgb(233,195,47)" fg:x="46863706468" fg:w="22095767"/><text x="62.1828%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (22,095,767 samples, 0.03%)</title><rect x="61.9328%" y="309" width="0.0292%" height="15" fill="rgb(246,218,30)" fg:x="46863706468" fg:w="22095767"/><text x="62.1828%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (22,095,767 samples, 0.03%)</title><rect x="61.9328%" y="293" width="0.0292%" height="15" fill="rgb(219,145,47)" fg:x="46863706468" fg:w="22095767"/><text x="62.1828%" y="303.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (22,095,767 samples, 0.03%)</title><rect x="61.9328%" y="277" width="0.0292%" height="15" fill="rgb(243,12,26)" fg:x="46863706468" fg:w="22095767"/><text x="62.1828%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (22,095,767 samples, 0.03%)</title><rect x="61.9328%" y="261" width="0.0292%" height="15" fill="rgb(214,87,16)" fg:x="46863706468" fg:w="22095767"/><text x="62.1828%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (22,095,767 samples, 0.03%)</title><rect x="61.9328%" y="245" width="0.0292%" height="15" fill="rgb(208,99,42)" fg:x="46863706468" fg:w="22095767"/><text x="62.1828%" y="255.50"></text></g><g><title>mws5::dict::Dict::is_fit (3,880,071,805 samples, 5.13%)</title><rect x="56.8401%" y="389" width="5.1277%" height="15" fill="rgb(253,99,2)" fg:x="43010130996" fg:w="3880071805"/><text x="57.0901%" y="399.50">mws5::..</text></g><g><title>mws5::search::cross_fit (3,884,521,920 samples, 5.13%)</title><rect x="56.8401%" y="405" width="5.1336%" height="15" fill="rgb(220,168,23)" fg:x="43010130996" fg:w="3884521920"/><text x="57.0901%" y="415.50">mws5::..</text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (13,448,582,294 samples, 17.77%)</title><rect x="44.2119%" y="421" width="17.7730%" height="15" fill="rgb(242,38,24)" fg:x="33454548541" fg:w="13448582294"/><text x="44.4619%" y="431.50">mws5::search::&lt;impl mws5::ap..</text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (17,123,139 samples, 0.02%)</title><rect x="62.0023%" y="389" width="0.0226%" height="15" fill="rgb(225,182,9)" fg:x="46916286088" fg:w="17123139"/><text x="62.2523%" y="399.50"></text></g><g><title>mws5::words::Word::is_fit (17,123,139 samples, 0.02%)</title><rect x="62.0023%" y="373" width="0.0226%" height="15" fill="rgb(243,178,37)" fg:x="46916286088" fg:w="17123139"/><text x="62.2523%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (522,576,496 samples, 0.69%)</title><rect x="63.3458%" y="213" width="0.6906%" height="15" fill="rgb(232,139,19)" fg:x="47932910354" fg:w="522576496"/><text x="63.5958%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (522,576,496 samples, 0.69%)</title><rect x="63.3458%" y="197" width="0.6906%" height="15" fill="rgb(225,201,24)" fg:x="47932910354" fg:w="522576496"/><text x="63.5958%" y="207.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (522,576,496 samples, 0.69%)</title><rect x="63.3458%" y="181" width="0.6906%" height="15" fill="rgb(221,47,46)" fg:x="47932910354" fg:w="522576496"/><text x="63.5958%" y="191.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (522,576,496 samples, 0.69%)</title><rect x="63.3458%" y="165" width="0.6906%" height="15" fill="rgb(249,23,13)" fg:x="47932910354" fg:w="522576496"/><text x="63.5958%" y="175.50"></text></g><g><title>perf_event_task_tick (8,357,826 samples, 0.01%)</title><rect x="64.0423%" y="85" width="0.0110%" height="15" fill="rgb(219,9,5)" fg:x="48459890634" fg:w="8357826"/><text x="64.2923%" y="95.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::_{{closure}} (1,447,179,340 samples, 1.91%)</title><rect x="62.1466%" y="261" width="1.9125%" height="15" fill="rgb(254,171,16)" fg:x="47025464455" fg:w="1447179340"/><text x="62.3966%" y="271.50">&lt;..</text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (1,394,206,906 samples, 1.84%)</title><rect x="62.2166%" y="245" width="1.8425%" height="15" fill="rgb(230,171,20)" fg:x="47078436889" fg:w="1394206906"/><text x="62.4666%" y="255.50">m..</text></g><g><title>mws5::words::Word::is_fit (1,150,558,270 samples, 1.52%)</title><rect x="62.5386%" y="229" width="1.5205%" height="15" fill="rgb(210,71,41)" fg:x="47322085525" fg:w="1150558270"/><text x="62.7886%" y="239.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (17,156,945 samples, 0.02%)</title><rect x="64.0365%" y="213" width="0.0227%" height="15" fill="rgb(206,173,20)" fg:x="48455486850" fg:w="17156945"/><text x="64.2865%" y="223.50"></text></g><g><title>sysvec_apic_timer_interrupt (17,156,945 samples, 0.02%)</title><rect x="64.0365%" y="197" width="0.0227%" height="15" fill="rgb(233,88,34)" fg:x="48455486850" fg:w="17156945"/><text x="64.2865%" y="207.50"></text></g><g><title>__sysvec_apic_timer_interrupt (17,156,945 samples, 0.02%)</title><rect x="64.0365%" y="181" width="0.0227%" height="15" fill="rgb(223,209,46)" fg:x="48455486850" fg:w="17156945"/><text x="64.2865%" y="191.50"></text></g><g><title>hrtimer_interrupt (17,156,945 samples, 0.02%)</title><rect x="64.0365%" y="165" width="0.0227%" height="15" fill="rgb(250,43,18)" fg:x="48455486850" fg:w="17156945"/><text x="64.2865%" y="175.50"></text></g><g><title>__hrtimer_run_queues (17,156,945 samples, 0.02%)</title><rect x="64.0365%" y="149" width="0.0227%" height="15" fill="rgb(208,13,10)" fg:x="48455486850" fg:w="17156945"/><text x="64.2865%" y="159.50"></text></g><g><title>tick_nohz_handler (17,156,945 samples, 0.02%)</title><rect x="64.0365%" y="133" width="0.0227%" height="15" fill="rgb(212,200,36)" fg:x="48455486850" fg:w="17156945"/><text x="64.2865%" y="143.50"></text></g><g><title>update_process_times (17,156,945 samples, 0.02%)</title><rect x="64.0365%" y="117" width="0.0227%" height="15" fill="rgb(225,90,30)" fg:x="48455486850" fg:w="17156945"/><text x="64.2865%" y="127.50"></text></g><g><title>sched_tick (12,753,161 samples, 0.02%)</title><rect x="64.0423%" y="101" width="0.0169%" height="15" fill="rgb(236,182,39)" fg:x="48459890634" fg:w="12753161"/><text x="64.2923%" y="111.50"></text></g><g><title>core::iter::adapters::copied::copy_fold::_{{closure}} (1,512,148,382 samples, 2.00%)</title><rect x="62.1466%" y="293" width="1.9984%" height="15" fill="rgb(212,144,35)" fg:x="47025464455" fg:w="1512148382"/><text x="62.3966%" y="303.50">c..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,512,148,382 samples, 2.00%)</title><rect x="62.1466%" y="277" width="1.9984%" height="15" fill="rgb(228,63,44)" fg:x="47025464455" fg:w="1512148382"/><text x="62.3966%" y="287.50">c..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (64,969,042 samples, 0.09%)</title><rect x="64.0591%" y="261" width="0.0859%" height="15" fill="rgb(228,109,6)" fg:x="48472643795" fg:w="64969042"/><text x="64.3091%" y="271.50"></text></g><g><title>mws5::search::best_pos (1,716,779,111 samples, 2.27%)</title><rect x="61.9849%" y="421" width="2.2688%" height="15" fill="rgb(238,117,24)" fg:x="46903130835" fg:w="1716779111"/><text x="62.2349%" y="431.50">m..</text></g><g><title>mws5::dict::Dict::match_count (1,708,059,822 samples, 2.26%)</title><rect x="61.9965%" y="405" width="2.2573%" height="15" fill="rgb(242,26,26)" fg:x="46911850124" fg:w="1708059822"/><text x="62.2465%" y="415.50">m..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1,682,107,383 samples, 2.22%)</title><rect x="62.0308%" y="389" width="2.2230%" height="15" fill="rgb(221,92,48)" fg:x="46937802563" fg:w="1682107383"/><text x="62.2808%" y="399.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,682,107,383 samples, 2.22%)</title><rect x="62.0308%" y="373" width="2.2230%" height="15" fill="rgb(209,209,32)" fg:x="46937802563" fg:w="1682107383"/><text x="62.2808%" y="383.50">c..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,682,107,383 samples, 2.22%)</title><rect x="62.0308%" y="357" width="2.2230%" height="15" fill="rgb(221,70,22)" fg:x="46937802563" fg:w="1682107383"/><text x="62.2808%" y="367.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,682,107,383 samples, 2.22%)</title><rect x="62.0308%" y="341" width="2.2230%" height="15" fill="rgb(248,145,5)" fg:x="46937802563" fg:w="1682107383"/><text x="62.2808%" y="351.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,682,107,383 samples, 2.22%)</title><rect x="62.0308%" y="325" width="2.2230%" height="15" fill="rgb(226,116,26)" fg:x="46937802563" fg:w="1682107383"/><text x="62.2808%" y="335.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,682,107,383 samples, 2.22%)</title><rect x="62.0308%" y="309" width="2.2230%" height="15" fill="rgb(244,5,17)" fg:x="46937802563" fg:w="1682107383"/><text x="62.2808%" y="319.50">&lt;..</text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (82,297,109 samples, 0.11%)</title><rect x="64.1450%" y="293" width="0.1088%" height="15" fill="rgb(252,159,33)" fg:x="48537612837" fg:w="82297109"/><text x="64.3950%" y="303.50"></text></g><g><title>&lt;&amp;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (8,808,234 samples, 0.01%)</title><rect x="64.2710%" y="389" width="0.0116%" height="15" fill="rgb(206,71,0)" fg:x="48632987865" fg:w="8808234"/><text x="64.5210%" y="399.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (8,808,234 samples, 0.01%)</title><rect x="64.2710%" y="373" width="0.0116%" height="15" fill="rgb(233,118,54)" fg:x="48632987865" fg:w="8808234"/><text x="64.5210%" y="383.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (8,808,234 samples, 0.01%)</title><rect x="64.2710%" y="357" width="0.0116%" height="15" fill="rgb(234,83,48)" fg:x="48632987865" fg:w="8808234"/><text x="64.5210%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (8,808,234 samples, 0.01%)</title><rect x="64.2710%" y="341" width="0.0116%" height="15" fill="rgb(228,3,54)" fg:x="48632987865" fg:w="8808234"/><text x="64.5210%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (8,808,234 samples, 0.01%)</title><rect x="64.2710%" y="325" width="0.0116%" height="15" fill="rgb(226,155,13)" fg:x="48632987865" fg:w="8808234"/><text x="64.5210%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (8,808,234 samples, 0.01%)</title><rect x="64.2710%" y="309" width="0.0116%" height="15" fill="rgb(241,28,37)" fg:x="48632987865" fg:w="8808234"/><text x="64.5210%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (8,808,234 samples, 0.01%)</title><rect x="64.2710%" y="293" width="0.0116%" height="15" fill="rgb(233,93,10)" fg:x="48632987865" fg:w="8808234"/><text x="64.5210%" y="303.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (397,057,921 samples, 0.52%)</title><rect x="67.6114%" y="309" width="0.5247%" height="15" fill="rgb(225,113,19)" fg:x="51160562766" fg:w="397057921"/><text x="67.8614%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (401,427,010 samples, 0.53%)</title><rect x="67.6056%" y="325" width="0.5305%" height="15" fill="rgb(241,2,18)" fg:x="51156206256" fg:w="401427010"/><text x="67.8556%" y="335.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (8,728,296 samples, 0.01%)</title><rect x="68.1361%" y="325" width="0.0115%" height="15" fill="rgb(228,207,21)" fg:x="51557633266" fg:w="8728296"/><text x="68.3861%" y="335.50"></text></g><g><title>sysvec_apic_timer_interrupt (8,728,296 samples, 0.01%)</title><rect x="68.1361%" y="309" width="0.0115%" height="15" fill="rgb(213,211,35)" fg:x="51557633266" fg:w="8728296"/><text x="68.3861%" y="319.50"></text></g><g><title>__sysvec_apic_timer_interrupt (8,728,296 samples, 0.01%)</title><rect x="68.1361%" y="293" width="0.0115%" height="15" fill="rgb(209,83,10)" fg:x="51557633266" fg:w="8728296"/><text x="68.3861%" y="303.50"></text></g><g><title>hrtimer_interrupt (8,728,296 samples, 0.01%)</title><rect x="68.1361%" y="277" width="0.0115%" height="15" fill="rgb(209,164,1)" fg:x="51557633266" fg:w="8728296"/><text x="68.3861%" y="287.50"></text></g><g><title>__hrtimer_run_queues (8,728,296 samples, 0.01%)</title><rect x="68.1361%" y="261" width="0.0115%" height="15" fill="rgb(213,184,43)" fg:x="51557633266" fg:w="8728296"/><text x="68.3861%" y="271.50"></text></g><g><title>tick_nohz_handler (8,728,296 samples, 0.01%)</title><rect x="68.1361%" y="245" width="0.0115%" height="15" fill="rgb(231,61,34)" fg:x="51557633266" fg:w="8728296"/><text x="68.3861%" y="255.50"></text></g><g><title>update_process_times (8,728,296 samples, 0.01%)</title><rect x="68.1361%" y="229" width="0.0115%" height="15" fill="rgb(235,75,3)" fg:x="51557633266" fg:w="8728296"/><text x="68.3861%" y="239.50"></text></g><g><title>__memset_avx2_unaligned_erms (8,602,337 samples, 0.01%)</title><rect x="70.0542%" y="261" width="0.0114%" height="15" fill="rgb(220,106,47)" fg:x="53008995947" fg:w="8602337"/><text x="70.3042%" y="271.50"></text></g><g><title>sched_balance_trigger (8,745,311 samples, 0.01%)</title><rect x="70.0714%" y="149" width="0.0116%" height="15" fill="rgb(210,196,33)" fg:x="53022019786" fg:w="8745311"/><text x="70.3214%" y="159.50"></text></g><g><title>sched_use_asym_prio (8,745,311 samples, 0.01%)</title><rect x="70.0714%" y="133" width="0.0116%" height="15" fill="rgb(229,154,42)" fg:x="53022019786" fg:w="8745311"/><text x="70.3214%" y="143.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (26,120,506 samples, 0.03%)</title><rect x="70.0655%" y="261" width="0.0345%" height="15" fill="rgb(228,114,26)" fg:x="53017598284" fg:w="26120506"/><text x="70.3155%" y="271.50"></text></g><g><title>sysvec_apic_timer_interrupt (26,120,506 samples, 0.03%)</title><rect x="70.0655%" y="245" width="0.0345%" height="15" fill="rgb(208,144,1)" fg:x="53017598284" fg:w="26120506"/><text x="70.3155%" y="255.50"></text></g><g><title>__sysvec_apic_timer_interrupt (21,699,004 samples, 0.03%)</title><rect x="70.0714%" y="229" width="0.0287%" height="15" fill="rgb(239,112,37)" fg:x="53022019786" fg:w="21699004"/><text x="70.3214%" y="239.50"></text></g><g><title>hrtimer_interrupt (21,699,004 samples, 0.03%)</title><rect x="70.0714%" y="213" width="0.0287%" height="15" fill="rgb(210,96,50)" fg:x="53022019786" fg:w="21699004"/><text x="70.3214%" y="223.50"></text></g><g><title>__hrtimer_run_queues (21,699,004 samples, 0.03%)</title><rect x="70.0714%" y="197" width="0.0287%" height="15" fill="rgb(222,178,2)" fg:x="53022019786" fg:w="21699004"/><text x="70.3214%" y="207.50"></text></g><g><title>tick_nohz_handler (21,699,004 samples, 0.03%)</title><rect x="70.0714%" y="181" width="0.0287%" height="15" fill="rgb(226,74,18)" fg:x="53022019786" fg:w="21699004"/><text x="70.3214%" y="191.50"></text></g><g><title>update_process_times (21,699,004 samples, 0.03%)</title><rect x="70.0714%" y="165" width="0.0287%" height="15" fill="rgb(225,67,54)" fg:x="53022019786" fg:w="21699004"/><text x="70.3214%" y="175.50"></text></g><g><title>sched_tick (12,953,693 samples, 0.02%)</title><rect x="70.0829%" y="149" width="0.0171%" height="15" fill="rgb(251,92,32)" fg:x="53030765097" fg:w="12953693"/><text x="70.3329%" y="159.50"></text></g><g><title>task_tick_fair (12,953,693 samples, 0.02%)</title><rect x="70.0829%" y="133" width="0.0171%" height="15" fill="rgb(228,149,22)" fg:x="53030765097" fg:w="12953693"/><text x="70.3329%" y="143.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (7,988,783 samples, 0.01%)</title><rect x="83.1842%" y="181" width="0.0106%" height="15" fill="rgb(243,54,13)" fg:x="62944312695" fg:w="7988783"/><text x="83.4342%" y="191.50"></text></g><g><title>sysvec_apic_timer_interrupt (7,988,783 samples, 0.01%)</title><rect x="83.1842%" y="165" width="0.0106%" height="15" fill="rgb(243,180,28)" fg:x="62944312695" fg:w="7988783"/><text x="83.4342%" y="175.50"></text></g><g><title>__sysvec_apic_timer_interrupt (7,988,783 samples, 0.01%)</title><rect x="83.1842%" y="149" width="0.0106%" height="15" fill="rgb(208,167,24)" fg:x="62944312695" fg:w="7988783"/><text x="83.4342%" y="159.50"></text></g><g><title>hrtimer_interrupt (7,988,783 samples, 0.01%)</title><rect x="83.1842%" y="133" width="0.0106%" height="15" fill="rgb(245,73,45)" fg:x="62944312695" fg:w="7988783"/><text x="83.4342%" y="143.50"></text></g><g><title>__hrtimer_run_queues (7,988,783 samples, 0.01%)</title><rect x="83.1842%" y="117" width="0.0106%" height="15" fill="rgb(237,203,48)" fg:x="62944312695" fg:w="7988783"/><text x="83.4342%" y="127.50"></text></g><g><title>tick_nohz_handler (7,988,783 samples, 0.01%)</title><rect x="83.1842%" y="101" width="0.0106%" height="15" fill="rgb(211,197,16)" fg:x="62944312695" fg:w="7988783"/><text x="83.4342%" y="111.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,148,184,885 samples, 5.48%)</title><rect x="77.7127%" y="245" width="5.4820%" height="15" fill="rgb(243,99,51)" fg:x="58804119851" fg:w="4148184885"/><text x="77.9627%" y="255.50">&lt;core::..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (4,148,184,885 samples, 5.48%)</title><rect x="77.7127%" y="229" width="5.4820%" height="15" fill="rgb(215,123,29)" fg:x="58804119851" fg:w="4148184885"/><text x="77.9627%" y="239.50">&lt;core::..</text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,148,184,885 samples, 5.48%)</title><rect x="77.7127%" y="213" width="5.4820%" height="15" fill="rgb(239,186,37)" fg:x="58804119851" fg:w="4148184885"/><text x="77.9627%" y="223.50">&lt;core::..</text></g><g><title>mws5::words::Word::bits::_{{closure}} (4,148,184,885 samples, 5.48%)</title><rect x="77.7127%" y="197" width="5.4820%" height="15" fill="rgb(252,136,39)" fg:x="58804119851" fg:w="4148184885"/><text x="77.9627%" y="207.50">mws5::w..</text></g><g><title>sched_balance_trigger (8,828,296 samples, 0.01%)</title><rect x="83.2064%" y="133" width="0.0117%" height="15" fill="rgb(223,213,32)" fg:x="62961107269" fg:w="8828296"/><text x="83.4564%" y="143.50"></text></g><g><title>sched_use_asym_prio (8,828,296 samples, 0.01%)</title><rect x="83.2064%" y="117" width="0.0117%" height="15" fill="rgb(233,115,5)" fg:x="62961107269" fg:w="8828296"/><text x="83.4564%" y="127.50"></text></g><g><title>idle_cpu (8,828,296 samples, 0.01%)</title><rect x="83.2064%" y="101" width="0.0117%" height="15" fill="rgb(207,226,44)" fg:x="62961107269" fg:w="8828296"/><text x="83.4564%" y="111.50"></text></g><g><title>update_process_times (21,629,941 samples, 0.03%)</title><rect x="83.2006%" y="149" width="0.0286%" height="15" fill="rgb(208,126,0)" fg:x="62956724219" fg:w="21629941"/><text x="83.4506%" y="159.50"></text></g><g><title>sched_tick (8,418,595 samples, 0.01%)</title><rect x="83.2181%" y="133" width="0.0111%" height="15" fill="rgb(244,66,21)" fg:x="62969935565" fg:w="8418595"/><text x="83.4681%" y="143.50"></text></g><g><title>task_tick_fair (8,418,595 samples, 0.01%)</title><rect x="83.2181%" y="117" width="0.0111%" height="15" fill="rgb(222,97,12)" fg:x="62969935565" fg:w="8418595"/><text x="83.4681%" y="127.50"></text></g><g><title>tick_nohz_handler (26,029,697 samples, 0.03%)</title><rect x="83.2006%" y="165" width="0.0344%" height="15" fill="rgb(219,213,19)" fg:x="62956724219" fg:w="26029697"/><text x="83.4506%" y="175.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (34,811,103 samples, 0.05%)</title><rect x="83.1948%" y="245" width="0.0460%" height="15" fill="rgb(252,169,30)" fg:x="62952304736" fg:w="34811103"/><text x="83.4448%" y="255.50"></text></g><g><title>sysvec_apic_timer_interrupt (30,395,689 samples, 0.04%)</title><rect x="83.2006%" y="229" width="0.0402%" height="15" fill="rgb(206,32,51)" fg:x="62956720150" fg:w="30395689"/><text x="83.4506%" y="239.50"></text></g><g><title>__sysvec_apic_timer_interrupt (30,395,689 samples, 0.04%)</title><rect x="83.2006%" y="213" width="0.0402%" height="15" fill="rgb(250,172,42)" fg:x="62956720150" fg:w="30395689"/><text x="83.4506%" y="223.50"></text></g><g><title>hrtimer_interrupt (30,395,689 samples, 0.04%)</title><rect x="83.2006%" y="197" width="0.0402%" height="15" fill="rgb(209,34,43)" fg:x="62956720150" fg:w="30395689"/><text x="83.4506%" y="207.50"></text></g><g><title>__hrtimer_run_queues (30,395,689 samples, 0.04%)</title><rect x="83.2006%" y="181" width="0.0402%" height="15" fill="rgb(223,11,35)" fg:x="62956720150" fg:w="30395689"/><text x="83.4506%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (14,345,338,067 samples, 18.96%)</title><rect x="64.2827%" y="389" width="18.9581%" height="15" fill="rgb(251,219,26)" fg:x="48641796099" fg:w="14345338067"/><text x="64.5327%" y="399.50">&lt;core::iter::adapters::filter:..</text></g><g><title>core::iter::traits::iterator::Iterator::find (14,345,338,067 samples, 18.96%)</title><rect x="64.2827%" y="373" width="18.9581%" height="15" fill="rgb(231,119,3)" fg:x="48641796099" fg:w="14345338067"/><text x="64.5327%" y="383.50">core::iter::traits::iterator::..</text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14,345,338,067 samples, 18.96%)</title><rect x="64.2827%" y="357" width="18.9581%" height="15" fill="rgb(216,97,11)" fg:x="48641796099" fg:w="14345338067"/><text x="64.5327%" y="367.50">&lt;core::iter::adapters::copied:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14,345,338,067 samples, 18.96%)</title><rect x="64.2827%" y="341" width="18.9581%" height="15" fill="rgb(223,59,9)" fg:x="48641796099" fg:w="14345338067"/><text x="64.5327%" y="351.50">core::iter::traits::iterator::..</text></g><g><title>core::iter::adapters::copied::copy_try_fold::_{{closure}} (11,420,754,054 samples, 15.09%)</title><rect x="68.1477%" y="325" width="15.0931%" height="15" fill="rgb(233,93,31)" fg:x="51566380112" fg:w="11420754054"/><text x="68.3977%" y="335.50">core::iter::adapters::c..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (11,420,754,054 samples, 15.09%)</title><rect x="68.1477%" y="309" width="15.0931%" height="15" fill="rgb(239,81,33)" fg:x="51566380112" fg:w="11420754054"/><text x="68.3977%" y="319.50">core::iter::traits::ite..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11,420,754,054 samples, 15.09%)</title><rect x="68.1477%" y="293" width="15.0931%" height="15" fill="rgb(213,120,34)" fg:x="51566380112" fg:w="11420754054"/><text x="68.3977%" y="303.50">core::ops::function::im..</text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (11,420,754,054 samples, 15.09%)</title><rect x="68.1477%" y="277" width="15.0931%" height="15" fill="rgb(243,49,53)" fg:x="51566380112" fg:w="11420754054"/><text x="68.3977%" y="287.50">mws5::dict::Dict::match..</text></g><g><title>mws5::words::Word::is_fit (9,938,952,572 samples, 13.13%)</title><rect x="70.1059%" y="261" width="13.1348%" height="15" fill="rgb(247,216,33)" fg:x="53048181594" fg:w="9938952572"/><text x="70.3559%" y="271.50">mws5::words::Word::i..</text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (13,056,878 samples, 0.02%)</title><rect x="83.2525%" y="293" width="0.0173%" height="15" fill="rgb(226,26,14)" fg:x="62995971411" fg:w="13056878"/><text x="83.5025%" y="303.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (13,056,878 samples, 0.02%)</title><rect x="83.2525%" y="277" width="0.0173%" height="15" fill="rgb(215,49,53)" fg:x="62995971411" fg:w="13056878"/><text x="83.5025%" y="287.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (26,290,597 samples, 0.03%)</title><rect x="83.2466%" y="389" width="0.0347%" height="15" fill="rgb(245,162,40)" fg:x="62991522631" fg:w="26290597"/><text x="83.4966%" y="399.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (26,290,597 samples, 0.03%)</title><rect x="83.2466%" y="373" width="0.0347%" height="15" fill="rgb(229,68,17)" fg:x="62991522631" fg:w="26290597"/><text x="83.4966%" y="383.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (26,290,597 samples, 0.03%)</title><rect x="83.2466%" y="357" width="0.0347%" height="15" fill="rgb(213,182,10)" fg:x="62991522631" fg:w="26290597"/><text x="83.4966%" y="367.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (26,290,597 samples, 0.03%)</title><rect x="83.2466%" y="341" width="0.0347%" height="15" fill="rgb(245,125,30)" fg:x="62991522631" fg:w="26290597"/><text x="83.4966%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26,290,597 samples, 0.03%)</title><rect x="83.2466%" y="325" width="0.0347%" height="15" fill="rgb(232,202,2)" fg:x="62991522631" fg:w="26290597"/><text x="83.4966%" y="335.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (21,841,817 samples, 0.03%)</title><rect x="83.2525%" y="309" width="0.0289%" height="15" fill="rgb(237,140,51)" fg:x="62995971411" fg:w="21841817"/><text x="83.5025%" y="319.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (8,784,939 samples, 0.01%)</title><rect x="83.2697%" y="293" width="0.0116%" height="15" fill="rgb(236,157,25)" fg:x="63009028289" fg:w="8784939"/><text x="83.5197%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (8,784,939 samples, 0.01%)</title><rect x="83.2697%" y="277" width="0.0116%" height="15" fill="rgb(219,209,0)" fg:x="63009028289" fg:w="8784939"/><text x="83.5197%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;mws5::words::Word&gt;&gt; (8,685,927 samples, 0.01%)</title><rect x="83.2813%" y="389" width="0.0115%" height="15" fill="rgb(240,116,54)" fg:x="63017813228" fg:w="8685927"/><text x="83.5313%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;mws5::words::Word,std::hash::random::RandomState&gt;&gt; (8,685,927 samples, 0.01%)</title><rect x="83.2813%" y="373" width="0.0115%" height="15" fill="rgb(216,10,36)" fg:x="63017813228" fg:w="8685927"/><text x="83.5313%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;mws5::words::Word,(),std::hash::random::RandomState&gt;&gt; (8,685,927 samples, 0.01%)</title><rect x="83.2813%" y="357" width="0.0115%" height="15" fill="rgb(222,72,44)" fg:x="63017813228" fg:w="8685927"/><text x="83.5313%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(mws5::words::Word,())&gt;&gt; (8,685,927 samples, 0.01%)</title><rect x="83.2813%" y="341" width="0.0115%" height="15" fill="rgb(232,159,9)" fg:x="63017813228" fg:w="8685927"/><text x="83.5313%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,685,927 samples, 0.01%)</title><rect x="83.2813%" y="325" width="0.0115%" height="15" fill="rgb(210,39,32)" fg:x="63017813228" fg:w="8685927"/><text x="83.5313%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (8,685,927 samples, 0.01%)</title><rect x="83.2813%" y="309" width="0.0115%" height="15" fill="rgb(216,194,45)" fg:x="63017813228" fg:w="8685927"/><text x="83.5313%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (8,685,927 samples, 0.01%)</title><rect x="83.2813%" y="293" width="0.0115%" height="15" fill="rgb(218,18,35)" fg:x="63017813228" fg:w="8685927"/><text x="83.5313%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8,685,927 samples, 0.01%)</title><rect x="83.2813%" y="277" width="0.0115%" height="15" fill="rgb(207,83,51)" fg:x="63017813228" fg:w="8685927"/><text x="83.5313%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (8,685,927 samples, 0.01%)</title><rect x="83.2813%" y="261" width="0.0115%" height="15" fill="rgb(225,63,43)" fg:x="63017813228" fg:w="8685927"/><text x="83.5313%" y="271.50"></text></g><g><title>mws5::words::Word::is_fit (48,414,715 samples, 0.06%)</title><rect x="83.2928%" y="389" width="0.0640%" height="15" fill="rgb(207,57,36)" fg:x="63026499155" fg:w="48414715"/><text x="83.5428%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (17,883,884 samples, 0.02%)</title><rect x="83.3332%" y="373" width="0.0236%" height="15" fill="rgb(216,99,33)" fg:x="63057029986" fg:w="17883884"/><text x="83.5832%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (17,883,884 samples, 0.02%)</title><rect x="83.3332%" y="357" width="0.0236%" height="15" fill="rgb(225,42,16)" fg:x="63057029986" fg:w="17883884"/><text x="83.5832%" y="367.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17,883,884 samples, 0.02%)</title><rect x="83.3332%" y="341" width="0.0236%" height="15" fill="rgb(220,201,45)" fg:x="63057029986" fg:w="17883884"/><text x="83.5832%" y="351.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (17,883,884 samples, 0.02%)</title><rect x="83.3332%" y="325" width="0.0236%" height="15" fill="rgb(225,33,4)" fg:x="63057029986" fg:w="17883884"/><text x="83.5832%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8,845,694 samples, 0.01%)</title><rect x="83.3626%" y="245" width="0.0117%" height="15" fill="rgb(224,33,50)" fg:x="63079278757" fg:w="8845694"/><text x="83.6126%" y="255.50"></text></g><g><title>hashbrown::map::make_hash (21,866,654 samples, 0.03%)</title><rect x="83.3568%" y="325" width="0.0289%" height="15" fill="rgb(246,198,51)" fg:x="63074913870" fg:w="21866654"/><text x="83.6068%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (21,866,654 samples, 0.03%)</title><rect x="83.3568%" y="309" width="0.0289%" height="15" fill="rgb(205,22,4)" fg:x="63074913870" fg:w="21866654"/><text x="83.6068%" y="319.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (21,866,654 samples, 0.03%)</title><rect x="83.3568%" y="293" width="0.0289%" height="15" fill="rgb(206,3,8)" fg:x="63074913870" fg:w="21866654"/><text x="83.6068%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (21,866,654 samples, 0.03%)</title><rect x="83.3568%" y="277" width="0.0289%" height="15" fill="rgb(251,23,15)" fg:x="63074913870" fg:w="21866654"/><text x="83.6068%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (21,866,654 samples, 0.03%)</title><rect x="83.3568%" y="261" width="0.0289%" height="15" fill="rgb(252,88,28)" fg:x="63074913870" fg:w="21866654"/><text x="83.6068%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8,656,073 samples, 0.01%)</title><rect x="83.3743%" y="245" width="0.0114%" height="15" fill="rgb(212,127,14)" fg:x="63088124451" fg:w="8656073"/><text x="83.6243%" y="255.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (30,591,226 samples, 0.04%)</title><rect x="83.3568%" y="389" width="0.0404%" height="15" fill="rgb(247,145,37)" fg:x="63074913870" fg:w="30591226"/><text x="83.6068%" y="399.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (30,591,226 samples, 0.04%)</title><rect x="83.3568%" y="373" width="0.0404%" height="15" fill="rgb(209,117,53)" fg:x="63074913870" fg:w="30591226"/><text x="83.6068%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (30,591,226 samples, 0.04%)</title><rect x="83.3568%" y="357" width="0.0404%" height="15" fill="rgb(212,90,42)" fg:x="63074913870" fg:w="30591226"/><text x="83.6068%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (30,591,226 samples, 0.04%)</title><rect x="83.3568%" y="341" width="0.0404%" height="15" fill="rgb(218,164,37)" fg:x="63074913870" fg:w="30591226"/><text x="83.6068%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8,724,572 samples, 0.01%)</title><rect x="83.3857%" y="325" width="0.0115%" height="15" fill="rgb(246,65,34)" fg:x="63096780524" fg:w="8724572"/><text x="83.6357%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8,724,572 samples, 0.01%)</title><rect x="83.3857%" y="309" width="0.0115%" height="15" fill="rgb(231,100,33)" fg:x="63096780524" fg:w="8724572"/><text x="83.6357%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (8,724,572 samples, 0.01%)</title><rect x="83.3857%" y="293" width="0.0115%" height="15" fill="rgb(228,126,14)" fg:x="63096780524" fg:w="8724572"/><text x="83.6357%" y="303.50"></text></g><g><title>mws5::dict::Dict::is_fit (14,489,999,467 samples, 19.15%)</title><rect x="64.2538%" y="405" width="19.1493%" height="15" fill="rgb(215,173,21)" fg:x="48619909946" fg:w="14489999467"/><text x="64.5038%" y="415.50">mws5::dict::Dict::is_fit</text></g><g><title>mws5::search::cross_fit (14,494,355,536 samples, 19.16%)</title><rect x="64.2538%" y="421" width="19.1550%" height="15" fill="rgb(210,6,40)" fg:x="48619909946" fg:w="14494355536"/><text x="64.5038%" y="431.50">mws5::search::cross_fit</text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (31,716,543,577 samples, 41.92%)</title><rect x="41.4995%" y="437" width="41.9151%" height="15" fill="rgb(212,48,18)" fg:x="31402075642" fg:w="31716543577"/><text x="41.7495%" y="447.50">mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all</text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::get (8,726,462 samples, 0.01%)</title><rect x="83.4146%" y="405" width="0.0115%" height="15" fill="rgb(230,214,11)" fg:x="63118619219" fg:w="8726462"/><text x="83.6646%" y="415.50"></text></g><g><title>&lt;caches::lfu::wtinylfu::WTinyLFUCache&lt;K,V,KH,FH,RH,WH&gt; as caches::cache_api::Cache&lt;K,V&gt;&gt;::put (8,830,814 samples, 0.01%)</title><rect x="83.4261%" y="405" width="0.0117%" height="15" fill="rgb(254,105,39)" fg:x="63127345681" fg:w="8830814"/><text x="83.6761%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::_{{closure}} (398,862,941 samples, 0.53%)</title><rect x="83.4776%" y="277" width="0.5271%" height="15" fill="rgb(245,158,5)" fg:x="63166307069" fg:w="398862941"/><text x="83.7276%" y="287.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (390,227,867 samples, 0.52%)</title><rect x="83.4890%" y="261" width="0.5157%" height="15" fill="rgb(249,208,11)" fg:x="63174942143" fg:w="390227867"/><text x="83.7390%" y="271.50"></text></g><g><title>mws5::words::Word::is_fit (337,520,497 samples, 0.45%)</title><rect x="83.5586%" y="245" width="0.4461%" height="15" fill="rgb(210,39,28)" fg:x="63227649513" fg:w="337520497"/><text x="83.8086%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (173,383,111 samples, 0.23%)</title><rect x="83.7756%" y="229" width="0.2291%" height="15" fill="rgb(211,56,53)" fg:x="63391786899" fg:w="173383111"/><text x="84.0256%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (173,383,111 samples, 0.23%)</title><rect x="83.7756%" y="213" width="0.2291%" height="15" fill="rgb(226,201,30)" fg:x="63391786899" fg:w="173383111"/><text x="84.0256%" y="223.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (173,383,111 samples, 0.23%)</title><rect x="83.7756%" y="197" width="0.2291%" height="15" fill="rgb(239,101,34)" fg:x="63391786899" fg:w="173383111"/><text x="84.0256%" y="207.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (173,383,111 samples, 0.23%)</title><rect x="83.7756%" y="181" width="0.2291%" height="15" fill="rgb(226,209,5)" fg:x="63391786899" fg:w="173383111"/><text x="84.0256%" y="191.50"></text></g><g><title>core::iter::adapters::copied::copy_fold::_{{closure}} (425,227,601 samples, 0.56%)</title><rect x="83.4776%" y="309" width="0.5620%" height="15" fill="rgb(250,105,47)" fg:x="63166307069" fg:w="425227601"/><text x="83.7276%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (425,227,601 samples, 0.56%)</title><rect x="83.4776%" y="293" width="0.5620%" height="15" fill="rgb(230,72,3)" fg:x="63166307069" fg:w="425227601"/><text x="83.7276%" y="303.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (26,364,660 samples, 0.03%)</title><rect x="84.0047%" y="277" width="0.0348%" height="15" fill="rgb(232,218,39)" fg:x="63565170010" fg:w="26364660"/><text x="84.2547%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (494,575,408 samples, 0.65%)</title><rect x="83.4378%" y="405" width="0.6536%" height="15" fill="rgb(248,166,6)" fg:x="63136176495" fg:w="494575408"/><text x="83.6878%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (494,575,408 samples, 0.65%)</title><rect x="83.4378%" y="389" width="0.6536%" height="15" fill="rgb(247,89,20)" fg:x="63136176495" fg:w="494575408"/><text x="83.6878%" y="399.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (494,575,408 samples, 0.65%)</title><rect x="83.4378%" y="373" width="0.6536%" height="15" fill="rgb(248,130,54)" fg:x="63136176495" fg:w="494575408"/><text x="83.6878%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (494,575,408 samples, 0.65%)</title><rect x="83.4378%" y="357" width="0.6536%" height="15" fill="rgb(234,196,4)" fg:x="63136176495" fg:w="494575408"/><text x="83.6878%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (494,575,408 samples, 0.65%)</title><rect x="83.4378%" y="341" width="0.6536%" height="15" fill="rgb(250,143,31)" fg:x="63136176495" fg:w="494575408"/><text x="83.6878%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (494,575,408 samples, 0.65%)</title><rect x="83.4378%" y="325" width="0.6536%" height="15" fill="rgb(211,110,34)" fg:x="63136176495" fg:w="494575408"/><text x="83.6878%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (39,217,233 samples, 0.05%)</title><rect x="84.0395%" y="309" width="0.0518%" height="15" fill="rgb(215,124,48)" fg:x="63591534670" fg:w="39217233"/><text x="84.2895%" y="319.50"></text></g><g><title>mws5::search::best_pos (516,545,833 samples, 0.68%)</title><rect x="83.4146%" y="437" width="0.6826%" height="15" fill="rgb(216,46,13)" fg:x="63118619219" fg:w="516545833"/><text x="83.6646%" y="447.50"></text></g><g><title>mws5::dict::Dict::match_count (516,545,833 samples, 0.68%)</title><rect x="83.4146%" y="421" width="0.6826%" height="15" fill="rgb(205,184,25)" fg:x="63118619219" fg:w="516545833"/><text x="83.6646%" y="431.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (69,357,549 samples, 0.09%)</title><rect x="84.6999%" y="325" width="0.0917%" height="15" fill="rgb(228,1,10)" fg:x="64091188211" fg:w="69357549"/><text x="84.9499%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (73,451,195 samples, 0.10%)</title><rect x="84.6999%" y="341" width="0.0971%" height="15" fill="rgb(213,116,27)" fg:x="64091188211" fg:w="73451195"/><text x="84.9499%" y="351.50"></text></g><g><title>__perf_event_task_sched_out (10,133,758 samples, 0.01%)</title><rect x="87.2570%" y="133" width="0.0134%" height="15" fill="rgb(241,95,50)" fg:x="66026134833" fg:w="10133758"/><text x="87.5070%" y="143.50"></text></g><g><title>srso_return_thunk (10,133,758 samples, 0.01%)</title><rect x="87.2570%" y="117" width="0.0134%" height="15" fill="rgb(238,48,32)" fg:x="66026134833" fg:w="10133758"/><text x="87.5070%" y="127.50"></text></g><g><title>schedule (10,133,790 samples, 0.01%)</title><rect x="87.2570%" y="165" width="0.0134%" height="15" fill="rgb(235,113,49)" fg:x="66026134833" fg:w="10133790"/><text x="87.5070%" y="175.50"></text></g><g><title>__schedule (10,133,790 samples, 0.01%)</title><rect x="87.2570%" y="149" width="0.0134%" height="15" fill="rgb(205,127,43)" fg:x="66026134833" fg:w="10133790"/><text x="87.5070%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (765,713,035 samples, 1.01%)</title><rect x="86.2584%" y="261" width="1.0119%" height="15" fill="rgb(250,162,2)" fg:x="65270555813" fg:w="765713035"/><text x="86.5084%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (765,713,035 samples, 1.01%)</title><rect x="86.2584%" y="245" width="1.0119%" height="15" fill="rgb(220,13,41)" fg:x="65270555813" fg:w="765713035"/><text x="86.5084%" y="255.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (765,713,035 samples, 1.01%)</title><rect x="86.2584%" y="229" width="1.0119%" height="15" fill="rgb(249,221,25)" fg:x="65270555813" fg:w="765713035"/><text x="86.5084%" y="239.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (765,713,035 samples, 1.01%)</title><rect x="86.2584%" y="213" width="1.0119%" height="15" fill="rgb(215,208,19)" fg:x="65270555813" fg:w="765713035"/><text x="86.5084%" y="223.50"></text></g><g><title>asm_sysvec_call_function_single (10,134,031 samples, 0.01%)</title><rect x="87.2570%" y="197" width="0.0134%" height="15" fill="rgb(236,175,2)" fg:x="66026134817" fg:w="10134031"/><text x="87.5070%" y="207.50"></text></g><g><title>irqentry_exit_to_user_mode (10,134,031 samples, 0.01%)</title><rect x="87.2570%" y="181" width="0.0134%" height="15" fill="rgb(241,52,2)" fg:x="66026134817" fg:w="10134031"/><text x="87.5070%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,400,942,885 samples, 3.17%)</title><rect x="84.1031%" y="405" width="3.1730%" height="15" fill="rgb(248,140,14)" fg:x="63639601874" fg:w="2400942885"/><text x="84.3531%" y="415.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::find (2,400,942,885 samples, 3.17%)</title><rect x="84.1031%" y="389" width="3.1730%" height="15" fill="rgb(253,22,42)" fg:x="63639601874" fg:w="2400942885"/><text x="84.3531%" y="399.50">cor..</text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,400,942,885 samples, 3.17%)</title><rect x="84.1031%" y="373" width="3.1730%" height="15" fill="rgb(234,61,47)" fg:x="63639601874" fg:w="2400942885"/><text x="84.3531%" y="383.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,400,942,885 samples, 3.17%)</title><rect x="84.1031%" y="357" width="3.1730%" height="15" fill="rgb(208,226,15)" fg:x="63639601874" fg:w="2400942885"/><text x="84.3531%" y="367.50">cor..</text></g><g><title>core::iter::adapters::copied::copy_try_fold::_{{closure}} (1,875,905,353 samples, 2.48%)</title><rect x="84.7969%" y="341" width="2.4791%" height="15" fill="rgb(217,221,4)" fg:x="64164639406" fg:w="1875905353"/><text x="85.0469%" y="351.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (1,875,905,353 samples, 2.48%)</title><rect x="84.7969%" y="325" width="2.4791%" height="15" fill="rgb(212,174,34)" fg:x="64164639406" fg:w="1875905353"/><text x="85.0469%" y="335.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,875,905,353 samples, 2.48%)</title><rect x="84.7969%" y="309" width="2.4791%" height="15" fill="rgb(253,83,4)" fg:x="64164639406" fg:w="1875905353"/><text x="85.0469%" y="319.50">co..</text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (1,875,905,353 samples, 2.48%)</title><rect x="84.7969%" y="293" width="2.4791%" height="15" fill="rgb(250,195,49)" fg:x="64164639406" fg:w="1875905353"/><text x="85.0469%" y="303.50">mw..</text></g><g><title>mws5::words::Word::is_fit (1,592,682,854 samples, 2.10%)</title><rect x="85.1712%" y="277" width="2.1048%" height="15" fill="rgb(241,192,25)" fg:x="64447861905" fg:w="1592682854"/><text x="85.4212%" y="287.50">m..</text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,850,013 samples, 0.01%)</title><rect x="87.2760%" y="405" width="0.0117%" height="15" fill="rgb(208,124,10)" fg:x="66040544759" fg:w="8850013"/><text x="87.5260%" y="415.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,850,013 samples, 0.01%)</title><rect x="87.2760%" y="389" width="0.0117%" height="15" fill="rgb(222,33,0)" fg:x="66040544759" fg:w="8850013"/><text x="87.5260%" y="399.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,850,013 samples, 0.01%)</title><rect x="87.2760%" y="373" width="0.0117%" height="15" fill="rgb(234,209,28)" fg:x="66040544759" fg:w="8850013"/><text x="87.5260%" y="383.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,850,013 samples, 0.01%)</title><rect x="87.2760%" y="357" width="0.0117%" height="15" fill="rgb(224,11,23)" fg:x="66040544759" fg:w="8850013"/><text x="87.5260%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,850,013 samples, 0.01%)</title><rect x="87.2760%" y="341" width="0.0117%" height="15" fill="rgb(232,99,1)" fg:x="66040544759" fg:w="8850013"/><text x="87.5260%" y="351.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (8,850,013 samples, 0.01%)</title><rect x="87.2760%" y="325" width="0.0117%" height="15" fill="rgb(237,95,45)" fg:x="66040544759" fg:w="8850013"/><text x="87.5260%" y="335.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (8,850,013 samples, 0.01%)</title><rect x="87.2760%" y="309" width="0.0117%" height="15" fill="rgb(208,109,11)" fg:x="66040544759" fg:w="8850013"/><text x="87.5260%" y="319.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (8,850,013 samples, 0.01%)</title><rect x="87.2760%" y="293" width="0.0117%" height="15" fill="rgb(216,190,48)" fg:x="66040544759" fg:w="8850013"/><text x="87.5260%" y="303.50"></text></g><g><title>mws5::words::Word::is_fit (17,424,463 samples, 0.02%)</title><rect x="87.2877%" y="405" width="0.0230%" height="15" fill="rgb(251,171,36)" fg:x="66049394772" fg:w="17424463"/><text x="87.5377%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,602,231 samples, 0.01%)</title><rect x="87.2994%" y="389" width="0.0114%" height="15" fill="rgb(230,62,22)" fg:x="66058217004" fg:w="8602231"/><text x="87.5494%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (8,602,231 samples, 0.01%)</title><rect x="87.2994%" y="373" width="0.0114%" height="15" fill="rgb(225,114,35)" fg:x="66058217004" fg:w="8602231"/><text x="87.5494%" y="383.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,602,231 samples, 0.01%)</title><rect x="87.2994%" y="357" width="0.0114%" height="15" fill="rgb(215,118,42)" fg:x="66058217004" fg:w="8602231"/><text x="87.5494%" y="367.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (8,602,231 samples, 0.01%)</title><rect x="87.2994%" y="341" width="0.0114%" height="15" fill="rgb(243,119,21)" fg:x="66058217004" fg:w="8602231"/><text x="87.5494%" y="351.50"></text></g><g><title>mws5::dict::Dict::is_fit (2,440,416,276 samples, 3.23%)</title><rect x="84.0972%" y="421" width="3.2251%" height="15" fill="rgb(252,177,53)" fg:x="63635165052" fg:w="2440416276"/><text x="84.3472%" y="431.50">mws..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (8,762,093 samples, 0.01%)</title><rect x="87.3108%" y="405" width="0.0116%" height="15" fill="rgb(237,209,29)" fg:x="66066819235" fg:w="8762093"/><text x="87.5608%" y="415.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (8,762,093 samples, 0.01%)</title><rect x="87.3108%" y="389" width="0.0116%" height="15" fill="rgb(212,65,23)" fg:x="66066819235" fg:w="8762093"/><text x="87.5608%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (8,762,093 samples, 0.01%)</title><rect x="87.3108%" y="373" width="0.0116%" height="15" fill="rgb(230,222,46)" fg:x="66066819235" fg:w="8762093"/><text x="87.5608%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8,762,093 samples, 0.01%)</title><rect x="87.3108%" y="357" width="0.0116%" height="15" fill="rgb(215,135,32)" fg:x="66066819235" fg:w="8762093"/><text x="87.5608%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (8,762,093 samples, 0.01%)</title><rect x="87.3108%" y="341" width="0.0116%" height="15" fill="rgb(246,101,22)" fg:x="66066819235" fg:w="8762093"/><text x="87.5608%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8,762,093 samples, 0.01%)</title><rect x="87.3108%" y="325" width="0.0116%" height="15" fill="rgb(206,107,13)" fg:x="66066819235" fg:w="8762093"/><text x="87.5608%" y="335.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (8,762,093 samples, 0.01%)</title><rect x="87.3108%" y="309" width="0.0116%" height="15" fill="rgb(250,100,44)" fg:x="66066819235" fg:w="8762093"/><text x="87.5608%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8,762,093 samples, 0.01%)</title><rect x="87.3108%" y="293" width="0.0116%" height="15" fill="rgb(231,147,38)" fg:x="66066819235" fg:w="8762093"/><text x="87.5608%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8,762,093 samples, 0.01%)</title><rect x="87.3108%" y="277" width="0.0116%" height="15" fill="rgb(229,8,40)" fg:x="66066819235" fg:w="8762093"/><text x="87.5608%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8,762,093 samples, 0.01%)</title><rect x="87.3108%" y="261" width="0.0116%" height="15" fill="rgb(221,135,30)" fg:x="66066819235" fg:w="8762093"/><text x="87.5608%" y="271.50"></text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (35,059,761,938 samples, 46.33%)</title><rect x="40.9948%" y="453" width="46.3333%" height="15" fill="rgb(249,193,18)" fg:x="31020204351" fg:w="35059761938"/><text x="41.2448%" y="463.50">mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all</text></g><g><title>mws5::search::cross_fit (2,444,801,237 samples, 3.23%)</title><rect x="84.0972%" y="437" width="3.2309%" height="15" fill="rgb(209,133,39)" fg:x="63635165052" fg:w="2444801237"/><text x="84.3472%" y="447.50">mws..</text></g><g><title>mws5::search::best_pos (30,014,335 samples, 0.04%)</title><rect x="87.3281%" y="453" width="0.0397%" height="15" fill="rgb(232,100,14)" fg:x="66079966289" fg:w="30014335"/><text x="87.5781%" y="463.50"></text></g><g><title>mws5::dict::Dict::match_count (30,014,335 samples, 0.04%)</title><rect x="87.3281%" y="437" width="0.0397%" height="15" fill="rgb(224,185,1)" fg:x="66079966289" fg:w="30014335"/><text x="87.5781%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (30,014,335 samples, 0.04%)</title><rect x="87.3281%" y="421" width="0.0397%" height="15" fill="rgb(223,139,8)" fg:x="66079966289" fg:w="30014335"/><text x="87.5781%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (30,014,335 samples, 0.04%)</title><rect x="87.3281%" y="405" width="0.0397%" height="15" fill="rgb(232,213,38)" fg:x="66079966289" fg:w="30014335"/><text x="87.5781%" y="415.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (30,014,335 samples, 0.04%)</title><rect x="87.3281%" y="389" width="0.0397%" height="15" fill="rgb(207,94,22)" fg:x="66079966289" fg:w="30014335"/><text x="87.5781%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30,014,335 samples, 0.04%)</title><rect x="87.3281%" y="373" width="0.0397%" height="15" fill="rgb(219,183,54)" fg:x="66079966289" fg:w="30014335"/><text x="87.5781%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30,014,335 samples, 0.04%)</title><rect x="87.3281%" y="357" width="0.0397%" height="15" fill="rgb(216,185,54)" fg:x="66079966289" fg:w="30014335"/><text x="87.5781%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30,014,335 samples, 0.04%)</title><rect x="87.3281%" y="341" width="0.0397%" height="15" fill="rgb(254,217,39)" fg:x="66079966289" fg:w="30014335"/><text x="87.5781%" y="351.50"></text></g><g><title>core::iter::adapters::copied::copy_fold::_{{closure}} (30,014,335 samples, 0.04%)</title><rect x="87.3281%" y="325" width="0.0397%" height="15" fill="rgb(240,178,23)" fg:x="66079966289" fg:w="30014335"/><text x="87.5781%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (30,014,335 samples, 0.04%)</title><rect x="87.3281%" y="309" width="0.0397%" height="15" fill="rgb(218,11,47)" fg:x="66079966289" fg:w="30014335"/><text x="87.5781%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::_{{closure}} (30,014,335 samples, 0.04%)</title><rect x="87.3281%" y="293" width="0.0397%" height="15" fill="rgb(218,51,51)" fg:x="66079966289" fg:w="30014335"/><text x="87.5781%" y="303.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (25,698,986 samples, 0.03%)</title><rect x="87.3338%" y="277" width="0.0340%" height="15" fill="rgb(238,126,27)" fg:x="66084281638" fg:w="25698986"/><text x="87.5838%" y="287.50"></text></g><g><title>mws5::words::Word::is_fit (16,950,600 samples, 0.02%)</title><rect x="87.3454%" y="261" width="0.0224%" height="15" fill="rgb(249,202,22)" fg:x="66093030024" fg:w="16950600"/><text x="87.5954%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,229,433 samples, 0.01%)</title><rect x="87.3569%" y="245" width="0.0109%" height="15" fill="rgb(254,195,49)" fg:x="66101751191" fg:w="8229433"/><text x="87.6069%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (8,229,433 samples, 0.01%)</title><rect x="87.3569%" y="229" width="0.0109%" height="15" fill="rgb(208,123,14)" fg:x="66101751191" fg:w="8229433"/><text x="87.6069%" y="239.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,229,433 samples, 0.01%)</title><rect x="87.3569%" y="213" width="0.0109%" height="15" fill="rgb(224,200,8)" fg:x="66101751191" fg:w="8229433"/><text x="87.6069%" y="223.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (8,229,433 samples, 0.01%)</title><rect x="87.3569%" y="197" width="0.0109%" height="15" fill="rgb(217,61,36)" fg:x="66101751191" fg:w="8229433"/><text x="87.6069%" y="207.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21,906,931 samples, 0.03%)</title><rect x="87.5009%" y="357" width="0.0290%" height="15" fill="rgb(206,35,45)" fg:x="66210719034" fg:w="21906931"/><text x="87.7509%" y="367.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (17,474,031 samples, 0.02%)</title><rect x="87.5068%" y="341" width="0.0231%" height="15" fill="rgb(217,65,33)" fg:x="66215151934" fg:w="17474031"/><text x="87.7568%" y="351.50"></text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (35,678,435,953 samples, 47.15%)</title><rect x="40.9833%" y="501" width="47.1509%" height="15" fill="rgb(222,158,48)" fg:x="31011507198" fg:w="35678435953"/><text x="41.2333%" y="511.50">mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all</text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (35,678,435,953 samples, 47.15%)</title><rect x="40.9833%" y="485" width="47.1509%" height="15" fill="rgb(254,2,54)" fg:x="31011507198" fg:w="35678435953"/><text x="41.2333%" y="495.50">mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all</text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (35,678,435,953 samples, 47.15%)</title><rect x="40.9833%" y="469" width="47.1509%" height="15" fill="rgb(250,143,38)" fg:x="31011507198" fg:w="35678435953"/><text x="41.2333%" y="479.50">mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all</text></g><g><title>mws5::search::cross_fit (579,962,527 samples, 0.77%)</title><rect x="87.3678%" y="453" width="0.7665%" height="15" fill="rgb(248,25,0)" fg:x="66109980624" fg:w="579962527"/><text x="87.6178%" y="463.50"></text></g><g><title>mws5::dict::Dict::is_fit (579,962,527 samples, 0.77%)</title><rect x="87.3678%" y="437" width="0.7665%" height="15" fill="rgb(206,152,27)" fg:x="66109980624" fg:w="579962527"/><text x="87.6178%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (579,962,527 samples, 0.77%)</title><rect x="87.3678%" y="421" width="0.7665%" height="15" fill="rgb(240,77,30)" fg:x="66109980624" fg:w="579962527"/><text x="87.6178%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (579,962,527 samples, 0.77%)</title><rect x="87.3678%" y="405" width="0.7665%" height="15" fill="rgb(231,5,3)" fg:x="66109980624" fg:w="579962527"/><text x="87.6178%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (579,962,527 samples, 0.77%)</title><rect x="87.3678%" y="389" width="0.7665%" height="15" fill="rgb(207,226,32)" fg:x="66109980624" fg:w="579962527"/><text x="87.6178%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (579,962,527 samples, 0.77%)</title><rect x="87.3678%" y="373" width="0.7665%" height="15" fill="rgb(222,207,47)" fg:x="66109980624" fg:w="579962527"/><text x="87.6178%" y="383.50"></text></g><g><title>core::iter::adapters::copied::copy_try_fold::_{{closure}} (457,317,186 samples, 0.60%)</title><rect x="87.5299%" y="357" width="0.6044%" height="15" fill="rgb(229,115,45)" fg:x="66232625965" fg:w="457317186"/><text x="87.7799%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (457,317,186 samples, 0.60%)</title><rect x="87.5299%" y="341" width="0.6044%" height="15" fill="rgb(224,191,6)" fg:x="66232625965" fg:w="457317186"/><text x="87.7799%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (457,317,186 samples, 0.60%)</title><rect x="87.5299%" y="325" width="0.6044%" height="15" fill="rgb(230,227,24)" fg:x="66232625965" fg:w="457317186"/><text x="87.7799%" y="335.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (457,317,186 samples, 0.60%)</title><rect x="87.5299%" y="309" width="0.6044%" height="15" fill="rgb(228,80,19)" fg:x="66232625965" fg:w="457317186"/><text x="87.7799%" y="319.50"></text></g><g><title>mws5::words::Word::is_fit (413,925,658 samples, 0.55%)</title><rect x="87.5872%" y="293" width="0.5470%" height="15" fill="rgb(247,229,0)" fg:x="66276017493" fg:w="413925658"/><text x="87.8372%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (165,701,613 samples, 0.22%)</title><rect x="87.9153%" y="277" width="0.2190%" height="15" fill="rgb(237,194,15)" fg:x="66524241538" fg:w="165701613"/><text x="88.1653%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (165,701,613 samples, 0.22%)</title><rect x="87.9153%" y="261" width="0.2190%" height="15" fill="rgb(219,203,20)" fg:x="66524241538" fg:w="165701613"/><text x="88.1653%" y="271.50"></text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (165,701,613 samples, 0.22%)</title><rect x="87.9153%" y="245" width="0.2190%" height="15" fill="rgb(234,128,8)" fg:x="66524241538" fg:w="165701613"/><text x="88.1653%" y="255.50"></text></g><g><title>mws5::words::Word::bits::_{{closure}} (165,701,613 samples, 0.22%)</title><rect x="87.9153%" y="229" width="0.2190%" height="15" fill="rgb(248,202,8)" fg:x="66524241538" fg:w="165701613"/><text x="88.1653%" y="239.50"></text></g><g><title>ksys_write (12,872,647 samples, 0.02%)</title><rect x="88.1342%" y="101" width="0.0170%" height="15" fill="rgb(206,104,37)" fg:x="66689943151" fg:w="12872647"/><text x="88.3842%" y="111.50"></text></g><g><title>vfs_write (12,872,647 samples, 0.02%)</title><rect x="88.1342%" y="85" width="0.0170%" height="15" fill="rgb(223,8,27)" fg:x="66689943151" fg:w="12872647"/><text x="88.3842%" y="95.50"></text></g><g><title>ext4_buffered_write_iter (12,872,647 samples, 0.02%)</title><rect x="88.1342%" y="69" width="0.0170%" height="15" fill="rgb(216,217,28)" fg:x="66689943151" fg:w="12872647"/><text x="88.3842%" y="79.50"></text></g><g><title>generic_perform_write (8,630,528 samples, 0.01%)</title><rect x="88.1399%" y="53" width="0.0114%" height="15" fill="rgb(249,199,1)" fg:x="66694185270" fg:w="8630528"/><text x="88.3899%" y="63.50"></text></g><g><title>serde_json::ser::Formatter::begin_string (16,842,604 samples, 0.02%)</title><rect x="88.1342%" y="277" width="0.0223%" height="15" fill="rgb(240,85,17)" fg:x="66689943151" fg:w="16842604"/><text x="88.3842%" y="287.50"></text></g><g><title>std::io::Write::write_all (16,842,604 samples, 0.02%)</title><rect x="88.1342%" y="261" width="0.0223%" height="15" fill="rgb(206,108,45)" fg:x="66689943151" fg:w="16842604"/><text x="88.3842%" y="271.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (16,842,604 samples, 0.02%)</title><rect x="88.1342%" y="245" width="0.0223%" height="15" fill="rgb(245,210,41)" fg:x="66689943151" fg:w="16842604"/><text x="88.3842%" y="255.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (16,842,604 samples, 0.02%)</title><rect x="88.1342%" y="229" width="0.0223%" height="15" fill="rgb(206,13,37)" fg:x="66689943151" fg:w="16842604"/><text x="88.3842%" y="239.50"></text></g><g><title>std::sys::fs::unix::File::write (16,842,604 samples, 0.02%)</title><rect x="88.1342%" y="213" width="0.0223%" height="15" fill="rgb(250,61,18)" fg:x="66689943151" fg:w="16842604"/><text x="88.3842%" y="223.50"></text></g><g><title>std::sys::fd::unix::FileDesc::write (16,842,604 samples, 0.02%)</title><rect x="88.1342%" y="197" width="0.0223%" height="15" fill="rgb(235,172,48)" fg:x="66689943151" fg:w="16842604"/><text x="88.3842%" y="207.50"></text></g><g><title>__GI___libc_write (16,842,604 samples, 0.02%)</title><rect x="88.1342%" y="181" width="0.0223%" height="15" fill="rgb(249,201,17)" fg:x="66689943151" fg:w="16842604"/><text x="88.3842%" y="191.50"></text></g><g><title>__syscall_cancel (16,842,604 samples, 0.02%)</title><rect x="88.1342%" y="165" width="0.0223%" height="15" fill="rgb(219,208,6)" fg:x="66689943151" fg:w="16842604"/><text x="88.3842%" y="175.50"></text></g><g><title>__internal_syscall_cancel (16,842,604 samples, 0.02%)</title><rect x="88.1342%" y="149" width="0.0223%" height="15" fill="rgb(248,31,23)" fg:x="66689943151" fg:w="16842604"/><text x="88.3842%" y="159.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (16,842,604 samples, 0.02%)</title><rect x="88.1342%" y="133" width="0.0223%" height="15" fill="rgb(245,15,42)" fg:x="66689943151" fg:w="16842604"/><text x="88.3842%" y="143.50"></text></g><g><title>do_syscall_64 (16,842,604 samples, 0.02%)</title><rect x="88.1342%" y="117" width="0.0223%" height="15" fill="rgb(222,217,39)" fg:x="66689943151" fg:w="16842604"/><text x="88.3842%" y="127.50"></text></g><g><title>serde_json::ser::Formatter::end_string (12,439,885 samples, 0.02%)</title><rect x="88.1565%" y="277" width="0.0164%" height="15" fill="rgb(210,219,27)" fg:x="66706785755" fg:w="12439885"/><text x="88.4065%" y="287.50"></text></g><g><title>std::io::Write::write_all (12,439,885 samples, 0.02%)</title><rect x="88.1565%" y="261" width="0.0164%" height="15" fill="rgb(252,166,36)" fg:x="66706785755" fg:w="12439885"/><text x="88.4065%" y="271.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (12,439,885 samples, 0.02%)</title><rect x="88.1565%" y="245" width="0.0164%" height="15" fill="rgb(245,132,34)" fg:x="66706785755" fg:w="12439885"/><text x="88.4065%" y="255.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (12,439,885 samples, 0.02%)</title><rect x="88.1565%" y="229" width="0.0164%" height="15" fill="rgb(236,54,3)" fg:x="66706785755" fg:w="12439885"/><text x="88.4065%" y="239.50"></text></g><g><title>std::sys::fs::unix::File::write (12,439,885 samples, 0.02%)</title><rect x="88.1565%" y="213" width="0.0164%" height="15" fill="rgb(241,173,43)" fg:x="66706785755" fg:w="12439885"/><text x="88.4065%" y="223.50"></text></g><g><title>std::sys::fd::unix::FileDesc::write (12,439,885 samples, 0.02%)</title><rect x="88.1565%" y="197" width="0.0164%" height="15" fill="rgb(215,190,9)" fg:x="66706785755" fg:w="12439885"/><text x="88.4065%" y="207.50"></text></g><g><title>__GI___libc_write (12,439,885 samples, 0.02%)</title><rect x="88.1565%" y="181" width="0.0164%" height="15" fill="rgb(242,101,16)" fg:x="66706785755" fg:w="12439885"/><text x="88.4065%" y="191.50"></text></g><g><title>__syscall_cancel (12,439,885 samples, 0.02%)</title><rect x="88.1565%" y="165" width="0.0164%" height="15" fill="rgb(223,190,21)" fg:x="66706785755" fg:w="12439885"/><text x="88.4065%" y="175.50"></text></g><g><title>__internal_syscall_cancel (12,439,885 samples, 0.02%)</title><rect x="88.1565%" y="149" width="0.0164%" height="15" fill="rgb(215,228,25)" fg:x="66706785755" fg:w="12439885"/><text x="88.4065%" y="159.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12,439,885 samples, 0.02%)</title><rect x="88.1565%" y="133" width="0.0164%" height="15" fill="rgb(225,36,22)" fg:x="66706785755" fg:w="12439885"/><text x="88.4065%" y="143.50"></text></g><g><title>do_syscall_64 (12,439,885 samples, 0.02%)</title><rect x="88.1565%" y="117" width="0.0164%" height="15" fill="rgb(251,106,46)" fg:x="66706785755" fg:w="12439885"/><text x="88.4065%" y="127.50"></text></g><g><title>ksys_write (12,439,885 samples, 0.02%)</title><rect x="88.1565%" y="101" width="0.0164%" height="15" fill="rgb(208,90,1)" fg:x="66706785755" fg:w="12439885"/><text x="88.4065%" y="111.50"></text></g><g><title>vfs_write (12,439,885 samples, 0.02%)</title><rect x="88.1565%" y="85" width="0.0164%" height="15" fill="rgb(243,10,4)" fg:x="66706785755" fg:w="12439885"/><text x="88.4065%" y="95.50"></text></g><g><title>ext4_buffered_write_iter (12,439,885 samples, 0.02%)</title><rect x="88.1565%" y="69" width="0.0164%" height="15" fill="rgb(212,137,27)" fg:x="66706785755" fg:w="12439885"/><text x="88.4065%" y="79.50"></text></g><g><title>generic_perform_write (8,340,579 samples, 0.01%)</title><rect x="88.1619%" y="53" width="0.0110%" height="15" fill="rgb(231,220,49)" fg:x="66710885061" fg:w="8340579"/><text x="88.4119%" y="63.50"></text></g><g><title>ext4_buffered_write_iter (8,667,711 samples, 0.01%)</title><rect x="88.1787%" y="53" width="0.0115%" height="15" fill="rgb(237,96,20)" fg:x="66723560511" fg:w="8667711"/><text x="88.4287%" y="63.50"></text></g><g><title>generic_perform_write (8,667,711 samples, 0.01%)</title><rect x="88.1787%" y="37" width="0.0115%" height="15" fill="rgb(239,229,30)" fg:x="66723560511" fg:w="8667711"/><text x="88.4287%" y="47.50"></text></g><g><title>__GI___libc_write (17,316,344 samples, 0.02%)</title><rect x="88.1787%" y="165" width="0.0229%" height="15" fill="rgb(219,65,33)" fg:x="66723560511" fg:w="17316344"/><text x="88.4287%" y="175.50"></text></g><g><title>__syscall_cancel (17,316,344 samples, 0.02%)</title><rect x="88.1787%" y="149" width="0.0229%" height="15" fill="rgb(243,134,7)" fg:x="66723560511" fg:w="17316344"/><text x="88.4287%" y="159.50"></text></g><g><title>__internal_syscall_cancel (17,316,344 samples, 0.02%)</title><rect x="88.1787%" y="133" width="0.0229%" height="15" fill="rgb(216,177,54)" fg:x="66723560511" fg:w="17316344"/><text x="88.4287%" y="143.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (17,316,344 samples, 0.02%)</title><rect x="88.1787%" y="117" width="0.0229%" height="15" fill="rgb(211,160,20)" fg:x="66723560511" fg:w="17316344"/><text x="88.4287%" y="127.50"></text></g><g><title>do_syscall_64 (17,316,344 samples, 0.02%)</title><rect x="88.1787%" y="101" width="0.0229%" height="15" fill="rgb(239,85,39)" fg:x="66723560511" fg:w="17316344"/><text x="88.4287%" y="111.50"></text></g><g><title>ksys_write (17,316,344 samples, 0.02%)</title><rect x="88.1787%" y="85" width="0.0229%" height="15" fill="rgb(232,125,22)" fg:x="66723560511" fg:w="17316344"/><text x="88.4287%" y="95.50"></text></g><g><title>vfs_write (17,316,344 samples, 0.02%)</title><rect x="88.1787%" y="69" width="0.0229%" height="15" fill="rgb(244,57,34)" fg:x="66723560511" fg:w="17316344"/><text x="88.4287%" y="79.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (55,271,458 samples, 0.07%)</title><rect x="88.1342%" y="325" width="0.0730%" height="15" fill="rgb(214,203,32)" fg:x="66689943151" fg:w="55271458"/><text x="88.3842%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (55,271,458 samples, 0.07%)</title><rect x="88.1342%" y="309" width="0.0730%" height="15" fill="rgb(207,58,43)" fg:x="66689943151" fg:w="55271458"/><text x="88.3842%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (55,271,458 samples, 0.07%)</title><rect x="88.1342%" y="293" width="0.0730%" height="15" fill="rgb(215,193,15)" fg:x="66689943151" fg:w="55271458"/><text x="88.3842%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (25,988,969 samples, 0.03%)</title><rect x="88.1729%" y="277" width="0.0343%" height="15" fill="rgb(232,15,44)" fg:x="66719225640" fg:w="25988969"/><text x="88.4229%" y="287.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (25,988,969 samples, 0.03%)</title><rect x="88.1729%" y="261" width="0.0343%" height="15" fill="rgb(212,3,48)" fg:x="66719225640" fg:w="25988969"/><text x="88.4229%" y="271.50"></text></g><g><title>std::io::Write::write_all (25,988,969 samples, 0.03%)</title><rect x="88.1729%" y="245" width="0.0343%" height="15" fill="rgb(218,128,7)" fg:x="66719225640" fg:w="25988969"/><text x="88.4229%" y="255.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (21,654,098 samples, 0.03%)</title><rect x="88.1787%" y="229" width="0.0286%" height="15" fill="rgb(226,216,39)" fg:x="66723560511" fg:w="21654098"/><text x="88.4287%" y="239.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (21,654,098 samples, 0.03%)</title><rect x="88.1787%" y="213" width="0.0286%" height="15" fill="rgb(243,47,51)" fg:x="66723560511" fg:w="21654098"/><text x="88.4287%" y="223.50"></text></g><g><title>std::sys::fs::unix::File::write (21,654,098 samples, 0.03%)</title><rect x="88.1787%" y="197" width="0.0286%" height="15" fill="rgb(241,183,40)" fg:x="66723560511" fg:w="21654098"/><text x="88.4287%" y="207.50"></text></g><g><title>std::sys::fd::unix::FileDesc::write (21,654,098 samples, 0.03%)</title><rect x="88.1787%" y="181" width="0.0286%" height="15" fill="rgb(231,217,32)" fg:x="66723560511" fg:w="21654098"/><text x="88.4287%" y="191.50"></text></g><g><title>ksys_write (8,401,434 samples, 0.01%)</title><rect x="88.2126%" y="149" width="0.0111%" height="15" fill="rgb(229,61,38)" fg:x="66749262988" fg:w="8401434"/><text x="88.4626%" y="159.50"></text></g><g><title>vfs_write (8,401,434 samples, 0.01%)</title><rect x="88.2126%" y="133" width="0.0111%" height="15" fill="rgb(225,210,5)" fg:x="66749262988" fg:w="8401434"/><text x="88.4626%" y="143.50"></text></g><g><title>_start (35,750,461,071 samples, 47.25%)</title><rect x="40.9833%" y="789" width="47.2461%" height="15" fill="rgb(231,79,45)" fg:x="31011507198" fg:w="35750461071"/><text x="41.2333%" y="799.50">_start</text></g><g><title>__libc_start_main_impl (35,750,461,071 samples, 47.25%)</title><rect x="40.9833%" y="773" width="47.2461%" height="15" fill="rgb(224,100,7)" fg:x="31011507198" fg:w="35750461071"/><text x="41.2333%" y="783.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (35,750,461,071 samples, 47.25%)</title><rect x="40.9833%" y="757" width="47.2461%" height="15" fill="rgb(241,198,18)" fg:x="31011507198" fg:w="35750461071"/><text x="41.2333%" y="767.50">__libc_start_call_main</text></g><g><title>main (35,750,461,071 samples, 47.25%)</title><rect x="40.9833%" y="741" width="47.2461%" height="15" fill="rgb(252,97,53)" fg:x="31011507198" fg:w="35750461071"/><text x="41.2333%" y="751.50">main</text></g><g><title>std::rt::lang_start_internal (35,750,461,071 samples, 47.25%)</title><rect x="40.9833%" y="725" width="47.2461%" height="15" fill="rgb(220,88,7)" fg:x="31011507198" fg:w="35750461071"/><text x="41.2333%" y="735.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (35,750,461,071 samples, 47.25%)</title><rect x="40.9833%" y="709" width="47.2461%" height="15" fill="rgb(213,176,14)" fg:x="31011507198" fg:w="35750461071"/><text x="41.2333%" y="719.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (35,750,461,071 samples, 47.25%)</title><rect x="40.9833%" y="693" width="47.2461%" height="15" fill="rgb(246,73,7)" fg:x="31011507198" fg:w="35750461071"/><text x="41.2333%" y="703.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (35,750,461,071 samples, 47.25%)</title><rect x="40.9833%" y="677" width="47.2461%" height="15" fill="rgb(245,64,36)" fg:x="31011507198" fg:w="35750461071"/><text x="41.2333%" y="687.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (35,750,461,071 samples, 47.25%)</title><rect x="40.9833%" y="661" width="47.2461%" height="15" fill="rgb(245,80,10)" fg:x="31011507198" fg:w="35750461071"/><text x="41.2333%" y="671.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (35,750,461,071 samples, 47.25%)</title><rect x="40.9833%" y="645" width="47.2461%" height="15" fill="rgb(232,107,50)" fg:x="31011507198" fg:w="35750461071"/><text x="41.2333%" y="655.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (35,750,461,071 samples, 47.25%)</title><rect x="40.9833%" y="629" width="47.2461%" height="15" fill="rgb(253,3,0)" fg:x="31011507198" fg:w="35750461071"/><text x="41.2333%" y="639.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (35,750,461,071 samples, 47.25%)</title><rect x="40.9833%" y="613" width="47.2461%" height="15" fill="rgb(212,99,53)" fg:x="31011507198" fg:w="35750461071"/><text x="41.2333%" y="623.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (35,750,461,071 samples, 47.25%)</title><rect x="40.9833%" y="597" width="47.2461%" height="15" fill="rgb(249,111,54)" fg:x="31011507198" fg:w="35750461071"/><text x="41.2333%" y="607.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call..</text></g><g><title>std::rt::lang_start::_{{closure}} (35,750,461,071 samples, 47.25%)</title><rect x="40.9833%" y="581" width="47.2461%" height="15" fill="rgb(249,55,30)" fg:x="31011507198" fg:w="35750461071"/><text x="41.2333%" y="591.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (35,750,461,071 samples, 47.25%)</title><rect x="40.9833%" y="565" width="47.2461%" height="15" fill="rgb(237,47,42)" fg:x="31011507198" fg:w="35750461071"/><text x="41.2333%" y="575.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (35,750,461,071 samples, 47.25%)</title><rect x="40.9833%" y="549" width="47.2461%" height="15" fill="rgb(211,20,18)" fg:x="31011507198" fg:w="35750461071"/><text x="41.2333%" y="559.50">core::ops::function::FnOnce::call_once</text></g><g><title>mws5::main (35,750,461,071 samples, 47.25%)</title><rect x="40.9833%" y="533" width="47.2461%" height="15" fill="rgb(231,203,46)" fg:x="31011507198" fg:w="35750461071"/><text x="41.2333%" y="543.50">mws5::main</text></g><g><title>mws5::run (35,750,461,071 samples, 47.25%)</title><rect x="40.9833%" y="517" width="47.2461%" height="15" fill="rgb(237,142,3)" fg:x="31011507198" fg:w="35750461071"/><text x="41.2333%" y="527.50">mws5::run</text></g><g><title>serde_json::ser::to_writer (72,025,118 samples, 0.10%)</title><rect x="88.1342%" y="501" width="0.0952%" height="15" fill="rgb(241,107,1)" fg:x="66689943151" fg:w="72025118"/><text x="88.3842%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (72,025,118 samples, 0.10%)</title><rect x="88.1342%" y="485" width="0.0952%" height="15" fill="rgb(229,83,13)" fg:x="66689943151" fg:w="72025118"/><text x="88.3842%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (72,025,118 samples, 0.10%)</title><rect x="88.1342%" y="469" width="0.0952%" height="15" fill="rgb(241,91,40)" fg:x="66689943151" fg:w="72025118"/><text x="88.3842%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (72,025,118 samples, 0.10%)</title><rect x="88.1342%" y="453" width="0.0952%" height="15" fill="rgb(225,3,45)" fg:x="66689943151" fg:w="72025118"/><text x="88.3842%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (72,025,118 samples, 0.10%)</title><rect x="88.1342%" y="437" width="0.0952%" height="15" fill="rgb(244,223,14)" fg:x="66689943151" fg:w="72025118"/><text x="88.3842%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (72,025,118 samples, 0.10%)</title><rect x="88.1342%" y="421" width="0.0952%" height="15" fill="rgb(224,124,37)" fg:x="66689943151" fg:w="72025118"/><text x="88.3842%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (72,025,118 samples, 0.10%)</title><rect x="88.1342%" y="405" width="0.0952%" height="15" fill="rgb(251,171,30)" fg:x="66689943151" fg:w="72025118"/><text x="88.3842%" y="415.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (72,025,118 samples, 0.10%)</title><rect x="88.1342%" y="389" width="0.0952%" height="15" fill="rgb(236,46,54)" fg:x="66689943151" fg:w="72025118"/><text x="88.3842%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (72,025,118 samples, 0.10%)</title><rect x="88.1342%" y="373" width="0.0952%" height="15" fill="rgb(245,213,5)" fg:x="66689943151" fg:w="72025118"/><text x="88.3842%" y="383.50"></text></g><g><title>&lt;mws5::squares::Square as serde::ser::Serialize&gt;::serialize (72,025,118 samples, 0.10%)</title><rect x="88.1342%" y="357" width="0.0952%" height="15" fill="rgb(230,144,27)" fg:x="66689943151" fg:w="72025118"/><text x="88.3842%" y="367.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (72,025,118 samples, 0.10%)</title><rect x="88.1342%" y="341" width="0.0952%" height="15" fill="rgb(220,86,6)" fg:x="66689943151" fg:w="72025118"/><text x="88.3842%" y="351.50"></text></g><g><title>serde_json::ser::Formatter::begin_array_value (16,753,660 samples, 0.02%)</title><rect x="88.2073%" y="325" width="0.0221%" height="15" fill="rgb(240,20,13)" fg:x="66745214609" fg:w="16753660"/><text x="88.4573%" y="335.50"></text></g><g><title>std::io::Write::write_all (16,753,660 samples, 0.02%)</title><rect x="88.2073%" y="309" width="0.0221%" height="15" fill="rgb(217,89,34)" fg:x="66745214609" fg:w="16753660"/><text x="88.4573%" y="319.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (12,705,281 samples, 0.02%)</title><rect x="88.2126%" y="293" width="0.0168%" height="15" fill="rgb(229,13,5)" fg:x="66749262988" fg:w="12705281"/><text x="88.4626%" y="303.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (12,705,281 samples, 0.02%)</title><rect x="88.2126%" y="277" width="0.0168%" height="15" fill="rgb(244,67,35)" fg:x="66749262988" fg:w="12705281"/><text x="88.4626%" y="287.50"></text></g><g><title>std::sys::fs::unix::File::write (12,705,281 samples, 0.02%)</title><rect x="88.2126%" y="261" width="0.0168%" height="15" fill="rgb(221,40,2)" fg:x="66749262988" fg:w="12705281"/><text x="88.4626%" y="271.50"></text></g><g><title>std::sys::fd::unix::FileDesc::write (12,705,281 samples, 0.02%)</title><rect x="88.2126%" y="245" width="0.0168%" height="15" fill="rgb(237,157,21)" fg:x="66749262988" fg:w="12705281"/><text x="88.4626%" y="255.50"></text></g><g><title>__GI___libc_write (12,705,281 samples, 0.02%)</title><rect x="88.2126%" y="229" width="0.0168%" height="15" fill="rgb(222,94,11)" fg:x="66749262988" fg:w="12705281"/><text x="88.4626%" y="239.50"></text></g><g><title>__syscall_cancel (12,705,281 samples, 0.02%)</title><rect x="88.2126%" y="213" width="0.0168%" height="15" fill="rgb(249,113,6)" fg:x="66749262988" fg:w="12705281"/><text x="88.4626%" y="223.50"></text></g><g><title>__internal_syscall_cancel (12,705,281 samples, 0.02%)</title><rect x="88.2126%" y="197" width="0.0168%" height="15" fill="rgb(238,137,36)" fg:x="66749262988" fg:w="12705281"/><text x="88.4626%" y="207.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12,705,281 samples, 0.02%)</title><rect x="88.2126%" y="181" width="0.0168%" height="15" fill="rgb(210,102,26)" fg:x="66749262988" fg:w="12705281"/><text x="88.4626%" y="191.50"></text></g><g><title>do_syscall_64 (12,705,281 samples, 0.02%)</title><rect x="88.2126%" y="165" width="0.0168%" height="15" fill="rgb(218,30,30)" fg:x="66749262988" fg:w="12705281"/><text x="88.4626%" y="175.50"></text></g><g><title>__sysvec_apic_timer_interrupt (8,768,382 samples, 0.01%)</title><rect x="88.2522%" y="757" width="0.0116%" height="15" fill="rgb(214,67,26)" fg:x="66779204249" fg:w="8768382"/><text x="88.5022%" y="767.50"></text></g><g><title>hrtimer_interrupt (8,768,382 samples, 0.01%)</title><rect x="88.2522%" y="741" width="0.0116%" height="15" fill="rgb(251,9,53)" fg:x="66779204249" fg:w="8768382"/><text x="88.5022%" y="751.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (25,992,423 samples, 0.03%)</title><rect x="88.2352%" y="789" width="0.0344%" height="15" fill="rgb(228,204,25)" fg:x="66766353798" fg:w="25992423"/><text x="88.4852%" y="799.50"></text></g><g><title>sysvec_apic_timer_interrupt (13,141,972 samples, 0.02%)</title><rect x="88.2522%" y="773" width="0.0174%" height="15" fill="rgb(207,153,8)" fg:x="66779204249" fg:w="13141972"/><text x="88.5022%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8,857,656 samples, 0.01%)</title><rect x="88.2754%" y="789" width="0.0117%" height="15" fill="rgb(242,9,16)" fg:x="66796730364" fg:w="8857656"/><text x="88.5254%" y="799.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (8,857,656 samples, 0.01%)</title><rect x="88.2754%" y="773" width="0.0117%" height="15" fill="rgb(217,211,10)" fg:x="66796730364" fg:w="8857656"/><text x="88.5254%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8,857,656 samples, 0.01%)</title><rect x="88.2754%" y="757" width="0.0117%" height="15" fill="rgb(219,228,52)" fg:x="66796730364" fg:w="8857656"/><text x="88.5254%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8,857,656 samples, 0.01%)</title><rect x="88.2754%" y="741" width="0.0117%" height="15" fill="rgb(231,92,29)" fg:x="66796730364" fg:w="8857656"/><text x="88.5254%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8,857,656 samples, 0.01%)</title><rect x="88.2754%" y="725" width="0.0117%" height="15" fill="rgb(232,8,23)" fg:x="66796730364" fg:w="8857656"/><text x="88.5254%" y="735.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8,396,929 samples, 0.01%)</title><rect x="88.2871%" y="789" width="0.0111%" height="15" fill="rgb(216,211,34)" fg:x="66805588020" fg:w="8396929"/><text x="88.5371%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (17,582,600 samples, 0.02%)</title><rect x="88.2982%" y="773" width="0.0232%" height="15" fill="rgb(236,151,0)" fg:x="66813984949" fg:w="17582600"/><text x="88.5482%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (17,582,600 samples, 0.02%)</title><rect x="88.2982%" y="757" width="0.0232%" height="15" fill="rgb(209,168,3)" fg:x="66813984949" fg:w="17582600"/><text x="88.5482%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (13,160,149 samples, 0.02%)</title><rect x="88.3040%" y="741" width="0.0174%" height="15" fill="rgb(208,129,28)" fg:x="66818407400" fg:w="13160149"/><text x="88.5540%" y="751.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (26,156,327 samples, 0.03%)</title><rect x="88.3214%" y="741" width="0.0346%" height="15" fill="rgb(229,78,22)" fg:x="66831567549" fg:w="26156327"/><text x="88.5714%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (26,156,327 samples, 0.03%)</title><rect x="88.3214%" y="725" width="0.0346%" height="15" fill="rgb(228,187,13)" fg:x="66831567549" fg:w="26156327"/><text x="88.5714%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (26,156,327 samples, 0.03%)</title><rect x="88.3214%" y="709" width="0.0346%" height="15" fill="rgb(240,119,24)" fg:x="66831567549" fg:w="26156327"/><text x="88.5714%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17,637,760 samples, 0.02%)</title><rect x="88.3327%" y="693" width="0.0233%" height="15" fill="rgb(209,194,42)" fg:x="66840086116" fg:w="17637760"/><text x="88.5827%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8,818,153 samples, 0.01%)</title><rect x="88.3443%" y="677" width="0.0117%" height="15" fill="rgb(247,200,46)" fg:x="66848905723" fg:w="8818153"/><text x="88.5943%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (52,537,275 samples, 0.07%)</title><rect x="88.2982%" y="789" width="0.0694%" height="15" fill="rgb(218,76,16)" fg:x="66813984949" fg:w="52537275"/><text x="88.5482%" y="799.50"></text></g><g><title>hashbrown::map::make_hash (34,954,675 samples, 0.05%)</title><rect x="88.3214%" y="773" width="0.0462%" height="15" fill="rgb(225,21,48)" fg:x="66831567549" fg:w="34954675"/><text x="88.5714%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (34,954,675 samples, 0.05%)</title><rect x="88.3214%" y="757" width="0.0462%" height="15" fill="rgb(239,223,50)" fg:x="66831567549" fg:w="34954675"/><text x="88.5714%" y="767.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (8,798,348 samples, 0.01%)</title><rect x="88.3560%" y="741" width="0.0116%" height="15" fill="rgb(244,45,21)" fg:x="66857723876" fg:w="8798348"/><text x="88.6060%" y="751.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (8,798,348 samples, 0.01%)</title><rect x="88.3560%" y="725" width="0.0116%" height="15" fill="rgb(232,33,43)" fg:x="66857723876" fg:w="8798348"/><text x="88.6060%" y="735.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (8,798,348 samples, 0.01%)</title><rect x="88.3560%" y="709" width="0.0116%" height="15" fill="rgb(209,8,3)" fg:x="66857723876" fg:w="8798348"/><text x="88.6060%" y="719.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (8,798,348 samples, 0.01%)</title><rect x="88.3560%" y="693" width="0.0116%" height="15" fill="rgb(214,25,53)" fg:x="66857723876" fg:w="8798348"/><text x="88.6060%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12,785,590 samples, 0.02%)</title><rect x="88.3734%" y="677" width="0.0169%" height="15" fill="rgb(254,186,54)" fg:x="66870944452" fg:w="12785590"/><text x="88.6234%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (8,295,167 samples, 0.01%)</title><rect x="88.3794%" y="661" width="0.0110%" height="15" fill="rgb(208,174,49)" fg:x="66875434875" fg:w="8295167"/><text x="88.6294%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8,295,167 samples, 0.01%)</title><rect x="88.3794%" y="645" width="0.0110%" height="15" fill="rgb(233,191,51)" fg:x="66875434875" fg:w="8295167"/><text x="88.6294%" y="655.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (8,295,167 samples, 0.01%)</title><rect x="88.3794%" y="629" width="0.0110%" height="15" fill="rgb(222,134,10)" fg:x="66875434875" fg:w="8295167"/><text x="88.6294%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8,295,167 samples, 0.01%)</title><rect x="88.3794%" y="613" width="0.0110%" height="15" fill="rgb(230,226,20)" fg:x="66875434875" fg:w="8295167"/><text x="88.6294%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8,295,167 samples, 0.01%)</title><rect x="88.3794%" y="597" width="0.0110%" height="15" fill="rgb(251,111,25)" fg:x="66875434875" fg:w="8295167"/><text x="88.6294%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (17,077,185 samples, 0.02%)</title><rect x="88.3734%" y="789" width="0.0226%" height="15" fill="rgb(224,40,46)" fg:x="66870944452" fg:w="17077185"/><text x="88.6234%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner::with_capacity (17,077,185 samples, 0.02%)</title><rect x="88.3734%" y="773" width="0.0226%" height="15" fill="rgb(236,108,47)" fg:x="66870944452" fg:w="17077185"/><text x="88.6234%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (17,077,185 samples, 0.02%)</title><rect x="88.3734%" y="757" width="0.0226%" height="15" fill="rgb(234,93,0)" fg:x="66870944452" fg:w="17077185"/><text x="88.6234%" y="767.50"></text></g><g><title>hashbrown::control::tag::TagSliceExt::fill_empty (17,077,185 samples, 0.02%)</title><rect x="88.3734%" y="741" width="0.0226%" height="15" fill="rgb(224,213,32)" fg:x="66870944452" fg:w="17077185"/><text x="88.6234%" y="751.50"></text></g><g><title>&lt;[hashbrown::control::tag::Tag] as hashbrown::control::tag::TagSliceExt&gt;::fill_tag (17,077,185 samples, 0.02%)</title><rect x="88.3734%" y="725" width="0.0226%" height="15" fill="rgb(251,11,48)" fg:x="66870944452" fg:w="17077185"/><text x="88.6234%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (17,077,185 samples, 0.02%)</title><rect x="88.3734%" y="709" width="0.0226%" height="15" fill="rgb(236,173,5)" fg:x="66870944452" fg:w="17077185"/><text x="88.6234%" y="719.50"></text></g><g><title>core::intrinsics::write_bytes (17,077,185 samples, 0.02%)</title><rect x="88.3734%" y="693" width="0.0226%" height="15" fill="rgb(230,95,12)" fg:x="66870944452" fg:w="17077185"/><text x="88.6234%" y="703.50"></text></g><g><title>mws5::dict::Dict::is_fit (17,577,250 samples, 0.02%)</title><rect x="88.3960%" y="789" width="0.0232%" height="15" fill="rgb(232,209,1)" fg:x="66888021637" fg:w="17577250"/><text x="88.6460%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (17,577,250 samples, 0.02%)</title><rect x="88.3960%" y="773" width="0.0232%" height="15" fill="rgb(232,6,1)" fg:x="66888021637" fg:w="17577250"/><text x="88.6460%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (17,577,250 samples, 0.02%)</title><rect x="88.3960%" y="757" width="0.0232%" height="15" fill="rgb(210,224,50)" fg:x="66888021637" fg:w="17577250"/><text x="88.6460%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17,577,250 samples, 0.02%)</title><rect x="88.3960%" y="741" width="0.0232%" height="15" fill="rgb(228,127,35)" fg:x="66888021637" fg:w="17577250"/><text x="88.6460%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17,577,250 samples, 0.02%)</title><rect x="88.3960%" y="725" width="0.0232%" height="15" fill="rgb(245,102,45)" fg:x="66888021637" fg:w="17577250"/><text x="88.6460%" y="735.50"></text></g><g><title>core::iter::adapters::copied::copy_try_fold::_{{closure}} (8,819,484 samples, 0.01%)</title><rect x="88.4076%" y="709" width="0.0117%" height="15" fill="rgb(214,1,49)" fg:x="66896779403" fg:w="8819484"/><text x="88.6576%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (8,819,484 samples, 0.01%)</title><rect x="88.4076%" y="693" width="0.0117%" height="15" fill="rgb(226,163,40)" fg:x="66896779403" fg:w="8819484"/><text x="88.6576%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8,819,484 samples, 0.01%)</title><rect x="88.4076%" y="677" width="0.0117%" height="15" fill="rgb(239,212,28)" fg:x="66896779403" fg:w="8819484"/><text x="88.6576%" y="687.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (8,819,484 samples, 0.01%)</title><rect x="88.4076%" y="661" width="0.0117%" height="15" fill="rgb(220,20,13)" fg:x="66896779403" fg:w="8819484"/><text x="88.6576%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::_{{closure}} (30,475,706 samples, 0.04%)</title><rect x="88.4425%" y="645" width="0.0403%" height="15" fill="rgb(210,164,35)" fg:x="66923229661" fg:w="30475706"/><text x="88.6925%" y="655.50"></text></g><g><title>mws5::dict::Dict::matches::_{{closure}} (21,659,815 samples, 0.03%)</title><rect x="88.4542%" y="629" width="0.0286%" height="15" fill="rgb(248,109,41)" fg:x="66932045552" fg:w="21659815"/><text x="88.7042%" y="639.50"></text></g><g><title>core::iter::adapters::copied::copy_fold::_{{closure}} (47,873,091 samples, 0.06%)</title><rect x="88.4425%" y="677" width="0.0633%" height="15" fill="rgb(238,23,50)" fg:x="66923229661" fg:w="47873091"/><text x="88.6925%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (47,873,091 samples, 0.06%)</title><rect x="88.4425%" y="661" width="0.0633%" height="15" fill="rgb(211,48,49)" fg:x="66923229661" fg:w="47873091"/><text x="88.6925%" y="671.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (17,397,385 samples, 0.02%)</title><rect x="88.4828%" y="645" width="0.0230%" height="15" fill="rgb(223,36,21)" fg:x="66953705367" fg:w="17397385"/><text x="88.7328%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (99,952,412 samples, 0.13%)</title><rect x="88.4192%" y="773" width="0.1321%" height="15" fill="rgb(207,123,46)" fg:x="66905598887" fg:w="99952412"/><text x="88.6692%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (99,952,412 samples, 0.13%)</title><rect x="88.4192%" y="757" width="0.1321%" height="15" fill="rgb(240,218,32)" fg:x="66905598887" fg:w="99952412"/><text x="88.6692%" y="767.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (99,952,412 samples, 0.13%)</title><rect x="88.4192%" y="741" width="0.1321%" height="15" fill="rgb(252,5,43)" fg:x="66905598887" fg:w="99952412"/><text x="88.6692%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (99,952,412 samples, 0.13%)</title><rect x="88.4192%" y="725" width="0.1321%" height="15" fill="rgb(252,84,19)" fg:x="66905598887" fg:w="99952412"/><text x="88.6692%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (99,952,412 samples, 0.13%)</title><rect x="88.4192%" y="709" width="0.1321%" height="15" fill="rgb(243,152,39)" fg:x="66905598887" fg:w="99952412"/><text x="88.6692%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (99,952,412 samples, 0.13%)</title><rect x="88.4192%" y="693" width="0.1321%" height="15" fill="rgb(234,160,15)" fg:x="66905598887" fg:w="99952412"/><text x="88.6692%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (34,448,547 samples, 0.05%)</title><rect x="88.5058%" y="677" width="0.0455%" height="15" fill="rgb(237,34,20)" fg:x="66971102752" fg:w="34448547"/><text x="88.7558%" y="687.50"></text></g><g><title>mws5::dict::Dict::match_count (104,373,019 samples, 0.14%)</title><rect x="88.4192%" y="789" width="0.1379%" height="15" fill="rgb(229,97,13)" fg:x="66905598887" fg:w="104373019"/><text x="88.6692%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (104,893,366 samples, 0.14%)</title><rect x="88.8266%" y="741" width="0.1386%" height="15" fill="rgb(234,71,50)" fg:x="67213813539" fg:w="104893366"/><text x="89.0766%" y="751.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (61,485,925 samples, 0.08%)</title><rect x="88.8839%" y="725" width="0.0813%" height="15" fill="rgb(253,155,4)" fg:x="67257220980" fg:w="61485925"/><text x="89.1339%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (456,993,223 samples, 0.60%)</title><rect x="88.5625%" y="773" width="0.6039%" height="15" fill="rgb(222,185,37)" fg:x="67014019152" fg:w="456993223"/><text x="88.8125%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (456,993,223 samples, 0.60%)</title><rect x="88.5625%" y="757" width="0.6039%" height="15" fill="rgb(251,177,13)" fg:x="67014019152" fg:w="456993223"/><text x="88.8125%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (152,305,470 samples, 0.20%)</title><rect x="88.9652%" y="741" width="0.2013%" height="15" fill="rgb(250,179,40)" fg:x="67318706905" fg:w="152305470"/><text x="89.2152%" y="751.50"></text></g><g><title>mws5::search::_&lt;impl mws5::appstate::AppState&gt;::find_all::_{{closure}} (152,305,470 samples, 0.20%)</title><rect x="88.9652%" y="725" width="0.2013%" height="15" fill="rgb(242,44,2)" fg:x="67318706905" fg:w="152305470"/><text x="89.2152%" y="735.50"></text></g><g><title>mws5::search::&lt;impl mws5::appstate::AppState&gt;::find_all (478,706,231 samples, 0.63%)</title><rect x="88.5572%" y="789" width="0.6326%" height="15" fill="rgb(216,177,13)" fg:x="67009971906" fg:w="478706231"/><text x="88.8072%" y="799.50"></text></g><g><title>mws5::squares::Square::set_pos (13,242,639 samples, 0.02%)</title><rect x="89.1723%" y="773" width="0.0175%" height="15" fill="rgb(216,106,43)" fg:x="67475435498" fg:w="13242639"/><text x="89.4223%" y="783.50"></text></g><g><title>mws5 (75,668,593,578 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(216,183,2)" fg:x="0" fg:w="75668593578"/><text x="0.2500%" y="815.50">mws5</text></g><g><title>mws5::words::Word::is_fit (8,175,497,977 samples, 10.80%)</title><rect x="89.1957%" y="789" width="10.8043%" height="15" fill="rgb(249,75,3)" fg:x="67493095601" fg:w="8175497977"/><text x="89.4457%" y="799.50">mws5::words::Wor..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,515,526,086 samples, 4.65%)</title><rect x="95.3540%" y="773" width="4.6460%" height="15" fill="rgb(219,67,39)" fg:x="72153067492" fg:w="3515526086"/><text x="95.6040%" y="783.50">&lt;core..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3,515,526,086 samples, 4.65%)</title><rect x="95.3540%" y="757" width="4.6460%" height="15" fill="rgb(253,228,2)" fg:x="72153067492" fg:w="3515526086"/><text x="95.6040%" y="767.50">&lt;core..</text></g><g><title>&lt;core::iter::sources::from_fn::FromFn&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,515,526,086 samples, 4.65%)</title><rect x="95.3540%" y="741" width="4.6460%" height="15" fill="rgb(235,138,27)" fg:x="72153067492" fg:w="3515526086"/><text x="95.6040%" y="751.50">&lt;core..</text></g><g><title>mws5::words::Word::bits::_{{closure}} (3,515,526,086 samples, 4.65%)</title><rect x="95.3540%" y="725" width="4.6460%" height="15" fill="rgb(236,97,51)" fg:x="72153067492" fg:w="3515526086"/><text x="95.6040%" y="735.50">mws5:..</text></g><g><title>all (75,668,593,854 samples, 100%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(240,80,30)" fg:x="0" fg:w="75668593854"/><text x="0.2500%" y="831.50"></text></g></svg></svg>